[{"/Users/vikke/bachelor/src/index.js":"1","/Users/vikke/bachelor/src/App.js":"2","/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js":"3","/Users/vikke/bachelor/src/Modal/Modal.js":"4","/Users/vikke/bachelor/src/Header/Header.js":"5","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js":"6","/Users/vikke/bachelor/src/useFetch.js":"7","/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js":"8","/Users/vikke/bachelor/src/CustomButton/CustomButton.js":"9","/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js":"10","/Users/vikke/bachelor/src/CustomButton/InfoButton.js":"11","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js":"12","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js":"13","/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js":"14","/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js":"15","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js":"16","/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js":"17","/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js":"18","/Users/vikke/bachelor/src/Semester/Semester.js":"19","/Users/vikke/bachelor/src/Print/Print.js":"20","/Users/vikke/bachelor/src/Semester/Semester6Psyko.js":"21","/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js":"22","/Users/vikke/bachelor/src/Helpers.js":"23"},{"size":221,"mtime":1616420130919,"results":"24","hashOfConfig":"25"},{"size":706,"mtime":1616420130903,"results":"26","hashOfConfig":"25"},{"size":5730,"mtime":1617962524498,"results":"27","hashOfConfig":"25"},{"size":726,"mtime":1616755390099,"results":"28","hashOfConfig":"25"},{"size":430,"mtime":1617785477040,"results":"29","hashOfConfig":"25"},{"size":1839,"mtime":1617964479537,"results":"30","hashOfConfig":"25"},{"size":1526,"mtime":1617795552005,"results":"31","hashOfConfig":"25"},{"size":2247,"mtime":1617015099343,"results":"32","hashOfConfig":"25"},{"size":326,"mtime":1616420130903,"results":"33","hashOfConfig":"25"},{"size":4628,"mtime":1617794688629,"results":"34","hashOfConfig":"25"},{"size":341,"mtime":1616420130903,"results":"35","hashOfConfig":"25"},{"size":5404,"mtime":1617791568282,"results":"36","hashOfConfig":"25"},{"size":2450,"mtime":1617965003978,"results":"37","hashOfConfig":"25"},{"size":25391,"mtime":1617965497590,"results":"38","hashOfConfig":"25"},{"size":2718,"mtime":1617965003973,"results":"39","hashOfConfig":"25"},{"size":2699,"mtime":1617965003972,"results":"40","hashOfConfig":"25"},{"size":2864,"mtime":1617965003972,"results":"41","hashOfConfig":"25"},{"size":9274,"mtime":1617797717527,"results":"42","hashOfConfig":"25"},{"size":2595,"mtime":1617965003970,"results":"43","hashOfConfig":"25"},{"size":908,"mtime":1616420130906,"results":"44","hashOfConfig":"25"},{"size":3090,"mtime":1617965003971,"results":"45","hashOfConfig":"25"},{"size":3898,"mtime":1617965003983,"results":"46","hashOfConfig":"25"},{"size":100,"mtime":1617793538065,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"12k2fam",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/vikke/bachelor/src/index.js",[],["108","109"],"/Users/vikke/bachelor/src/App.js",["110","111"],"import Navbar from \"./Header/Header\";\nimport KlasseList from \"./VelgKlasse/KlasseList\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Modal from \"./Modal/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\n//<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl\" crossorigin=\"anonymous\"></link>\n\nfunction App() {\n  return (\n    \n      <div className=\"App\">\n        <Navbar />\n\n        <div className=\"content\">\n          <div className=\"body\">\n            <KlasseList />\n          </div>\n        </div>\n      </div>\n   \n  );\n}\n\nexport default App;\n","/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js",["112","113","114","115","116","117","118","119","120"],"/Users/vikke/bachelor/src/Modal/Modal.js",["121"],"import React from 'react'\nimport ReactDom from 'react-dom';\nimport { FaEnvelopeOpenText, FaRegWindowClose } from 'react-icons/fa';\nimport './Modal.css';\n\nexport default function Modal({children, open, onClose}) {\n    if (! open) return null\n\n    //Create portal gjør at man kan ha den i original html (DOM) index.html\n    //Gjør at man kan manipulere og bruke popupen over alt det andre\n    return ReactDom.createPortal (\n        <>\n    \n        <div className='popup'>\n        <div className=\"popup-inner\">\n            <FaRegWindowClose onClick={onClose} size='1.5em' className=\"close-btn\"/>\n            {children}\n            </div>\n          </div>\n        </>,\n        document.getElementById('portal')\n        \n    )\n}\n","/Users/vikke/bachelor/src/Header/Header.js",["122"],"import './Header.css';\nimport logo2 from './OsloMet logo for nett.png';\nimport logo3 from './LogoOsloMet.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Header = () => {\n    return ( \n        \n    <div className=\"header\">       \n        <img src={logo3} alt=\"OslometLogo\"/>\n        <h1>Gjør deg kjent med de ulike retningene ved lærerutdanningen på OsloMet!</h1>\n    </div>\n\n    );\n      \n}\n \nexport default Header;","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js",["123"],"/Users/vikke/bachelor/src/useFetch.js",["124"],"import {useState, useEffect} from 'react';\n\n        //must pass in the url to fetch\nconst useFetch = (url, id) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n    const [obligFag, setObligFag] = useState(null);\n    \n      //runs every re-render\n      //Fetch data når komponent rendrer, så updates state\n    useEffect(() => {\n        const abortCont = new AbortController();\n        console.log('use effetct ran');\n\n        fetch(url, {signal: AbortController.signal})\n          .then(res => {\n              \n              if(!res.ok){\n                  throw Error('Could not fetch the data for that resource');\n                  \n              }\n              return res.json()\n          })\n          .then(data => {\n              setData(data);\n              setIsPending(false);\n              setError(null);\n              setObligFag(obligFag);\n              \n\n          })\n          .catch(err => {\n              if(err.name === 'AbortError'){\n                  console.log('fetch aborted');\n              }\n              else{\n                setIsPending(false);\n                setError(err.message);\n              }\n              \n\n          })\n        return () => abortCont.abort();\n        //the dependency array [] below makes sure that the useEffect hook\n        //only run the function after the first initial render\n    }, [url]);\n\n    return {data, isPending, error, obligFag}\n\n}\n\nexport default useFetch;","/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js",["125","126","127"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport VelgMaster from \"../VelgMaster/VelgMaster\";\n\nconst VelgStudierettning = ({ setStudieRetning, valgtObligFag, setValgtObligFag, fagNavnStudierettning, setFagNavnStudierettning }) => {\n  //setter masterfag tabellen til masterFag\n  const { data: masterFag, error, isPending } = useFetch(\n    `http://localhost:5000/api/masterfag/`\n  );\n\n\n\n  //Sette farge valgt semester\n  const [activeButton, setActiveButton] = useState();\n\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n  console.log('valgtObligFag', valgtObligFag);\n  console.log('fagNavnStudierettning', fagNavnStudierettning);\n\n\n  return (\n    <>\n      \n\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <h2>Velg et emne 5-10: </h2>\n          <div className=\"masterfag\">\n            {masterFag &&\n              masterFag.map((oblig) => {\n                const className = activeButton === oblig.id ? \"red\" : \"\";\n\n                return (\n                  //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n                  \n                  oblig.id ===15|| \n                  oblig.id ===16|| \n                  oblig.id ===17 ?\n                   (\n                    <>\n                      <div className=\"masterknapper\">\n                        <CustomButton\n                          inverted={className}\n                          key={oblig.id}\n                          options={oblig}\n                          activeButton={activeButton}\n                          onClick={() => {\n                            setStudieRetning(oblig.id)\n                            setValgtObligFag(oblig.id)\n                            onSideBtnClick(oblig);\n                            setFagNavnStudierettning(oblig.fagnavn)\n                          }}\n                        >\n                          {oblig.fagnavn}\n                        </CustomButton>\n                      </div>\n                    </>\n                  ): null\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default VelgStudierettning;\n","/Users/vikke/bachelor/src/CustomButton/CustomButton.js",[],"/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js",["128","129","130","131","132","133","134","135","136"],"import React, {useState, useReducer, useRef, useEffect} from 'react'\nimport './VelgMaster.css';\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nimport ObligFagCard from '../oblig-fag/oblig-fag-card';\nimport { FaEnvelopeOpenText } from 'react-icons/fa';\nimport InfoButton from '../CustomButton/InfoButton';\nimport Modal from '../Modal/Modal';\nimport { AiOutlineArrowDown } from 'react-icons/ai';\nimport {handleClick} from '../Helpers';\n\n\nconst _ = require(\"lodash\");  \n\n\n\nconst VelgMaster = ({divRef, studieRetning, answer, studieId, fagNavnStudierettning}) => {\n\n    //setter masterfag tabellen til masterFag\n    const {data: masterFag, error, isPending} = useFetch(`http://localhost:5000/api/masterfag/`);\n    \n    // slik at det brukes/ lagres i neste komponent\n    const [fagNavn, setFagnavn] = useState();\n    const [masterId, setMasterId] = useState();\n    const [visVidere, setVisVidere] = useState(false);    \n\n    const [klasseId, setKlasseId] = useState();\n\n    console.log(\"studieRetning\", studieRetning);\n\n     //Sette farge valgt semester\n     const [activeButton, setActiveButton] = useState();\n    \n\n     const onSideBtnClick = e => {\n        \n        setActiveButton(e.id);\n        //alert(e.id);\n    };\n   \n  \n\n    //det under er for smooth scroll\n  const obligDivRef = useRef();\n\n  \n  const handleScrollClick = () => {\n      visVidere&&\n    obligDivRef.current.scrollIntoView({ behavior: \"smooth\", inline: 'center', block: 'center' });\n  };\n\n  //filtrer slik at fag man velger i 5-10, norsk engelsk eller matte, blir filtrert ut\n  let filtered_klassetrinn = _.filter(masterFag, function(klasse)\n    { return klasse.fagnavn !== fagNavnStudierettning;}\n)\n   \n    return ( \n        <>\n<div class=\"row\" id=\"Masteremner\" ref={divRef}>\n    <div class=\"column\" id=\"Hundre\">\n    <h3>Velg Masteremne</h3>\n    </div>\n    <div class=\"column\" id=\"Tjue\">\n    </div>\n\n    <div class=\"column\" id=\"Atti\">\n        <h2 id=\"Left\">Velg et masteremne og se hvordan du må bygge oppstudiet for å kunne skrive masteroppgave i det valgt emnet</h2>\n        <p id=\"Beskrivelse\">Valget du gjør her vil påvirke valgmulighetene resten av studiet. For å kunne skrive master i et av de\n            følgende emnene må du ha nok studiepoeng i valgt emne for å kunne skrive masteroppgave i det aktuelle faget. <br /><br />\n\n            Du kan senere gå tilbake til denne delen og velge et annet mastermne du kunne være interessert i å skrive masteroppgave. <br /><br />\n\n            <bold>Alle mulighetene er listet opp under!</bold>\n        </p>\n    </div>  \n</div>\n\n\n<div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n    <h2>Velg et masteremne: </h2> \n        <div className='masterfag'>\n            {\n                masterFag && filtered_klassetrinn.map(oblig=>{\n                    const className = activeButton === oblig.id ? \"red\" : \"\";\n\n                    return(\n                        //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n                    oblig.klasseId === answer &&\n                    \n                    \n                    <>\n                    \n                    <div className='masterknapper'>\n                        <CustomButton\n                            inverted={className}\n                            key={oblig.id}\n                            options={oblig}\n                            activeButton={activeButton}\n                                        \n                            onClick={() =>{\n                                handleClick(oblig)\n                                setMasterId(oblig.id)\n                                setFagnavn(oblig.fagnavn)\n                                setVisVidere(true)\n                                onSideBtnClick(oblig)\n                                \n                                \n                            }}\n                            >\n                            {oblig.fagnavn}\n                        </CustomButton>\n                    </div>    \n                </>\n\n\n                    )\n                    \n                        })\n            }       \n        </div>\n    </div>\n    <AiOutlineArrowDown size={40} onClick={handleScrollClick} ></AiOutlineArrowDown>\n</div>\n        \n        \n        {   \n            visVidere&&\n            <ObligFagCard obligDivRef={obligDivRef} studieRetning={studieRetning} fagNavnStudierettning={fagNavnStudierettning} masterId={masterId} fagNavn={fagNavn} answer={answer}/>\n        \n        }\n        \n        \n        \n       \n        \n        </>\n\n        \n        \n     );\n};\nexport default VelgMaster;\n","/Users/vikke/bachelor/src/CustomButton/InfoButton.js",[],"/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js",["137","138","139","140","141","142","143"],"import React, {useRef, useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport Modal from '../Modal/Modal';\nimport VelgMuligheter from '../VelgMuligheter/VelgMuligheter';\nimport ObligFagSemester from './oblig-fag-semester';\nimport './oblig-fag.css';\nimport Elever from './Elever.jpeg';\nimport ObligFagSemester2 from './ObligFagSemester2';\nimport { AiOutlineArrowDown } from 'react-icons/ai';\n\n\nconst ObligFagCard = ({obligDivRef, studieRetning, answer, masterId, obj, fagNavn, fagNavnStudierettning}) => {\n\n    \n    \n    const [visVidere, setVisVidere] = useState(false);\n    \n    function visVidereClick(visVidere){\n        console.log('vis videre klikket');\n        console.log(visVidere);\n        \n        setVisVidere(true)\n    }\n\n       //det under er for smooth scroll\n  const velgMuligheterDivRef = useRef();\n\n  const handleScrollClick = () => {\n    velgMuligheterDivRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n \n    return (  \n        <>\n    <div class=\"row\" ref={obligDivRef}>\n    <div class=\"column\" id=\"Hundre\">\n    <h3>Obligatoriske emner</h3>\n    </div>\n    <div class=\"column\" id=\"MasterBilde\">\n    </div>\n\n    <div class=\"column\" id=\"Atti\">\n        <h2 id=\"Left\">Oversikt over de obligatoriske emnene i de tre første semestrene</h2>\n        <p id=\"Beskrivelse\">De tre første semesterene består kun av obligatoriske emner. Disse er felles for begge studieretninger og \n            påvirker ikke masteroppgaven. I løpet av de tre første semestrene vil alle gjennomføre eksamner i Norsk og Matematikk, \n            samt få innføring i pedagogikk. <br /><br />\n            <bold>De obligatoriske emnene er listet opp under!</bold>\n        </p>\n    </div>  \n</div>\n\n\n    <div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n                <h5>Semester 1</h5> \n                <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n                <div className=\"fag\">\n                    { //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                    answer ===2  ?(\n                                <ObligFagSemester2 fagNavnStudierettning={fagNavnStudierettning} semester={1} answer={answer}/>\n                            ) :(\n\n                                // det sorterte arrayet mappes\n                                <ObligFagSemester id=\"IkkeKnapp\" semester={1} answer={answer}/>\n                            )\n                    }\n                </div>\n            </div>\n            \n                \n\n       \n            <div className=\"Forti\">\n                <h5>Semester 2</h5>\n                <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p>\n                <div className=\"fag\">\n                { //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                    answer ===2  ?(\n                            <ObligFagSemester2 fagNavnStudierettning={fagNavnStudierettning} semester={2} answer={answer}/>\n                        ) :(\n\n                            // det sorterte arrayet mappes\n                            <ObligFagSemester id=\"IkkeKnapp\" semester={2} answer={answer}/>\n                        )\n                }\n                </div>\n            </div>\n    \n        \n        \n            \n\n            <div className=\"obligkort\">\n                <h5>Semester 3</h5>\n                <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n                <div className=\"fag\">\n                   { //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                    answer ===2  ?(\n                        <ObligFagSemester2 fagNavnStudierettning={fagNavnStudierettning} semester={3} answer={answer}/>\n                    ) :(\n\n                        // det sorterte arrayet mappes\n                        <ObligFagSemester id=\"IkkeKnapp\" semester={3} answer={answer}/>\n                    )\n            }\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n\n    <div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n    <h3>Veien Videre</h3></div>\n    <div class=\"column\" id=\"BygningBilde\"></div>\n\n    <div class=\"column\" id=\"Atti\">\n        <h2 id=\"Left\">Få oversikt over emnene du må ta, samt hvilke semestre du kan velge valgfrie emner</h2>\n        <p id=\"Beskrivelse\">Semester fire er det semesteret man først får lov til å velge fag selv. her kan du velge mellom en del ulike fag.\n        Fagene du trenger for å gå opp til master er allerede lagt inn og er <bold>markert i gult. </bold> \n        Så du får muligheten til å ta et fag til og få 60 studiepoeng i det emne, det er ikke nødvendig å ha 60 studiepoeng i det valgfrie\n        emne, men er en fin ting å tenke på om du får lyst til å endre studieløpet underveis i studie.\n        </p>\n    </div> \n</div> \n\n\n    \n    <div>         \n        \n        {\n            \n           \n            <VelgMuligheter studieRetning={studieRetning} fagNavn ={fagNavn} masterId={masterId} answer={answer} obj={obj}></VelgMuligheter>\n            \n\n       \n        }\n        \n    </div>    \n\n        \n       \n        </>\n        \n        \n     );\n};\nexport default ObligFagCard;","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js",["144","145","146"],"/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js",["147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162"],"/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js",["163","164","165"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport useFetch from \"../useFetch\";\nconst _ = require(\"lodash\");\n\n\nconst ObligFagSemester2 = ({answer, semester, fagNavnStudierettning}) => {\n    const { data: klassetrinn, error, isPending } = useFetch(\n        `http://localhost:5000/api/obligfag/`\n      );\n    \n      const [fagnavn, setFagnavn] = useState();\n      //const [semester, setSemester] = useState();\n      const [emnekode, setEmneKode] = useState();\n      const [studiepoeng, setStudiepoeng] = useState();\n      const [klasseId, setKlasseId] = useState();\n      const [isOpen, setIsOpen] = useState(false);\n    \n      //lager et array som sortrer etter semester\n      const iteratees = (obj) => obj.semester;\n      const sorted = _.sortBy(klassetrinn, iteratees);\n    \n      console.log('fagNavnStudierettning2', fagNavnStudierettning);\n      return (\n        <>\n          <>\n            {\n              // det sorterte arrayet mappes\n              sorted.map(\n                (oblig) =>\n                  //om klasseId er det samme som answer fra KlasseList =>\n                  oblig.klasseId === answer &&\n                  oblig.semester === semester &&\n                  oblig.fagnavn.includes(fagNavnStudierettning)\n                  ? (\n                    <>\n                    \n                      <CustomButton id=\"Videre\" key={oblig.id}>{oblig.fagnavn} </CustomButton>\n    \n                      <InfoButton \n                        className=\"infoknapp\"\n                        onClick={() => {\n                          setIsOpen(true);\n                          setFagnavn(oblig.fagnavn);\n                          //setSemester(oblig.semester)\n                          setEmneKode(oblig.emnekode);\n                          setStudiepoeng(oblig.studiepoeng);\n                          setKlasseId(oblig.klasseId);\n                          \n                        }}\n                      ></InfoButton>\n                    </>\n                  ) : null\n              )\n            }\n          </>\n    \n          <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n            <h5>Info om {fagnavn}</h5>\n            <br />\n    \n            <ul id=\"Innrykk\">\n              <li>Fagnavn: {fagnavn}</li>\n              <li>Emnekode: {emnekode}</li>\n              <li>Studiepoeng: {studiepoeng}</li>\n            </ul>\n          </Modal>\n        </>\n      );\n}\n \nexport default ObligFagSemester2;","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js",["166"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport InfoButton from '../CustomButton/InfoButton';\nimport Modal from '../Modal/Modal';\nimport Muligheter from '../VelgMuligheter/Muligheter';\n\nconst ValgtMulighet = ({klasseId, semester, klassetrinn, muligheterId}) => {\n    const [fagnavn, setFagnavn] = useState();\n    const [emnekode, setEmneKode] = useState();\n    const [studiepoeng, setStudiepoeng] = useState();\n    const [isOpen, setIsOpen] = useState(false);\n    \n    return ( \n        \n        \n        <>\n        \n            {\n                klassetrinn &&\n                    \n                        klassetrinn.map((oblig)=>(\n                            \n                            \n                            oblig.id === muligheterId &&\n                            \n                        \n                            <>\n                                <CustomButton \n                                    key={oblig.id}\n                                    semester={oblig.semester}\n                                    klasseId = {oblig.klasseId}\n                                    \n                                >\n                                    {oblig.semester} \n\n                                    {oblig.fagnavn}\n                                </CustomButton>\n\n                                <InfoButton \n                                onClick={() =>{ \n                                    setIsOpen(true)\n                                    setFagnavn(oblig.fagnavn)\n                                    //setSemester(oblig.semester)\n                                    setEmneKode(oblig.emnekode)\n                                    setStudiepoeng(oblig.studiepoeng)\n                                    //setKlasseId(oblig.klasseId)\n                                }}>    \n                                </InfoButton>\n                               \n                                          \n                            </>\n                ))\n            }\n            \n            <Modal \n                open= {isOpen} \n                onClose={() => setIsOpen(false)}\n            >\n            <h5>Info om {fagnavn}</h5><br/>\n\n            <ul>\n                <li>\n                Fagnavn: {fagnavn}\n                </li>\n                <li>\n                Emnekode: {emnekode}\n                </li>\n                <li>\n                Studiepoeng: {studiepoeng}\n                </li>\n            </ul>\n        </Modal>\n \n        </>\n        \n        \n    \n        \n        \n     );\n}\n\nexport default ValgtMulighet;","/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js",["167","168","169"],"import React, { useEffect, useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport Modal from \"../Modal/Modal\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport className from \"../Semester/Semester6Psyko\";\n\nconst Muligheter = ({\n  activeButton,\n  setActiveButton,\n  masterId,\n  setIstrue,\n  valg7Master,\n  setValg7Master,\n  setFag,\n  setSemesterList7,\n  semesterList7,\n  semester,\n  klassetrinn,\n  sorted,\n}) => {\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <>\n        {klassetrinn &&\n          sorted.map((oblig) => {\n            const className = activeButton === oblig.id ? \"red\" : \"\";\n\n            return (\n              //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster)\n              oblig.masterFagId === masterId &&\n              oblig.semester === semester && (\n                <>\n                  <CustomButton\n                    //setter fargen på den valgte fagveien\n                    inverted={className}\n                    key={oblig.id}\n                    fag={oblig.fagnavn}\n                    activeButton={activeButton}\n                    onClick={() => {\n                      onSideBtnClick(oblig);\n                      setSemesterList7(oblig.id);\n                      setValg7Master(oblig.masterFagId);\n                      setIstrue(oblig.masterFagId);\n                    }}\n                  >\n                    {oblig.fagnavn}\n                  </CustomButton>\n\n                  <InfoButton\n                    onClick={() => {\n                      setIsOpen(true);\n                      setFagnavn(oblig.fagnavn);\n                      //setSemester(oblig.semester)\n                      setEmneKode(oblig.emnekode);\n                      setStudiepoeng(oblig.studiepoeng);\n                      setKlasseId(oblig.klasseId);\n                      setURL(oblig.url);\n                    }}\n                  ></InfoButton>\n                </>\n              )\n            );\n          })}\n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          {semester === 10 ? null : <li>Fagside: <a href={URL} target=\"_blank\" rel=\"noreferrer\" > Link til fagside </a> </li> }\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Muligheter;\n","/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js",["170","171","172"],"/Users/vikke/bachelor/src/Semester/Semester.js",["173"],"import React, { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport Muligheter from \"../VelgMuligheter/Muligheter\";\nimport './Semester.css';\n\nconst Semester = ({\n  klasseId,\n  semester,\n  klassetrinn,\n  setMuligheterId,\n  activeButton,\n\n  setActiveButton,\n\n  setFag,\n\n}) => {\n\n    \n  //\n\n  \n  //\n  function handleMuligheter(ele) {\n    setMuligheterId(ele);    \n  }\n  const onSideBtnClick = e => {\n        \n    setActiveButton(e.masterFagId);\n   \n};\n\n  const [fagnavn, setFagnavn] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      {klassetrinn &&\n        klassetrinn.map((oblig) => {\n          const className = activeButton === oblig.masterFagId ? \"red\" : \"\";\n          \n          return (\n            //oblig.MasterFagId === masterId &&\n            //om semester = 5 vis semester og semeseter fag\n            oblig.semester === semester &&\n            oblig.klasseId === klasseId && (\n              <>\n                <CustomButton\n                  inverted={className}\n                  key={oblig.id}\n                  semester={oblig.semester}\n                  klasseId={oblig.klasseId}\n                  onClick={() => {\n                    handleMuligheter(oblig.id);\n                    onSideBtnClick(oblig);\n                   \n                   \n\n                  }}\n                >\n                  {oblig.fagnavn}\n                </CustomButton>\n\n                <InfoButton\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    //setKlasseId(oblig.klasseId)\n                  }}\n                ></InfoButton>\n              </>\n            )\n          );\n        })}\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Semester;\n","/Users/vikke/bachelor/src/Print/Print.js",[],"/Users/vikke/bachelor/src/Semester/Semester6Psyko.js",["174","175"],"import React, { useEffect, useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport Muligheter from \"../VelgMuligheter/Muligheter\";\nimport './Semester.css';\nconst _ = require(\"lodash\");  \n\nconst Semester6Psyko = ({\n  klasseId,\n  semester,\n  klassetrinn,\n  setMuligheterId,\n  activeButton,\n  farge,\n  setActiveButton,\n  setMasterFagId,\n  setSemesterList7,\n  setFag,\n  \n  setValgtFag,\n  messages,\n  fag\n  \n\n}) => {\n\n    \n  //filtrer ut årstudium\n  let filtered_klassetrinn = _.filter(klassetrinn, function(klasse)\n    { return klasse.fagnavn !== 'Årstudium norsk, del 2' && klasse.fagnavn !== 'Årstudium matte, del 2' && klasse.fagnavn !== 'Årstudium engelsk, del 2' && klasse.fagnavn !== 'Norsk tegnspråk 2';}\n)\n  //\n  function handleMuligheter(ele) {\n    setMuligheterId(ele);\n    \n  }\n  const onSideBtnClick = e => {\n        \n    setActiveButton(e.masterFagId);\n   \n};\n\n  const [fagnavn, setFagnavn] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  \n\n  return (\n    <>\n      {klassetrinn &&\n        filtered_klassetrinn.map((oblig) => {\n          const className = activeButton === oblig.masterFagId ? \"red\" : \"\";\n          \n          return (\n            //oblig.MasterFagId === masterId &&\n            //om semester = 5 vis semester og semeseter fag\n            oblig.semester === semester &&\n            oblig.klasseId === klasseId && (\n              <>\n                <CustomButton\n                  inverted={className}\n                  key={oblig.id}\n                  semester={oblig.semester}\n                  klasseId={oblig.klasseId}\n                  onClick={() => {\n                    handleMuligheter(oblig.id);\n                    onSideBtnClick(oblig);\n                    setMasterFagId(oblig.masterFagId)\n                    \n                   \n\n                  }}\n                >\n                  {oblig.fagnavn}\n                </CustomButton>\n\n                <InfoButton\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    //setKlasseId(oblig.klasseId)\n                  }}\n                ></InfoButton>\n              </>\n            )\n          );\n        })}\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Semester6Psyko;\n","/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js",["176","177"],"import React, {useEffect, useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport  Modal  from '../Modal/Modal';\nimport InfoButton from '../CustomButton/InfoButton';\n\nfunction TvungenMulighet({activeButton ,setActiveButton, masterId, setIstrue, valg7Master, setValg7Master, setFag, setSemesterList7, semesterList7, semester, klassetrinn, sorted}) {\n    \n    const onSideBtnClick = (e) => {\n        setActiveButton(e.id);\n        //alert(e.id);\n      };\n\n    const [fagnavn, setFagnavn] = useState();\n    const [URL, setURL] = useState();\n    //const [semester, setSemester] = useState();\n    const [emnekode, setEmneKode] = useState();\n    const [studiepoeng, setStudiepoeng] = useState();\n    const [klasseId ,setKlasseId] = useState();\n    const [isOpen, setIsOpen] = useState(false);\n    \n\n    \n       \n    return ( \n        \n        \n        <>\n        < >\n\n        {   \n            klassetrinn&&\n            \n                sorted.map((oblig)=>{\n                    const className = activeButton === oblig.id ? \"red\" : \"\";\n                    \n                        return(\n                            //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster) \n                        oblig.masterFagId === masterId &&\n                        oblig.semester === semester &&\n                        <>\n                        \n                      \n                            <CustomButton\n                            \n                                //setter fargen på den valgte fagveien\n                                inverted={className}\n                                key={oblig.id}\n                                fag={oblig.fagnavn}\n                                activeButton={activeButton}\n                                style={{backgroundColor: '#FFDC00'}}\n                                onClick ={() =>\n                                    \n                                    {\n                                    onSideBtnClick(oblig);\n                                    setSemesterList7(oblig.id);\n                                    setValg7Master(oblig.masterFagId)\n                                    setIstrue(oblig.masterFagId);\n                                    \n                            }}>\n                                {oblig.fagnavn}\n                            </CustomButton>\n\n                            <InfoButton \n                            onClick={() =>{ \n                                setIsOpen(true)\n                                setFagnavn(oblig.fagnavn)\n                                //setSemester(oblig.semester)\n                                setEmneKode(oblig.emnekode)\n                                setStudiepoeng(oblig.studiepoeng)\n                                setKlasseId(oblig.klasseId)\n                                setURL(oblig.url);\n                                \n                            }}>\n                            </InfoButton>\n                            \n\n                       \n                        \n                            \n\n                        </>\n                         )\n                    })\n                }\n\n                \n                \n        \n        </>\n\n            <Modal \n                open= {isOpen} \n                onClose={() => setIsOpen(false)}\n            >\n                <h5>Info om {fagnavn}</h5><br/>\n\n                <ul id=\"Innrykk\">\n                    <li>Fagnavn: {fagnavn}</li>\n                    <li>Emnekode: {emnekode}</li>\n                    <li>Studiepoeng: {studiepoeng}</li>\n                    <li>Fagside: <a href={URL} target=\"_blank\" rel=\"noreferrer\" > Link til fagside </a></li>\n                </ul>\n            </Modal>\n       \n      \n        \n\n               </>\n               \n               \n             );\n            \n\n            };\n\nexport default TvungenMulighet\n","/Users/vikke/bachelor/src/Helpers.js",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"186","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":13},{"ruleId":"182","severity":1,"message":"187","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":20},{"ruleId":"182","severity":1,"message":"188","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":20},{"ruleId":"182","severity":1,"message":"189","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":16},{"ruleId":"182","severity":1,"message":"190","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":16},{"ruleId":"182","severity":1,"message":"191","line":10,"column":8,"nodeType":"184","messageId":"185","endLine":10,"endColumn":20},{"ruleId":"182","severity":1,"message":"192","line":19,"column":31,"nodeType":"184","messageId":"185","endLine":19,"endColumn":36},{"ruleId":"182","severity":1,"message":"193","line":19,"column":38,"nodeType":"184","messageId":"185","endLine":19,"endColumn":47},{"ruleId":"194","severity":1,"message":"195","line":53,"column":14,"nodeType":"184","messageId":"196","endLine":53,"endColumn":25},{"ruleId":"182","severity":1,"message":"197","line":61,"column":14,"nodeType":"184","messageId":"185","endLine":61,"endColumn":28},{"ruleId":"182","severity":1,"message":"198","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":28},{"ruleId":"182","severity":1,"message":"199","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":13},{"ruleId":"182","severity":1,"message":"200","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":47,"column":8,"nodeType":"203","endLine":47,"endColumn":13,"suggestions":"204"},{"ruleId":"182","severity":1,"message":"205","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"192","line":8,"column":28,"nodeType":"184","messageId":"185","endLine":8,"endColumn":33},{"ruleId":"182","severity":1,"message":"193","line":8,"column":35,"nodeType":"184","messageId":"185","endLine":8,"endColumn":44},{"ruleId":"182","severity":1,"message":"206","line":1,"column":26,"nodeType":"184","messageId":"185","endLine":1,"endColumn":36},{"ruleId":"182","severity":1,"message":"207","line":1,"column":46,"nodeType":"184","messageId":"185","endLine":1,"endColumn":55},{"ruleId":"182","severity":1,"message":"198","line":6,"column":10,"nodeType":"184","messageId":"185","endLine":6,"endColumn":28},{"ruleId":"182","severity":1,"message":"208","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":18},{"ruleId":"182","severity":1,"message":"186","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":13},{"ruleId":"182","severity":1,"message":"192","line":20,"column":29,"nodeType":"184","messageId":"185","endLine":20,"endColumn":34},{"ruleId":"182","severity":1,"message":"193","line":20,"column":36,"nodeType":"184","messageId":"185","endLine":20,"endColumn":45},{"ruleId":"182","severity":1,"message":"209","line":27,"column":12,"nodeType":"184","messageId":"185","endLine":27,"endColumn":20},{"ruleId":"182","severity":1,"message":"210","line":27,"column":22,"nodeType":"184","messageId":"185","endLine":27,"endColumn":33},{"ruleId":"182","severity":1,"message":"187","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":20},{"ruleId":"182","severity":1,"message":"186","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":13},{"ruleId":"182","severity":1,"message":"211","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":14},{"ruleId":"182","severity":1,"message":"212","line":9,"column":10,"nodeType":"184","messageId":"185","endLine":9,"endColumn":28},{"ruleId":"182","severity":1,"message":"213","line":16,"column":12,"nodeType":"184","messageId":"185","endLine":16,"endColumn":21},{"ruleId":"182","severity":1,"message":"197","line":18,"column":14,"nodeType":"184","messageId":"185","endLine":18,"endColumn":28},{"ruleId":"182","severity":1,"message":"214","line":28,"column":9,"nodeType":"184","messageId":"185","endLine":28,"endColumn":26},{"ruleId":"182","severity":1,"message":"192","line":11,"column":30,"nodeType":"184","messageId":"185","endLine":11,"endColumn":35},{"ruleId":"182","severity":1,"message":"193","line":11,"column":37,"nodeType":"184","messageId":"185","endLine":11,"endColumn":46},{"ruleId":"182","severity":1,"message":"209","line":20,"column":10,"nodeType":"184","messageId":"185","endLine":20,"endColumn":18},{"ruleId":"182","severity":1,"message":"206","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"186","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":13},{"ruleId":"182","severity":1,"message":"215","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":13},{"ruleId":"182","severity":1,"message":"216","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":21},{"ruleId":"182","severity":1,"message":"217","line":13,"column":8,"nodeType":"184","messageId":"185","endLine":13,"endColumn":14},{"ruleId":"182","severity":1,"message":"208","line":18,"column":8,"nodeType":"184","messageId":"185","endLine":18,"endColumn":18},{"ruleId":"182","severity":1,"message":"192","line":29,"column":31,"nodeType":"184","messageId":"185","endLine":29,"endColumn":36},{"ruleId":"182","severity":1,"message":"193","line":29,"column":38,"nodeType":"184","messageId":"185","endLine":29,"endColumn":47},{"ruleId":"182","severity":1,"message":"218","line":31,"column":12,"nodeType":"184","messageId":"185","endLine":31,"endColumn":18},{"ruleId":"182","severity":1,"message":"219","line":31,"column":20,"nodeType":"184","messageId":"185","endLine":31,"endColumn":29},{"ruleId":"182","severity":1,"message":"220","line":41,"column":12,"nodeType":"184","messageId":"185","endLine":41,"endColumn":25},{"ruleId":"182","severity":1,"message":"221","line":57,"column":12,"nodeType":"184","messageId":"185","endLine":57,"endColumn":15},{"ruleId":"182","severity":1,"message":"222","line":65,"column":14,"nodeType":"184","messageId":"185","endLine":65,"endColumn":25},{"ruleId":"182","severity":1,"message":"223","line":89,"column":28,"nodeType":"184","messageId":"185","endLine":89,"endColumn":45},{"ruleId":"182","severity":1,"message":"224","line":91,"column":12,"nodeType":"184","messageId":"185","endLine":91,"endColumn":33},{"ruleId":"182","severity":1,"message":"225","line":91,"column":35,"nodeType":"184","messageId":"185","endLine":91,"endColumn":59},{"ruleId":"182","severity":1,"message":"192","line":10,"column":32,"nodeType":"184","messageId":"185","endLine":10,"endColumn":37},{"ruleId":"182","severity":1,"message":"193","line":10,"column":39,"nodeType":"184","messageId":"185","endLine":10,"endColumn":48},{"ruleId":"182","severity":1,"message":"209","line":18,"column":14,"nodeType":"184","messageId":"185","endLine":18,"endColumn":22},{"ruleId":"182","severity":1,"message":"226","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":18},{"ruleId":"182","severity":1,"message":"207","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"227","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":17},{"ruleId":"182","severity":1,"message":"209","line":30,"column":10,"nodeType":"184","messageId":"185","endLine":30,"endColumn":18},{"ruleId":"182","severity":1,"message":"228","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":22},{"ruleId":"182","severity":1,"message":"229","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":16},{"ruleId":"182","severity":1,"message":"212","line":7,"column":10,"nodeType":"184","messageId":"185","endLine":7,"endColumn":28},{"ruleId":"182","severity":1,"message":"226","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":18},{"ruleId":"182","severity":1,"message":"207","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"226","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":18},{"ruleId":"182","severity":1,"message":"207","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"209","line":17,"column":12,"nodeType":"184","messageId":"185","endLine":17,"endColumn":20},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'CustomButton' is defined but never used.","'Illustrasjon' is defined but never used.","'VelgEmne' is defined but never used.","'ToBilder' is defined but never used.","'Undervisning' is defined but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","no-redeclare","'handleClick' is already defined.","redeclared","'visVidereClick' is defined but never used.","'FaEnvelopeOpenText' is defined but never used.","'logo2' is defined but never used.","'useFetch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'obligFag'. Either include it or remove the dependency array. You can also do a functional update 'setObligFag(o => ...)' if you only need 'obligFag' in the 'setObligFag' call.","ArrayExpression",["232"],"'VelgMaster' is defined but never used.","'useReducer' is defined but never used.","'useEffect' is defined but never used.","'InfoButton' is defined but never used.","'klasseId' is assigned a value but never used.","'setKlasseId' is assigned a value but never used.","'Elever' is defined but never used.","'AiOutlineArrowDown' is defined but never used.","'visVidere' is assigned a value but never used.","'handleScrollClick' is assigned a value but never used.","'Print' is defined but never used.","'ValgtMulighet' is defined but never used.","'styled' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'mulighetTull2' is assigned a value but never used.","'tom' is assigned a value but never used.","'handleReset' is defined but never used.","'setBegynnerLaring' is assigned a value but never used.","'begynnerLaringBoolean' is assigned a value but never used.","'setBegynnerLaringBoolean' is assigned a value but never used.","'Muligheter' is defined but never used.","'className' is defined but never used.","'Semester6Psyko' is defined but never used.","'Semester' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},"Update the dependencies array to be: [obligFag, url]",{"range":"235","text":"236"},[1441,1446],"[obligFag, url]"]