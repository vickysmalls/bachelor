[{"/Users/vikke/oslomet3/src/index.js":"1","/Users/vikke/oslomet3/src/App.js":"2","/Users/vikke/oslomet3/src/VelgKlasse/KlasseList.js":"3","/Users/vikke/oslomet3/src/Header/Header.js":"4","/Users/vikke/oslomet3/src/useFetch.js":"5","/Users/vikke/oslomet3/src/CustomButton/CustomButton.js":"6","/Users/vikke/oslomet3/src/VelgMaster/VelgMaster.js":"7","/Users/vikke/oslomet3/src/useFetchOblig.js":"8","/Users/vikke/oslomet3/src/VelgMuligheter/VelgMuligheter.js":"9","/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-card.js":"10","/Users/vikke/oslomet3/src/KlassePage.js":"11","/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-semester.js":"12","/Users/vikke/oslomet3/src/VelgMuligheter/Muligheter.js":"13","/Users/vikke/oslomet3/src/Semester/Semester.js":"14","/Users/vikke/oslomet3/src/fag-card/oblig-fag-card.js":"15"},{"size":221,"mtime":1611845406882,"results":"16","hashOfConfig":"17"},{"size":487,"mtime":1612878258591,"results":"18","hashOfConfig":"17"},{"size":2506,"mtime":1612878274669,"results":"19","hashOfConfig":"17"},{"size":243,"mtime":1612293381934,"results":"20","hashOfConfig":"17"},{"size":1559,"mtime":1611965684960,"results":"21","hashOfConfig":"17"},{"size":328,"mtime":1611845406879,"results":"22","hashOfConfig":"17"},{"size":2216,"mtime":1612362231551,"results":"23","hashOfConfig":"17"},{"size":1432,"mtime":1611870968176,"results":"24","hashOfConfig":"17"},{"size":2194,"mtime":1612881767946,"results":"25","hashOfConfig":"17"},{"size":2184,"mtime":1612360299897,"results":"26","hashOfConfig":"17"},{"size":428,"mtime":1612141186836,"results":"27","hashOfConfig":"17"},{"size":1317,"mtime":1612358911424,"results":"28","hashOfConfig":"17"},{"size":1781,"mtime":1612357963113,"results":"29","hashOfConfig":"17"},{"size":1787,"mtime":1612881757400,"results":"30","hashOfConfig":"17"},{"size":0,"mtime":1612357234653,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"lksjim",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/Users/vikke/oslomet3/src/index.js",[],["71","72"],"/Users/vikke/oslomet3/src/App.js",["73","74"],"/Users/vikke/oslomet3/src/VelgKlasse/KlasseList.js",["75","76","77"],"/Users/vikke/oslomet3/src/Header/Header.js",[],"/Users/vikke/oslomet3/src/useFetch.js",["78"],"import {useState, useEffect} from 'react';\n\n                //must pass in the url to fetch\nconst useFetch = (url, id) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n    const [answer, setAnswer] = useState(null);\n    \n      \n      //runs every re-render\n      //Fetches data as soon as the component renders, then updates state\n    useEffect(() => {\n        const abortCont = new AbortController();\n        console.log('use effetct ran');\n\n        fetch(url, {signal: AbortController.signal})\n          .then(res => {\n              \n              if(!res.ok){\n                  throw Error('Could not fetch the data for that resource');\n                  \n              }\n              return res.json()\n          })\n          .then(data => {\n              setData(data);\n              setIsPending(false);\n              setError(null);\n              setAnswer(answer);\n              \n\n          })\n          .catch(err => {\n              if(err.name === 'AbortError'){\n                  console.log('fetch aborted');\n              }\n              else{\n                setIsPending(false);\n                setError(err.message);\n              }\n              \n\n          })\n        return () => abortCont.abort();\n        //the dependency array [] below makes sure that the useEffect hook\n        //only run the function after the first initial render\n    }, [url]);\n\n    return {data, isPending, error}\n\n}\n\nexport default useFetch;","/Users/vikke/oslomet3/src/CustomButton/CustomButton.js",[],"/Users/vikke/oslomet3/src/VelgMaster/VelgMaster.js",["79","80","81","82","83","84"],"import React, {useState} from 'react'\nimport './VelgMaster.css';\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nimport ObligFagCard from '../oblig-fag/oblig-fag-card';\nconst _ = require(\"lodash\");  \n\n\n\nconst VelgMaster = ({answer}) => {\n\n    //setter masterfag tabellen til masterFag\n    const {data: masterFag, error, isPending} = useFetch(`http://localhost:5000/api/masterfag/`);\n    \n    // slik at det brukes/ lagres i neste komponent\n    const [fagNavn, setFagnavn] = useState();\n    const [masterId, setMasterId] = useState();\n    const [visVidere, setVisVidere] = useState(false);\n    const [farge, setFarge] = useState();\n\n    \n   \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        \n        console.log(e);\n        \n    }\n\n    function byttFarge(farge){\n        console.log('vis videre klikket');\n        console.log(visVidere);\n        \n        \n    }\n\n\n    return ( \n        <div>\n        <h2>Velg Masteremne</h2>\n        <div className='card-container'>\n\n            {\n                masterFag &&\n                    \n                    masterFag.map((oblig)=>(\n                        \n                        //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n                        oblig.klasseId === answer &&\n                        \n                    <CustomButton \n                        key={oblig.id}\n                        options={oblig}\n                        onClick={() =>{\n                            handleClick(oblig)\n                            setMasterId(oblig.id)\n                            setFagnavn(oblig.fagnavn)\n                            setVisVidere(true)\n                            \n                        }}\n                        >\n                         {oblig.fagnavn}\n                    </CustomButton>\n                    ))\n            }\n           \n        </div>\n\n        <div className=\"ny\">\n        {   \n            visVidere&&\n            <ObligFagCard masterId={masterId} fagNavn={fagNavn} answer={answer}/>\n        \n        }\n        \n        </div>\n        </div>\n        \n        \n     );\n};\nexport default VelgMaster;\n","/Users/vikke/oslomet3/src/useFetchOblig.js",[],"/Users/vikke/oslomet3/src/VelgMuligheter/VelgMuligheter.js",["85","86","87"],"/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-card.js",["88","89","90","91"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nimport VelgMuligheter from '../VelgMuligheter/VelgMuligheter';\nimport ObligFagSemester from './oblig-fag-semester';\nconst _ = require(\"lodash\");  \n\n\n\nconst ObligFagCard = ({answer, masterId, obj}) => {\n\n    \n    \n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/obligfag/`);\n    const [visVidere, setVisVidere] = useState(false);\n\n\n    function visVidereClick(visVidere){\n        console.log('vis videre klikket');\n        console.log(visVidere);\n        \n        setVisVidere(true)\n    }\n    \n   \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        \n        console.log(e);\n        \n    }\n\n\n    //lager et array som sortrer etter semester\n    const iteratees = obj => obj.semester;\n    const sorted = _.sortBy(klassetrinn, iteratees);\n    \n\n    \n\n    return ( \n        <div>\n        <h2>Obligs</h2>\n\n        <h2>Semester 1</h2>\n        <div className='card-container'>\n            {\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester semester={1} answer={answer}/>\n            }\n\n        </div>\n\n        <h2>Semester 2</h2>\n        <div className='card-container'>\n            {\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester semester={2} answer={answer}/>\n            }\n\n        </div>\n        <h2>Semester 2</h2>\n        <div className='card-container'>\n            {\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester semester={3} answer={answer}/>\n            }\n\n        </div>\n\n        \n\n        <div>\n            {\n                <CustomButton onClick={() => {visVidereClick(visVidere)}} >Videre</CustomButton>\n            }\n        </div>\n        \n        <div className=\"ny\">\n        {\n            \n            visVidere&&\n            <VelgMuligheter masterId={masterId} answer={answer}></VelgMuligheter>\n            \n\n       \n        }\n        \n        </div>\n        </div>\n        \n        \n     );\n};\nexport default ObligFagCard;","/Users/vikke/oslomet3/src/KlassePage.js",["92","93","94","95"],"import ObligFagCard from \"./oblig-fag/oblig-fag-card\";\nimport KlasseList from \"./VelgKlasse/KlasseList\";\nimport useFetch from './useFetch';\nimport {useState} from 'react';\n\n\nconst KlassePage = () => {\n\n   \n\n    \n\n    return ( \n        <div>\n        \n        {\n            \n           \n        }\n                \n            \n   \n        \n        \n\n        \n        \n       \n        </div>\n     );\n}\n \nexport default KlassePage;\n",["96","97"],"/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-semester.js",["98","99","100"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nconst _ = require(\"lodash\");  \n\n\n//Denne koomponenten gjør at man kan plotte inn semestesr og klasse id(answer) i oblig-fag-card\nconst ObligFagSemester = ({answer, semester}) => {\n\n    \n    \n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/obligfag/`);\n\n    //lager et array som sortrer etter semester\n    const iteratees = obj => obj.semester;\n    const sorted = _.sortBy(klassetrinn, iteratees);\n    \n\n    return ( \n        <>\n\n            {\n                \n                    // det sorterte arrayet mappes\n                    sorted.map((oblig)=>(\n                        //om klasseId er det samme som answer fra KlasseList =>\n                        oblig.klasseId ===answer &&\n                        oblig.semester ===semester &&\n                        <CustomButton \n                            key={oblig.id}\n                            \n                        >\n                         {oblig.fagnavn}\n                        </CustomButton>\n                        \n                    ))\n            }\n            {\n                \n            }\n\n        \n        </>\n        \n        \n     );\n};\nexport default ObligFagSemester;","/Users/vikke/oslomet3/src/VelgMuligheter/Muligheter.js",["101","102","103"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nconst _ = require(\"lodash\");  \n\n\n\n\nconst Muligheter = ({masterId, semester}) => {\n\n    \n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/muligheter/`);\n   \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        \n        console.log(e);\n        \n    }\n\n       //lager et array som sortrer etter semester\n       const iteratees = obj => obj.semester;\n       const sorted = _.sortBy(klassetrinn, iteratees);\n    \n    \n\n    return ( \n        \n        \n        <>\n\n            {              \n                        sorted.map((oblig)=>(\n                            \n                            //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster) \n                            oblig.masterFagId === masterId &&\n                            oblig.semester === semester &&\n                                <CustomButton\n                                    //setter fargen på den valgte fagveien\n                                    style={{backgroundColor: 'red'}} \n                                    key={oblig.id}\n                                    fag={oblig.fagnavn}\n                                    onClick ={() =>{\n                                        handleClick(oblig);\n                                    }}\n                                >\n                                    {oblig.fagnavn}\n                                </CustomButton>\n                                 \n                            ))\n\n            }\n            \n \n        </>\n        \n        \n        \n        \n     );\n};\nexport default Muligheter;\n","/Users/vikke/oslomet3/src/Semester/Semester.js",["104","105","106"],"/Users/vikke/oslomet3/src/fag-card/oblig-fag-card.js",[],["107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":10,"column":10,"nodeType":"115","messageId":"116","endLine":10,"endColumn":17},{"ruleId":"113","severity":1,"message":"117","line":10,"column":19,"nodeType":"115","messageId":"116","endLine":10,"endColumn":29},{"ruleId":"113","severity":1,"message":"118","line":10,"column":31,"nodeType":"115","messageId":"116","endLine":10,"endColumn":36},{"ruleId":"113","severity":1,"message":"119","line":10,"column":38,"nodeType":"115","messageId":"116","endLine":10,"endColumn":47},{"ruleId":"120","severity":1,"message":"121","line":22,"column":14,"nodeType":"115","messageId":"122","endLine":22,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":48,"column":8,"nodeType":"125","endLine":48,"endColumn":13,"suggestions":"126"},{"ruleId":"113","severity":1,"message":"127","line":6,"column":7,"nodeType":"115","messageId":"116","endLine":6,"endColumn":8},{"ruleId":"113","severity":1,"message":"118","line":13,"column":29,"nodeType":"115","messageId":"116","endLine":13,"endColumn":34},{"ruleId":"113","severity":1,"message":"119","line":13,"column":36,"nodeType":"115","messageId":"116","endLine":13,"endColumn":45},{"ruleId":"113","severity":1,"message":"128","line":19,"column":12,"nodeType":"115","messageId":"116","endLine":19,"endColumn":17},{"ruleId":"113","severity":1,"message":"129","line":19,"column":19,"nodeType":"115","messageId":"116","endLine":19,"endColumn":27},{"ruleId":"113","severity":1,"message":"130","line":31,"column":14,"nodeType":"115","messageId":"116","endLine":31,"endColumn":23},{"ruleId":"113","severity":1,"message":"131","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"132","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":24},{"ruleId":"113","severity":1,"message":"133","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":16},{"ruleId":"113","severity":1,"message":"118","line":14,"column":31,"nodeType":"115","messageId":"116","endLine":14,"endColumn":36},{"ruleId":"113","severity":1,"message":"119","line":14,"column":38,"nodeType":"115","messageId":"116","endLine":14,"endColumn":47},{"ruleId":"113","severity":1,"message":"134","line":27,"column":14,"nodeType":"115","messageId":"116","endLine":27,"endColumn":25},{"ruleId":"113","severity":1,"message":"135","line":37,"column":11,"nodeType":"115","messageId":"116","endLine":37,"endColumn":17},{"ruleId":"113","severity":1,"message":"136","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":20},{"ruleId":"113","severity":1,"message":"137","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":18},{"ruleId":"113","severity":1,"message":"133","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":16},{"ruleId":"113","severity":1,"message":"131","line":4,"column":9,"nodeType":"115","messageId":"116","endLine":4,"endColumn":17},{"ruleId":"109","replacedBy":"138"},{"ruleId":"111","replacedBy":"139"},{"ruleId":"113","severity":1,"message":"131","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"118","line":12,"column":31,"nodeType":"115","messageId":"116","endLine":12,"endColumn":36},{"ruleId":"113","severity":1,"message":"119","line":12,"column":38,"nodeType":"115","messageId":"116","endLine":12,"endColumn":47},{"ruleId":"113","severity":1,"message":"131","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"118","line":12,"column":31,"nodeType":"115","messageId":"116","endLine":12,"endColumn":36},{"ruleId":"113","severity":1,"message":"119","line":12,"column":38,"nodeType":"115","messageId":"116","endLine":12,"endColumn":47},{"ruleId":"113","severity":1,"message":"131","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"118","line":7,"column":31,"nodeType":"115","messageId":"116","endLine":7,"endColumn":36},{"ruleId":"113","severity":1,"message":"119","line":7,"column":38,"nodeType":"115","messageId":"116","endLine":7,"endColumn":47},{"ruleId":"109","replacedBy":"140"},{"ruleId":"111","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'showAdd' is assigned a value but never used.","Identifier","unusedVar","'setShowAdd' is assigned a value but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","no-redeclare","'handleClick' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'answer'. Either include it or remove the dependency array. You can also do a functional update 'setAnswer(a => ...)' if you only need 'answer' in the 'setAnswer' call.","ArrayExpression",["144"],"'_' is assigned a value but never used.","'farge' is assigned a value but never used.","'setFarge' is assigned a value but never used.","'byttFarge' is defined but never used.","'useState' is defined but never used.","'ObligFagSemester' is defined but never used.","'useFetch' is defined but never used.","'handleClick' is defined but never used.","'sorted' is assigned a value but never used.","'ObligFagCard' is defined but never used.","'KlasseList' is defined but never used.",["142"],["143"],["142"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [answer, url]",{"range":"147","text":"148"},[1463,1468],"[answer, url]"]