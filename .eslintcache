[{"/Users/vikke/bachelor/src/index.js":"1","/Users/vikke/bachelor/src/App.js":"2","/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js":"3","/Users/vikke/bachelor/src/Modal/Modal.js":"4","/Users/vikke/bachelor/src/Header/Header.js":"5","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js":"6","/Users/vikke/bachelor/src/useFetch.js":"7","/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js":"8","/Users/vikke/bachelor/src/CustomButton/CustomButton.js":"9","/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js":"10","/Users/vikke/bachelor/src/CustomButton/InfoButton.js":"11","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js":"12","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js":"13","/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js":"14","/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js":"15","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js":"16","/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js":"17","/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js":"18","/Users/vikke/bachelor/src/Semester/Semester.js":"19","/Users/vikke/bachelor/src/Print/Print.js":"20","/Users/vikke/bachelor/src/Semester/Semester6Psyko.js":"21","/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js":"22","/Users/vikke/bachelor/src/Helpers.js":"23","/Users/vikke/bachelor/src/Validering/ValideringAlert.js":"24"},{"size":221,"mtime":1616420130919,"results":"25","hashOfConfig":"26"},{"size":1341,"mtime":1621596155930,"results":"27","hashOfConfig":"26"},{"size":5204,"mtime":1621595142013,"results":"28","hashOfConfig":"26"},{"size":726,"mtime":1616755390099,"results":"29","hashOfConfig":"26"},{"size":564,"mtime":1621424918308,"results":"30","hashOfConfig":"26"},{"size":1737,"mtime":1621421920706,"results":"31","hashOfConfig":"26"},{"size":1438,"mtime":1618994314389,"results":"32","hashOfConfig":"26"},{"size":2165,"mtime":1621594233789,"results":"33","hashOfConfig":"26"},{"size":326,"mtime":1616420130903,"results":"34","hashOfConfig":"26"},{"size":5221,"mtime":1621592486034,"results":"35","hashOfConfig":"26"},{"size":341,"mtime":1616420130903,"results":"36","hashOfConfig":"26"},{"size":5172,"mtime":1621421981796,"results":"37","hashOfConfig":"26"},{"size":2680,"mtime":1621592486038,"results":"38","hashOfConfig":"26"},{"size":37898,"mtime":1621594926071,"results":"39","hashOfConfig":"26"},{"size":3785,"mtime":1621592486036,"results":"40","hashOfConfig":"26"},{"size":1876,"mtime":1621421876101,"results":"41","hashOfConfig":"26"},{"size":3173,"mtime":1621420729165,"results":"42","hashOfConfig":"26"},{"size":12619,"mtime":1621421874875,"results":"43","hashOfConfig":"26"},{"size":3290,"mtime":1621593498917,"results":"44","hashOfConfig":"26"},{"size":902,"mtime":1620119023576,"results":"45","hashOfConfig":"26"},{"size":3552,"mtime":1621421952392,"results":"46","hashOfConfig":"26"},{"size":3506,"mtime":1621592486034,"results":"47","hashOfConfig":"26"},{"size":100,"mtime":1617793538065,"results":"48","hashOfConfig":"26"},{"size":344,"mtime":1621422033019,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"12k2fam",{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/vikke/bachelor/src/index.js",[],["106","107"],"/Users/vikke/bachelor/src/App.js",["108","109","110"],"/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js",["111","112"],"/Users/vikke/bachelor/src/Modal/Modal.js",["113"],"import React from 'react'\nimport ReactDom from 'react-dom';\nimport { FaEnvelopeOpenText, FaRegWindowClose } from 'react-icons/fa';\nimport './Modal.css';\n\nexport default function Modal({children, open, onClose}) {\n    if (! open) return null\n\n    //Create portal gjør at man kan ha den i original html (DOM) index.html\n    //Gjør at man kan manipulere og bruke popupen over alt det andre\n    return ReactDom.createPortal (\n        <>\n    \n        <div className='popup'>\n        <div className=\"popup-inner\">\n            <FaRegWindowClose onClick={onClose} size='1.5em' className=\"close-btn\"/>\n            {children}\n            </div>\n          </div>\n        </>,\n        document.getElementById('portal')\n        \n    )\n}\n","/Users/vikke/bachelor/src/Header/Header.js",["114"],"import './Header.css';\nimport logo2 from './OsloMet logo for nett.png';\nimport logo3 from './LogoOsloMet.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Header = () => {\n    return ( \n        \n    \n    <div className=\"row\" id=\"header\">\n    <div className=\"column\" id=\"OsloMetLogo\">    \n        <img src={logo3} alt=\"OslometLogo\"/>\n    </div>\n    <div className=\"column\" id=\"Forti\"> \n        <h1>Gjør deg kjent med de ulike retningene ved lærerutdanningen på OsloMet!</h1>\n    </div>\n    </div>\n    \n    \n      \n\n    );\n      \n}\n \nexport default Header;","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js",[],"/Users/vikke/bachelor/src/useFetch.js",[],"/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js",[],"/Users/vikke/bachelor/src/CustomButton/CustomButton.js",[],"/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js",["115","116"],"import React, { useState, useReducer, useRef, useEffect } from \"react\";\nimport \"./VelgMaster.css\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport ObligFagCard from \"../oblig-fag/oblig-fag-card\";\n\nimport { AiOutlineArrowDown } from \"react-icons/ai\";\nimport { handleClick } from \"../Helpers\";\n\nconst _ = require(\"lodash\");\n\nconst VelgMaster = ({\n  divRef,\n  studieRetning,\n  klasseId,\n  studieId,\n  fagNavnStudierettning,\n}) => {\n  //setter masterfag tabellen til masterFag\n  const { data: masterFag, error, isPending } = useFetch(\n    `https://api.fagvalget.no/api/masterfag/`\n  );\n\n  // slik at det brukes/ lagres i neste komponent\n  const [fagNavn, setFagnavn] = useState();\n  const [masterId, setMasterId] = useState();\n  const [visVidere, setVisVidere] = useState(false);\n\n  //Sette farge valgt semester\n  const [activeButton, setActiveButton] = useState();\n\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n  //det under er for smooth scroll\n  const obligDivRef = useRef();\n\n  const handleScrollClick = () => {\n    visVidere &&\n      obligDivRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        inline: \"center\",\n        block: \"center\",\n      });\n  };\n\n  //filtrer slik at første fag man velger i 5-10, norsk engelsk eller matte, blir filtrert ut\n\n  let filtered_klassetrinn = _.filter(masterFag, function (klasse) {\n    return klasse.fagnavn !== fagNavnStudierettning;\n  });\n\n  const infoTekst_1 = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">\n        Velg faget du ønsker å ha som mastegfag, og se hvordan du må bygge opp\n        studiet for å kunne skrive masteroppgaven i det valgte faget\n      </h2>\n      <p id=\"Beskrivelse\">\n        Valget du gjør her vil påvirke valgmulighetene i resten av studiet. For\n        å kunne velge et masterfag, må du ha 60 studiepoeng i faget fra syklus 1\n        (de tre første studieårene). Det er dette faget du vil kunne skrive\n        masteroppgave i. <br />\n        <br />\n        Du kan senere gå tilbake til denne delen og velge et annet masterfag du\n        kunne være interessert i å skrive masteroppgave. <br />\n        <br />\n        <bold>Alle mulighetene er lista opp under!</bold>\n      </p>\n    </div>\n  );\n\n  const infoTekst_2 = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">\n        Velg faget du ønsker å ha som mastegfag, og se hvordan du må bygge opp\n        studiet for å kunne skrive masteroppgaven i det valgte faget\n      </h2>\n      <p id=\"Beskrivelse\">\n        Valget du gjør her vil påvirke valgmulighetene i resten av studiet. For\n        å kunne skrive masteroppgave i et av de følgende fagene må du ha 60\n        studiepoeng i faget fra syklus 1 (de tre første studieårene) <br />\n        <br />\n        Du kan senere gå tilbake til denne delen og velge et annet masterfag du\n        kunne tenke deg, og se hvordan studiemodellen da blir. <br />\n        <br />\n        <bold>Alle mulighetene er lista opp under!</bold>\n      </p>\n    </div>\n  );\n\n  return (\n    <>\n      <div class=\"row\" id=\"Masteremner\" ref={divRef}>\n        <div class=\"column\" id=\"Hundre\">\n          <h3>Velg ønsket masterfag</h3>\n        </div>\n        <div class=\"column\" id=\"Tjue\"></div>\n\n        {\n          //Viser tekst avhengig av klasseID\n          klasseId === 1 ? infoTekst_1 : infoTekst_2\n        }\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <h2>Velg et masteremne: </h2>\n          <div className=\"masterfag\">\n            {isPending && <div>Loading...</div>}\n            {error && <div>{error}</div>}\n            {masterFag &&\n              filtered_klassetrinn.map((fag) => {\n                const className = activeButton === fag.id ? \"red\" : \"\";\n\n                return (\n                  //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n                  fag.klasseId === klasseId && (\n                    <>\n                      <CustomButton\n                        inverted={className}\n                        key={fag.id}\n                        options={fag}\n                        activeButton={activeButton}\n                        onClick={() => {\n                          handleClick(fag);\n                          setMasterId(fag.id);\n                          setFagnavn(fag.fagnavn);\n                          setVisVidere(true);\n                          onSideBtnClick(fag);\n                        }}\n                      >\n                        {fag.fagnavn}\n                      </CustomButton>\n                    </>\n                  )\n                );\n              })}\n          </div>\n        </div>\n        <div id=\"Senter\">\n          <AiOutlineArrowDown\n            size={40}\n            onClick={handleScrollClick}\n          ></AiOutlineArrowDown>\n        </div>\n      </div>\n\n      {visVidere && (\n        <ObligFagCard\n          obligDivRef={obligDivRef}\n          studieRetning={studieRetning}\n          fagNavnStudierettning={fagNavnStudierettning}\n          masterId={masterId}\n          fagNavn={fagNavn}\n          klasseId={klasseId}\n        />\n      )}\n    </>\n  );\n};\nexport default VelgMaster;\n","/Users/vikke/bachelor/src/CustomButton/InfoButton.js",[],"/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js",["117","118"],"/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js",["119"],"import React, { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport useFetch from \"../useFetch\";\nimport \"./oblig-fag.css\";\nconst _ = require(\"lodash\");\n\n//Denne koomponenten gjør at man kan plotte inn semestesr og klasse id(answer) i oblig-fag-card\nconst ObligFagSemester = ({ answer, semester, setSemesterList7 }) => {\n  const { data: klassetrinn, error, isPending } = useFetch(\n    `http://localhost:5000/api/obligfag/`\n  );\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  //lager et array som sortrer etter semester\n  const iteratees = (obj) => obj.semester;\n  const sorted = _.sortBy(klassetrinn, iteratees);\n\n  return (\n    <>\n      <>\n        {\n          isPending && <div>Loading...</div>\n        }\n        {\n          error && <div>{error}</div>\n        }\n        {\n          // det sorterte arrayet mappes\n          sorted.map(\n            (oblig) =>\n              //om klasseId er det samme som answer fra KlasseList =>\n              oblig.klasseId === answer &&\n              oblig.semester === semester && (\n                <>\n                  <CustomButton id=\"Videre\" key={oblig.id}>\n                    {oblig.fagnavn}\n                  </CustomButton>\n\n                  <InfoButton\n                    className=\"infoknapp\"\n                    onClick={() => {\n                      setIsOpen(true);\n                      setFagnavn(oblig.fagnavn);\n                      //setSemester(oblig.semester)\n                      setEmneKode(oblig.emnekode);\n                      setStudiepoeng(oblig.studiepoeng);\n                      setKlasseId(oblig.klasseId);\n                      setURL(oblig.url);\n                    }}\n                  ></InfoButton>\n                </>\n              )\n          )\n        }\n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ObligFagSemester;\n","/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js",["136"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport useFetch from \"../useFetch\";\nconst _ = require(\"lodash\");\n\nconst ObligFagSemester2 = ({ answer, semester, fagNavnStudierettning }) => {\n  \n  const { data: klassetrinn, error, isPending } = useFetch( `http://localhost:5000/api/obligfag/`);\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n\n\n\n\n  \n  //lager et array som sortrer etter semester\n  const iteratees = (obj) => obj.semester;\n  const sorted = _.sortBy(klassetrinn, iteratees);\n\n  //filtrer ut PEL\nlet filtered_klassetrinn = _.filter(sorted, function (klasse) {\n  return (\n     \n   \n    klasse.fagnavn === 'Pedagogikk og elevkunnskap 1, emne 1'||\n    klasse.fagnavn === 'Pedagogikk og elevkunnskap 1, emne 2'\n    \n  );\n});\n  \n\n  \n  return (\n    <>\n      <>\n        {isPending && <div>Loading...</div>}\n        {error && <div>{error}</div>}\n        {\n          // det sorterte arrayet mappes\n          sorted.map((oblig) =>\n            //om klasseId er det samme som answer fra KlasseList =>\n            oblig.klasseId === answer &&\n            oblig.semester === semester &&\n            oblig.fagnavn.includes(fagNavnStudierettning)\n            \n             ? (\n              <>\n                <CustomButton id=\"Videre\" key={oblig.id}>\n                  {oblig.fagnavn}{\" \"}\n                </CustomButton>\n\n                <InfoButton\n                  className=\"infoknapp\"\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    setKlasseId(oblig.klasseId);\n                    setURL(oblig.url);\n                  }}\n                ></InfoButton>\n              </>\n            ) : null\n          )\n        }\n        {\n          // denne viser PEL\n          filtered_klassetrinn.map((oblig) =>\n            //om klasseId er det samme som answer fra KlasseList =>\n            oblig.klasseId === 2 &&\n            oblig.semester === semester \n            \n            \n             ? (\n              <>\n                <CustomButton id=\"Videre\" key={oblig.id}>\n                  {oblig.fagnavn}{\" \"}\n                </CustomButton>\n\n                <InfoButton\n                  className=\"infoknapp\"\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    setKlasseId(oblig.klasseId);\n                    setURL(oblig.url);\n                  }}\n                ></InfoButton>\n              </>\n            ) : null\n          )\n        }\n        \n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ObligFagSemester2;\n","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js",[],"/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js",["137","138","139"],"/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js",[],"/Users/vikke/bachelor/src/Semester/Semester.js",[],"/Users/vikke/bachelor/src/Print/Print.js",[],"/Users/vikke/bachelor/src/Semester/Semester6Psyko.js",["140"],"import React, { useEffect, useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport \"./Semester.css\";\nconst _ = require(\"lodash\");\n\nconst Semester6Psyko = ({\n  klasseId,\n  semester,\n  klassetrinn,\n  setMuligheterId,\n  activeButton,\n  farge,\n  setActiveButton,\n  setMasterFagId,\n  setSemesterList7,\n  setFag,\n  forceRender,\n  setForceRender,\n  setValgtFag,\n  messages,\n  fag,\n  error,\n  isPending\n}) => {\n  //filtrer ut årstudium\n  let filtered_klassetrinn = _.filter(klassetrinn, function (klasse) {\n    return (\n      klasse.fagnavn !== \"Årstudium norsk, del 2\" &&\n      klasse.fagnavn !== \"Årstudium matte, del 2\" &&\n      klasse.fagnavn !== \"Årstudium engelsk, del 2\" &&\n      klasse.fagnavn !== \"Norsk tegnspråk 2\"\n    );\n  });\n  //\n  function handleMuligheter(ele) {\n    setMuligheterId(ele);\n  }\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n\n    //setActiveButton(e.masterFagId);\n  };\n\n\n\n //om semester blir trykket på, blir semester6psyko resatt slik at den ikke vises i sem 9\n useEffect(() => {\n  forceRender===false && setMasterFagId('');\n\n }, [forceRender]);\n   \n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n    {\n      isPending && <div>Loading...</div>\n    }\n    {\n      error && <div>{error}</div>\n    }\n\n      {klassetrinn &&\n        filtered_klassetrinn.map((klasse) => {\n          const className = activeButton === klasse.id ? \"red\" : \"\";\n\n          return (\n            //oblig.MasterFagId === masterId &&\n            //om semester = 5 vis semester og semeseter fag\n            klasse.semester === semester &&\n            klasse.klasseId === klasseId && (\n              <>\n                <CustomButton\n                  inverted={className}\n                  key={klasse.id}\n                  semester={klasse.semester}\n                  klasseId={klasse.klasseId}\n                  onClick={() => {\n                    handleMuligheter(klasse.id);\n                    onSideBtnClick(klasse);\n                    setMasterFagId(klasse.masterFagId);\n                    //handleReset();\n                    setForceRender(true);\n                    \n                  }}\n                >\n                  {klasse.fagnavn}\n                </CustomButton>\n\n                <InfoButton\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(klasse.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(klasse.emnekode);\n                    setStudiepoeng(klasse.studiepoeng);\n                    //setKlasseId(oblig.klasseId)\n                    setURL(klasse.url);\n                  }}\n                ></InfoButton>\n              </>\n            )\n          );\n        })}\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Semester6Psyko;\n","/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js",["141","142"],"import React, {useEffect, useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport  Modal  from '../Modal/Modal';\nimport InfoButton from '../CustomButton/InfoButton';\n\nfunction TvungenMulighet({\n    activeButton,\n    setActiveButton,\n    activeButtonTvungen,\n    setActiveButtonTvungen,\n    masterId,\n    setIstrue,\n    valg7Master,\n    setValg7Master,\n    setFag,\n    setSemesterList7,\n    semesterList7,\n    semester,\n    klassetrinn,\n    sorted,\n    error,\n    isPending\n    }) {\n\n        const onExist = (e) => {\n          setActiveButtonTvungen(e.id);\n          //alert(e.id);\n        };\n\n     const [fagnavn, setFagnavn] = useState();\n    const [URL, setURL] = useState();\n    //const [semester, setSemester] = useState();\n    const [emnekode, setEmneKode] = useState();\n    const [studiepoeng, setStudiepoeng] = useState();\n    const [klasseId, setKlasseId] = useState();\n    const [isOpen, setIsOpen] = useState(false);\n   \n\n    \n       \n    return (\n        <>\n          <>\n          {\n            isPending && <div>Loading...</div>\n          }\n          {\n            error && <div>{error}</div>\n          }\n            {klassetrinn &&\n              sorted.map((oblig) => {\n                const className = activeButton === oblig.id ? \"red\" : \"\";\n                    \n                return (\n                    //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster)\n                    oblig.masterFagId === masterId &&\n                    oblig.semester === semester && (\n                      <>\n                        <CustomButton\n                          //setter fargen på den valgte fagveien\n                          inverted={className}\n                          key={oblig.id}\n                          fag={oblig.fagnavn}\n                          activeButtonTvungen={activeButtonTvungen}\n                          setActiveButtonTvungen={onExist(oblig)}\n                          style={{ backgroundColor: \"#FFDC00\" }}\n                          onClick={() => {\n                            setSemesterList7(oblig.id);\n                            setValg7Master(oblig.masterFagId);\n                            setIstrue(oblig.masterFagId);\n                          }}\n                        >\n                          {oblig.fagnavn}\n                        </CustomButton>\n                        <InfoButton\n                        onClick={() => {\n                          setIsOpen(true);\n                          setFagnavn(oblig.fagnavn);\n                          //setSemester(oblig.semester)\n                          setEmneKode(oblig.emnekode);\n                          setStudiepoeng(oblig.studiepoeng);\n                          setKlasseId(oblig.klasseId);\n                          setURL(oblig.url);\n                        }}\n                      ></InfoButton>\n                    </>\n                  )\n                );\n              })}\n          </>\n\n          <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n          <h5>Info om {fagnavn}</h5>\n          <br />\n\n          <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n}\n\nexport default TvungenMulighet;\n","/Users/vikke/bachelor/src/Helpers.js",[],"/Users/vikke/bachelor/src/Validering/ValideringAlert.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":18},{"ruleId":"147","severity":1,"message":"151","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":13},{"ruleId":"147","severity":1,"message":"152","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":13},{"ruleId":"147","severity":1,"message":"153","line":15,"column":31,"nodeType":"149","messageId":"150","endLine":15,"endColumn":36},{"ruleId":"147","severity":1,"message":"154","line":15,"column":38,"nodeType":"149","messageId":"150","endLine":15,"endColumn":47},{"ruleId":"147","severity":1,"message":"155","line":3,"column":10,"nodeType":"149","messageId":"150","endLine":3,"endColumn":28},{"ruleId":"147","severity":1,"message":"156","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":13},{"ruleId":"147","severity":1,"message":"157","line":1,"column":27,"nodeType":"149","messageId":"150","endLine":1,"endColumn":37},{"ruleId":"147","severity":1,"message":"158","line":1,"column":47,"nodeType":"149","messageId":"150","endLine":1,"endColumn":56},{"ruleId":"147","severity":1,"message":"148","line":1,"column":25,"nodeType":"149","messageId":"150","endLine":1,"endColumn":33},{"ruleId":"147","severity":1,"message":"159","line":20,"column":9,"nodeType":"149","messageId":"150","endLine":20,"endColumn":26},{"ruleId":"147","severity":1,"message":"160","line":20,"column":10,"nodeType":"149","messageId":"150","endLine":20,"endColumn":18},{"ruleId":"147","severity":1,"message":"157","line":1,"column":16,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"161","line":28,"column":12,"nodeType":"149","messageId":"150","endLine":28,"endColumn":18},{"ruleId":"147","severity":1,"message":"162","line":28,"column":20,"nodeType":"149","messageId":"150","endLine":28,"endColumn":29},{"ruleId":"147","severity":1,"message":"163","line":38,"column":12,"nodeType":"149","messageId":"150","endLine":38,"endColumn":25},{"ruleId":"147","severity":1,"message":"164","line":54,"column":12,"nodeType":"149","messageId":"150","endLine":54,"endColumn":15},{"ruleId":"147","severity":1,"message":"165","line":68,"column":12,"nodeType":"149","messageId":"150","endLine":68,"endColumn":27},{"ruleId":"147","severity":1,"message":"166","line":75,"column":11,"nodeType":"149","messageId":"150","endLine":75,"endColumn":22},{"ruleId":"147","severity":1,"message":"167","line":86,"column":12,"nodeType":"149","messageId":"150","endLine":86,"endColumn":32},{"ruleId":"147","severity":1,"message":"168","line":86,"column":34,"nodeType":"149","messageId":"150","endLine":86,"endColumn":57},{"ruleId":"147","severity":1,"message":"169","line":105,"column":12,"nodeType":"149","messageId":"150","endLine":105,"endColumn":25},{"ruleId":"147","severity":1,"message":"170","line":105,"column":27,"nodeType":"149","messageId":"150","endLine":105,"endColumn":43},{"ruleId":"147","severity":1,"message":"171","line":111,"column":28,"nodeType":"149","messageId":"150","endLine":111,"endColumn":45},{"ruleId":"147","severity":1,"message":"172","line":113,"column":12,"nodeType":"149","messageId":"150","endLine":113,"endColumn":33},{"ruleId":"147","severity":1,"message":"173","line":113,"column":35,"nodeType":"149","messageId":"150","endLine":113,"endColumn":59},{"ruleId":"174","severity":1,"message":"175","line":177,"column":8,"nodeType":"176","endLine":182,"endColumn":9},{"ruleId":"174","severity":1,"message":"175","line":207,"column":8,"nodeType":"176","endLine":212,"endColumn":9},{"ruleId":"147","severity":1,"message":"160","line":17,"column":10,"nodeType":"149","messageId":"150","endLine":17,"endColumn":18},{"ruleId":"147","severity":1,"message":"158","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"177","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":17},{"ruleId":"147","severity":1,"message":"160","line":35,"column":10,"nodeType":"149","messageId":"150","endLine":35,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":52,"column":5,"nodeType":"180","endLine":52,"endColumn":18,"suggestions":"181"},{"ruleId":"147","severity":1,"message":"158","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"160","line":34,"column":10,"nodeType":"149","messageId":"150","endLine":34,"endColumn":18},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'logo3' is defined but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","'FaEnvelopeOpenText' is defined but never used.","'logo2' is defined but never used.","'useReducer' is defined but never used.","'useEffect' is defined but never used.","'handleScrollClick' is assigned a value but never used.","'klasseId' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'mulighetTull2' is assigned a value but never used.","'tom' is assigned a value but never used.","'conditionalSem9' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'activeButtonTvungen3' is assigned a value but never used.","'setActiveButtonTvungen3' is assigned a value but never used.","'activeButton5' is assigned a value but never used.","'setActiveButton5' is assigned a value but never used.","'setBegynnerLaring' is assigned a value but never used.","'begynnerLaringBoolean' is assigned a value but never used.","'setBegynnerLaringBoolean' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'className' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMasterFagId'. Either include it or remove the dependency array. If 'setMasterFagId' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["184"],"no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},"Update the dependencies array to be: [forceRender, setMasterFagId]",{"range":"187","text":"188"},[1190,1203],"[forceRender, setMasterFagId]"]