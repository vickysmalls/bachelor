[{"/Users/vikke/bachelor/src/index.js":"1","/Users/vikke/bachelor/src/App.js":"2","/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js":"3","/Users/vikke/bachelor/src/Modal/Modal.js":"4","/Users/vikke/bachelor/src/Header/Header.js":"5","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js":"6","/Users/vikke/bachelor/src/useFetch.js":"7","/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js":"8","/Users/vikke/bachelor/src/CustomButton/CustomButton.js":"9","/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js":"10","/Users/vikke/bachelor/src/CustomButton/InfoButton.js":"11","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js":"12","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js":"13","/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js":"14","/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js":"15","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js":"16","/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js":"17","/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js":"18","/Users/vikke/bachelor/src/Semester/Semester.js":"19","/Users/vikke/bachelor/src/Print/Print.js":"20","/Users/vikke/bachelor/src/Semester/Semester6Psyko.js":"21","/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js":"22","/Users/vikke/bachelor/src/Helpers.js":"23","/Users/vikke/bachelor/src/Validering/ValideringAlert.js":"24"},{"size":221,"mtime":1616420130919,"results":"25","hashOfConfig":"26"},{"size":780,"mtime":1620119023575,"results":"27","hashOfConfig":"26"},{"size":5356,"mtime":1619605325557,"results":"28","hashOfConfig":"26"},{"size":726,"mtime":1616755390099,"results":"29","hashOfConfig":"26"},{"size":567,"mtime":1618394483715,"results":"30","hashOfConfig":"26"},{"size":1773,"mtime":1619605250951,"results":"31","hashOfConfig":"26"},{"size":1438,"mtime":1618994314389,"results":"32","hashOfConfig":"26"},{"size":2176,"mtime":1620653881669,"results":"33","hashOfConfig":"26"},{"size":326,"mtime":1616420130903,"results":"34","hashOfConfig":"26"},{"size":5359,"mtime":1620654063479,"results":"35","hashOfConfig":"26"},{"size":341,"mtime":1616420130903,"results":"36","hashOfConfig":"26"},{"size":5353,"mtime":1620655174515,"results":"37","hashOfConfig":"26"},{"size":2677,"mtime":1618993291415,"results":"38","hashOfConfig":"26"},{"size":36389,"mtime":1621420432322,"results":"39","hashOfConfig":"26"},{"size":3782,"mtime":1620652496966,"results":"40","hashOfConfig":"26"},{"size":1931,"mtime":1618997056534,"results":"41","hashOfConfig":"26"},{"size":3041,"mtime":1618994083462,"results":"42","hashOfConfig":"26"},{"size":12773,"mtime":1621420119523,"results":"43","hashOfConfig":"26"},{"size":3089,"mtime":1619604141995,"results":"44","hashOfConfig":"26"},{"size":902,"mtime":1620119023576,"results":"45","hashOfConfig":"26"},{"size":3486,"mtime":1619605227512,"results":"46","hashOfConfig":"26"},{"size":4009,"mtime":1618315115966,"results":"47","hashOfConfig":"26"},{"size":100,"mtime":1617793538065,"results":"48","hashOfConfig":"26"},{"size":336,"mtime":1621417464457,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"12k2fam",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vikke/bachelor/src/index.js",[],["114","115"],"/Users/vikke/bachelor/src/App.js",["116","117"],"import Navbar from \"./Header/Header\";\nimport KlasseList from \"./VelgKlasse/KlasseList\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Modal from \"./Modal/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\n//<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl\" crossorigin=\"anonymous\"></link>\n\nfunction App() {\n  return (\n    \n      <div className=\"App\">\n        <Navbar />\n\n        <div className=\"content\">\n          <div className=\"body\">\n            <KlasseList />\n          </div>\n        </div>\n        <footer>\n          <h2>Dette er en Footer!</h2>\n        </footer>\n      </div>\n   \n  );\n}\n\nexport default App;\n","/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js",["118","119","120","121","122","123","124"],"import { useEffect, useRef, useState  } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport VelgMaster from \"../VelgMaster/VelgMaster\";\nimport './VelgKlassetrinn.css';\nimport Illustrasjon from './Illustrasjon.png';\nimport VelgEmne from './VelgEmne.png';\nimport ToBilder from './ToBilder.png';\nimport Elever from './Elever.jpeg';\nimport Undervisning from './undervisning.jpeg';\nimport Praksis from './Praksis.jpeg';\nimport VelgKlasse from \"./VelgKlasse\";\nimport VelgStudierettning from \"./VelgStudierettning\";\n\n\nconst KlasseList = () => {\n\n    //henter tabellen klasser og plasserer det i klassetrinn\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/klasser`);\n\n    //setter klassetrinn til å bli answer\n    const [klasseId, setKlasseId] = useState(klassetrinn);\n\n    //brukes til å lagre objektet\n    const [obj, setObj] = useState();\n    const [visVidere, setVisVidere] = useState(false);\n\n    const [resetState, setResetState] = useState(false);\n\n\n    const [studieRetning, setStudieRetning] = useState();\n    \n    const [fagNavnStudierettning, setFagNavnStudierettning] = useState();\n\n    // slik at det brukes/ lagres i neste komponent\n  \n  const [valgtObligFag, setValgtObligFag] = useState();\n\n  //det under er for smooth scroll\n  const divRef = useRef();\n\n  //for å slippe å trykke to ganger, må loades først slik at den får\n  // plassert divRef i VelgMaster masteremne diven\n  useEffect(() => {\n    handleScrollClick()  });\n\n  const handleScrollClick = () => {\n    /* visVidere&&\n    divRef.current.scrollIntoView({ behavior: \"smooth\" }); */\n  };\n    \n    \n    \n   \n     return ( \n        \n        \n        \n<div className=\"applikasjon\">\n    \n    \n    <div class=\"row\">\n  <div class=\"column\" id=\"Seksti\">\n  <img id=\"Illustrasjon\" src={Elever} alt=\"Illustrasjon\"/>  \n  <h2 id=\"Innledning\">Med denne veilederen kan du utforske hvordan du ønsker å legge opp studieløpet ditt her ved OsloMet. \n            Utforsk de forskjellige fagene, og se hvilke konsekvenser valgt av fag vil ha senere i studiet.\n        </h2>\n        <p id=\"Padding\">Veilederen er utviklet for at alle elever skal ta riktige valg underveis i lærerutdanningen. Målet\n        er at du som student skal legge opp studieløpet riktig slik at du får en master innenfor det emnet du ønsker deg. Vi vet \n        at oppbyggingen av lærerutdanningen kan være vanskelig å forstå, og dermed er denne veilederen utviklet for å visualisere\n        oppbyggingen av studiet på en bedre måte. \n        </p>\n\n        </div>\n  \n  <div class=\"column\" id=\"Forti\">\n  <img id=\"Illustrasjon\" src={Praksis} alt=\"Illustrasjon\"/>\n  <h2 id=\"Innledning\">Hvordan bruke veilederen?\n        </h2>\n        <p id=\"Padding\">\n            \n        <ol>\n            <li>Velg studieretning, det første valget du får er om du går grunnskoleutdanning 1-7 eller grunnskoleutdanning 5-10.<br /><br /></li>\n            <li>Deretter får du muligheten til å velge hvilket masteremne du vil gå opp til i 10. semester. Basert på valget du tar vil studieplanen \n        oppdatere seg med de fagene du trenger for valgt masteremne.<br /><br /></li>\n            <li>Siste del er å fylle inn planen med valgfag. \n        Husk at man trenger 60 studiepoeng i syklus 1 for å ta faget videre i syklus 2. Om du har to fag kan du velge selv i semester 7.</li>\n        </ol>\n            \n        </p>\n\n        <p id=\"Bold\">Scroll ned for å starte veilederen!</p>\n  </div>\n</div>\n\n<div class=\"row\" id=\"Start\">\n<div className=\"column\" id=\"Hundre\">\n  \n        \n            <h3>Velg studieretning </h3>      \n            <h2>Velg din studieretning ved OsloMet</h2>\n            <div className='introknapp'>\n            \n            \n                    <VelgKlasse\n                     visVidere={visVidere} \n                     setVisVidere={setVisVidere} \n                     setObj={setObj} \n                     setAnswer={setKlasseId}\n                     klassetrinn={klassetrinn}\n                     handleScrollClick={handleScrollClick}\n                     resetState = {resetState}\n                     setResetState={setResetState}\n                    />\n\n            </div>\n        </div> \n     </div> \n     {\n         //om man velger 5-10\n         //Bruker fagnavn for å kunne filtrere på det i obligfag\n         klasseId===2&&\n        <VelgStudierettning setStudieRetning={setStudieRetning} fagNavnStudierettning={fagNavnStudierettning} setFagNavnStudierettning={setFagNavnStudierettning} valgtObligFag={valgtObligFag} setValgtObligFag={setValgtObligFag}\n        />\n     }\n            \n            \n                {\n                    //gjør answer og obj til props, slik at den kan brukes i ObligFagCard\n                    //answer blir klasse id, som blir satt i onClick funkjsonen\n                    visVidere &&\n                    <VelgMaster \n                    studieRetning={studieRetning}\n                    klasseId={klasseId}\n                    obj={obj}\n                    fagNavnStudierettning={fagNavnStudierettning}\n                    setFagNavnStudierettning={setFagNavnStudierettning}\n                    divRef={divRef}\n                    />                       \n                }\n            \n        </div>   \n          \n     );\n}\n \nexport default KlasseList;","/Users/vikke/bachelor/src/Modal/Modal.js",["125"],"import React from 'react'\nimport ReactDom from 'react-dom';\nimport { FaEnvelopeOpenText, FaRegWindowClose } from 'react-icons/fa';\nimport './Modal.css';\n\nexport default function Modal({children, open, onClose}) {\n    if (! open) return null\n\n    //Create portal gjør at man kan ha den i original html (DOM) index.html\n    //Gjør at man kan manipulere og bruke popupen over alt det andre\n    return ReactDom.createPortal (\n        <>\n    \n        <div className='popup'>\n        <div className=\"popup-inner\">\n            <FaRegWindowClose onClick={onClose} size='1.5em' className=\"close-btn\"/>\n            {children}\n            </div>\n          </div>\n        </>,\n        document.getElementById('portal')\n        \n    )\n}\n","/Users/vikke/bachelor/src/Header/Header.js",["126"],"import './Header.css';\nimport logo2 from './OsloMet logo for nett.png';\nimport logo3 from './LogoOsloMet.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Header = () => {\n    return ( \n        \n    \n    <div className=\"row\" id=\"header\">\n    <div className=\"column\" id=\"OsloMetLogo\">    \n        <img src={logo3} alt=\"OslometLogo\"/>\n    </div>\n    <div className=\"column\" id=\"Forti\"> \n        <h1>Gjør deg kjent med de ulike retningene ved lærerutdanningen på OsloMet!</h1>\n    </div>\n    </div>\n    \n    \n      \n\n    );\n      \n}\n \nexport default Header;","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js",["127"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport './VelgKlassetrinn.css';\nimport {handleClick} from '../Helpers';\n\n\n\nconst VelgKlasse = ({ handleScrollClick, klassetrinn, setVisVidere, visVidere, setAnswer, setObj}) => {\n     \n     \n    //Sette farge valgt semester\n    const [activeButton, setActiveButton] = useState();\n\n    const onSideBtnClick = (e) => {\n        setActiveButton(e.id);\n        \n        //alert(e.id);\n    };\n    \n    \n    function visVidereClick(visVidere){\n \n         \n         setVisVidere(true)\n     }\n    \n    return ( \n        <>\n        \n        {\n            //sjekker om klassetrinn er ok, deretter mappe gjennom klassene\n            klassetrinn && \n            klassetrinn.map((klasse) =>{\n                const className = activeButton === klasse.id ? \"red\" : \"\";\n\n                return (\n                    \n                    <CustomButton id='hoydeBenBtn'\n                    key={klasse.id}\n                    options={klasse}\n                    inverted={className}\n                    onClick={() =>{ \n                        //setter statene fra øverst, og funksjonen handleclick\n                        setObj(klasse)  \n                        setAnswer(klasse.id)\n                        handleClick(klasse.id)\n                        visVidereClick(visVidere)\n                        handleScrollClick()\n                        onSideBtnClick(klasse)\n                        \n                    }}\n                    >\n                    Grunnskolelærer {klasse.klassetrinn} trinn\n                    </CustomButton>  \n                    \n                )\n                })\n        }\n        </>\n     );\n}\n \nexport default VelgKlasse;","/Users/vikke/bachelor/src/useFetch.js",[],"/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js",["128"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport VelgMaster from \"../VelgMaster/VelgMaster\";\n\nconst VelgStudierettning = ({\n  setStudieRetning,\n  valgtObligFag,\n  setValgtObligFag,\n  fagNavnStudierettning,\n  setFagNavnStudierettning,\n}) => {\n  //setter masterfag tabellen til masterFag\n  const { data: masterFag, error, isPending } = useFetch(\n    `http://localhost:5000/api/masterfag/`\n  );\n\n  //Sette farge valgt semester\n  const [activeButton, setActiveButton] = useState();\n\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n \n\n  return (\n    <>\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <h2>Trykk på undervisningsfaget du studerer i de tre første semestrene </h2>\n          \n            {\n              isPending && <div>Loading...</div>\n            }\n            {\n              error && <div>{error}</div>\n            }\n            {masterFag &&\n              masterFag.map((fag) => {\n                const className = activeButton === fag.id ? \"red\" : \"\";\n\n                return (\n                  //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n\n                  fag.id === 15 || fag.id === 16 || fag.id === 17 ? (\n                    <>\n                      \n                        <CustomButton\n                          inverted={className}\n                          key={fag.id}\n                          options={fag}\n                          activeButton={activeButton}\n                          onClick={() => {\n                            setStudieRetning(fag.id);\n                            setValgtObligFag(fag.id);\n                            onSideBtnClick(fag);\n                            setFagNavnStudierettning(fag.fagnavn);\n                          }}\n                        >\n                          {fag.fagnavn}\n                        </CustomButton>\n                      \n                    </>\n                  ) : null\n                );\n              })}\n          \n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default VelgStudierettning;\n","/Users/vikke/bachelor/src/CustomButton/CustomButton.js",[],"/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js",["129","130","131","132","133"],"import React, { useState, useReducer, useRef, useEffect } from \"react\";\nimport \"./VelgMaster.css\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport ObligFagCard from \"../oblig-fag/oblig-fag-card\";\nimport { FaEnvelopeOpenText } from \"react-icons/fa\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport { AiOutlineArrowDown } from \"react-icons/ai\";\nimport { handleClick } from \"../Helpers\";\n\nconst _ = require(\"lodash\");\n\nconst VelgMaster = ({\n  divRef,\n  studieRetning,\n  klasseId,\n  studieId,\n  fagNavnStudierettning,\n}) => {\n  //setter masterfag tabellen til masterFag\n  const { data: masterFag, error, isPending } = useFetch(\n    `http://localhost:5000/api/masterfag/`\n  );\n\n  // slik at det brukes/ lagres i neste komponent\n  const [fagNavn, setFagnavn] = useState();\n  const [masterId, setMasterId] = useState();\n  const [visVidere, setVisVidere] = useState(false);\n\n  //Sette farge valgt semester\n  const [activeButton, setActiveButton] = useState();\n\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n  //det under er for smooth scroll\n  const obligDivRef = useRef();\n\n  const handleScrollClick = () => {\n    visVidere &&\n      obligDivRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        inline: \"center\",\n        block: \"center\",\n      });\n  };\n\n  //filtrer slik at første fag man velger i 5-10, norsk engelsk eller matte, blir filtrert ut\n\n  let filtered_klassetrinn = _.filter(masterFag, function (klasse) {\n    return klasse.fagnavn !== fagNavnStudierettning;\n  });\n\n  const infoTekst_1 = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">\n        Velg faget du ønsker å ha som mastegfag, og se hvordan du må bygge opp\n        studiet for å kunne skrive masteroppgaven i det valgte faget\n      </h2>\n      <p id=\"Beskrivelse\">\n        Valget du gjør her vil påvirke valgmulighetene i resten av studiet. For\n        å kunne velge et masterfag, må du ha 60 studiepoeng i faget fra syklus 1\n        (de tre første studieårene). Det er dette faget du vil kunne skrive\n        masteroppgave i. <br />\n        <br />\n        Du kan senere gå tilbake til denne delen og velge et annet masterfag du\n        kunne være interessert i å skrive masteroppgave. <br />\n        <br />\n        <bold>Alle mulighetene er lista opp under!</bold>\n      </p>\n    </div>\n  );\n\n  const infoTekst_2 = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">\n        Velg faget du ønsker å ha som mastegfag, og se hvordan du må bygge opp\n        studiet for å kunne skrive masteroppgaven i det valgte faget\n      </h2>\n      <p id=\"Beskrivelse\">\n        Valget du gjør her vil påvirke valgmulighetene i resten av studiet. For\n        å kunne skrive masteroppgave i et av de følgende fagene må du ha 60\n        studiepoeng i faget fra syklus 1 (de tre første studieårene) <br />\n        <br />\n        Du kan senere gå tilbake til denne delen og velge et annet masterfag du\n        kunne tenke deg, og se hvordan studiemodellen da blir. <br />\n        <br />\n        <bold>Alle mulighetene er lista opp under!</bold>\n      </p>\n    </div>\n  );\n\n  return (\n    <>\n      <div class=\"row\" id=\"Masteremner\" ref={divRef}>\n        <div class=\"column\" id=\"Hundre\">\n          <h3>Velg ønsket masterfag</h3>\n        </div>\n        <div class=\"column\" id=\"Tjue\"></div>\n\n        {\n          //Viser tekst avhengig av klasseID\n          klasseId === 1 ? infoTekst_1 : infoTekst_2\n        }\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <h2>Velg et masteremne: </h2>\n          <div className=\"masterfag\">\n            {isPending && <div>Loading...</div>}\n            {error && <div>{error}</div>}\n            {masterFag &&\n              filtered_klassetrinn.map((fag) => {\n                const className = activeButton === fag.id ? \"red\" : \"\";\n\n                return (\n                  //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n                  fag.klasseId === klasseId && (\n                    <>\n                      <CustomButton\n                        inverted={className}\n                        key={fag.id}\n                        options={fag}\n                        activeButton={activeButton}\n                        onClick={() => {\n                          handleClick(fag);\n                          setMasterId(fag.id);\n                          setFagnavn(fag.fagnavn);\n                          setVisVidere(true);\n                          onSideBtnClick(fag);\n                        }}\n                      >\n                        {fag.fagnavn}\n                      </CustomButton>\n                    </>\n                  )\n                );\n              })}\n          </div>\n        </div>\n        <div id=\"Senter\">\n          <AiOutlineArrowDown\n            size={40}\n            onClick={handleScrollClick}\n          ></AiOutlineArrowDown>\n        </div>\n      </div>\n\n      {visVidere && (\n        <ObligFagCard\n          obligDivRef={obligDivRef}\n          studieRetning={studieRetning}\n          fagNavnStudierettning={fagNavnStudierettning}\n          masterId={masterId}\n          fagNavn={fagNavn}\n          klasseId={klasseId}\n        />\n      )}\n    </>\n  );\n};\nexport default VelgMaster;\n","/Users/vikke/bachelor/src/CustomButton/InfoButton.js",[],"/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js",["134","135","136","137","138","139"],"import React, { useRef, useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport Modal from \"../Modal/Modal\";\nimport VelgMuligheter from \"../VelgMuligheter/VelgMuligheter\";\nimport ObligFagSemester from \"./oblig-fag-semester\";\nimport \"./oblig-fag.css\";\nimport Elever from \"./Elever.jpeg\";\nimport ObligFagSemester2 from \"./ObligFagSemester2\";\nimport { AiOutlineArrowDown } from \"react-icons/ai\";\n\nconst ObligFagCard = ({\n  obligDivRef,\n  studieRetning,\n  klasseId,\n  masterId,\n  obj,\n  fagNavn,\n  fagNavnStudierettning,\n}) => {\n  //det under er for smooth scroll\n  const velgMuligheterDivRef = useRef();\n\n  const handleScrollClick = () => {\n    velgMuligheterDivRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  \n  const infoTekst_1_de_tre_forste = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">De tre første semestrene består av obligatoriske emner</h2>\n      <p id=\"Beskrivelse\">\n        De tre første semestrene består kun av obligatoriske emner i fagene\n        norsk, matematikk og pedagogikk og elevkunnskap. <br />\n        <br />\n        <bold>De obligatoriske emnene er markert i gult!</bold>\n      </p>\n    </div>\n  );\n\n  const infoTekst_2_de_tre_forste = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">De tre første semestrene består obligatoriske emner</h2>\n      <p id=\"Beskrivelse\">\n        De tre første semestrene består av obligatoriske emner. 60 studiepoeng i\n        ditt første undervisningsfag som er enten norsk, matematikk eller\n        enelsk, samt 30 studiepoeng i pedagogikk og elevkunnskap. <br />\n        <br />\n        <bold>De obligatoriske emnene er markert i gult!</bold>\n      </p>\n    </div>\n  );\n\n  return (\n    <>\n      <div class=\"row\" ref={obligDivRef}>\n        <div class=\"column\" id=\"Hundre\">\n          <h3>1. Studieår: Obligatoriske emner</h3>\n        </div>\n        <div class=\"column\" id=\"MasterBilde\"></div>\n\n        {\n            //Om valgt klasse trinn er 1-7, ellers vis den andre\n            klasseId===1 ? infoTekst_1_de_tre_forste : infoTekst_2_de_tre_forste\n        }\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n              <h5>Semester 1</h5>\n              <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n              <div className=\"fag\">\n                {\n                  //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                  klasseId === 2 ? (\n                    <ObligFagSemester2\n                      fagNavnStudierettning={fagNavnStudierettning}\n                      semester={1}\n                      answer={klasseId}\n                    />\n                  ) : (\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester\n                      id=\"IkkeKnapp\"\n                      semester={1}\n                      answer={klasseId}\n                    />\n                  )\n                }\n              </div>\n            </div>\n\n            <div className=\"Forti\">\n              <h5>Semester 2</h5>\n              <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p>\n              <div className=\"fag\">\n                {\n                  //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                  klasseId === 2 ? (\n                    <ObligFagSemester2\n                      fagNavnStudierettning={fagNavnStudierettning}\n                      semester={2}\n                      answer={klasseId}\n                    />\n                  ) : (\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester\n                      id=\"IkkeKnapp\"\n                      semester={2}\n                      answer={klasseId}\n                    />\n                  )\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <h3>Veien Videre</h3>\n        </div>\n        <div class=\"column\" id=\"BygningBilde\"></div>\n\n        <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">\n        Få oversikt over emnene du må ta, samt hvilke semestre du kan velge\n        valgfrie emner/fag\n      </h2>\n      <p id=\"Beskrivelse\">\n        Semester fire er det semesteret du kan begynne å velge flere\n        undervisningsfag. De obligatoriske emene i 3. semester er{\" \"}\n        <bold>markert i gult </bold> . Så du får muligheten til å ta et fag til\n        og få 60 studiepoeng i det emne, det er ikke nødvendig å ha 60\n        studiepoeng i det valgfrie emne, men noe å tenke over i tilfelle du får\n        lyst til å endre hvilke fag du ønsker som masterfag noe seinere i\n        løpet/ha flere valgmuligheter for masterfag.\n      </p>\n    </div>\n      </div>\n\n      <div>\n        {\n          <VelgMuligheter\n            fagNavnStudierettning={fagNavnStudierettning}\n            studieRetning={studieRetning}\n            fagNavn={fagNavn}\n            masterId={masterId}\n            klasseId={klasseId}\n            obj={obj}\n          ></VelgMuligheter>\n        }\n      </div>\n    </>\n  );\n};\nexport default ObligFagCard;\n","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js",["140"],"import React, { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport useFetch from \"../useFetch\";\nimport \"./oblig-fag.css\";\nconst _ = require(\"lodash\");\n\n//Denne koomponenten gjør at man kan plotte inn semestesr og klasse id(answer) i oblig-fag-card\nconst ObligFagSemester = ({ answer, semester, setSemesterList7 }) => {\n  const { data: klassetrinn, error, isPending } = useFetch(\n    `http://localhost:5000/api/obligfag/`\n  );\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  //lager et array som sortrer etter semester\n  const iteratees = (obj) => obj.semester;\n  const sorted = _.sortBy(klassetrinn, iteratees);\n\n  return (\n    <>\n      <>\n        {\n          isPending && <div>Loading...</div>\n        }\n        {\n          error && <div>{error}</div>\n        }\n        {\n          // det sorterte arrayet mappes\n          sorted.map(\n            (oblig) =>\n              //om klasseId er det samme som answer fra KlasseList =>\n              oblig.klasseId === answer &&\n              oblig.semester === semester && (\n                <>\n                  <CustomButton id=\"Videre\" key={oblig.id}>\n                    {oblig.fagnavn}\n                  </CustomButton>\n\n                  <InfoButton\n                    className=\"infoknapp\"\n                    onClick={() => {\n                      setIsOpen(true);\n                      setFagnavn(oblig.fagnavn);\n                      //setSemester(oblig.semester)\n                      setEmneKode(oblig.emnekode);\n                      setStudiepoeng(oblig.studiepoeng);\n                      setKlasseId(oblig.klasseId);\n                      setURL(oblig.url);\n                    }}\n                  ></InfoButton>\n                </>\n              )\n          )\n        }\n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ObligFagSemester;\n","/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js",["165"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport useFetch from \"../useFetch\";\nconst _ = require(\"lodash\");\n\nconst ObligFagSemester2 = ({ answer, semester, fagNavnStudierettning }) => {\n  \n  const { data: klassetrinn, error, isPending } = useFetch( `http://localhost:5000/api/obligfag/`);\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n\n\n\n\n  \n  //lager et array som sortrer etter semester\n  const iteratees = (obj) => obj.semester;\n  const sorted = _.sortBy(klassetrinn, iteratees);\n\n  //filtrer ut PEL\nlet filtered_klassetrinn = _.filter(sorted, function (klasse) {\n  return (\n     \n   \n    klasse.fagnavn === 'Pedagogikk og elevkunnskap 1, emne 1'||\n    klasse.fagnavn === 'Pedagogikk og elevkunnskap 1, emne 2'\n    \n  );\n});\n  \n\n  \n  return (\n    <>\n      <>\n        {isPending && <div>Loading...</div>}\n        {error && <div>{error}</div>}\n        {\n          // det sorterte arrayet mappes\n          sorted.map((oblig) =>\n            //om klasseId er det samme som answer fra KlasseList =>\n            oblig.klasseId === answer &&\n            oblig.semester === semester &&\n            oblig.fagnavn.includes(fagNavnStudierettning)\n            \n             ? (\n              <>\n                <CustomButton id=\"Videre\" key={oblig.id}>\n                  {oblig.fagnavn}{\" \"}\n                </CustomButton>\n\n                <InfoButton\n                  className=\"infoknapp\"\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    setKlasseId(oblig.klasseId);\n                    setURL(oblig.url);\n                  }}\n                ></InfoButton>\n              </>\n            ) : null\n          )\n        }\n        {\n          // denne viser PEL\n          filtered_klassetrinn.map((oblig) =>\n            //om klasseId er det samme som answer fra KlasseList =>\n            oblig.klasseId === 2 &&\n            oblig.semester === semester \n            \n            \n             ? (\n              <>\n                <CustomButton id=\"Videre\" key={oblig.id}>\n                  {oblig.fagnavn}{\" \"}\n                </CustomButton>\n\n                <InfoButton\n                  className=\"infoknapp\"\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    setKlasseId(oblig.klasseId);\n                    setURL(oblig.url);\n                  }}\n                ></InfoButton>\n              </>\n            ) : null\n          )\n        }\n        \n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ObligFagSemester2;\n","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js",["166"],"import React, { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport Muligheter from \"../VelgMuligheter/Muligheter\";\n\nconst ValgtMulighet = ({ klasseId, semester, klassetrinn, muligheterId }) => {\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      {klassetrinn &&\n        klassetrinn.map(\n          (oblig) =>\n            oblig.id === muligheterId && (\n              <>\n                <CustomButton\n                  key={oblig.id}\n                  semester={oblig.semester}\n                  klasseId={oblig.klasseId}\n                >\n                  {oblig.fagnavn}\n                </CustomButton>\n\n                <InfoButton\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    //setKlasseId(oblig.klasseId)\n                    setURL(oblig.url);\n                  }}\n                ></InfoButton>\n              </>\n            )\n        )}\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul>\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ValgtMulighet;\n","/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js",["167","168","169"],"import React, { useEffect, useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport Modal from \"../Modal/Modal\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport className from \"../Semester/Semester6Psyko\";\n\nconst Muligheter = ({\n  activeButton,\n  setActiveButton,\n  masterId,\n  setIstrue,\n  valg7Master,\n  setValg7Master,\n  setFag,\n  setSemesterList7,\n  semesterList7,\n  semester,\n  klassetrinn,\n  sorted,\n  setConditionalSem9,\n}) => {\n\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <>\n        {klassetrinn &&\n          sorted.map((klasse) => {\n            const className = activeButton === klasse.id ? \"red\" : \"\";\n\n            return (\n              //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster)\n              klasse.masterFagId === masterId &&\n              klasse.semester === semester && (\n                <>\n                  <CustomButton\n                    //setter fargen på den valgte fagveien\n                    inverted={className}\n                    key={klasse.id}\n                    fag={klasse.fagnavn}\n                    activeButton={activeButton}\n                    onClick={() => {\n                      onSideBtnClick(klasse);\n                      setSemesterList7(klasse.id);\n                      setValg7Master(klasse.masterFagId);\n                      setIstrue(klasse.masterFagId);\n                      setConditionalSem9(klasse.masterFagId);\n                    }}\n                  >\n                    {klasse.fagnavn}\n                  </CustomButton>\n\n                  <InfoButton\n                    onClick={() => {\n                      setIsOpen(true);\n                      setFagnavn(klasse.fagnavn);\n                      //setSemester(oblig.semester)\n                      setEmneKode(klasse.emnekode);\n                      setStudiepoeng(klasse.studiepoeng);\n                      setKlasseId(klasse.klasseId);\n                      setURL(klasse.url);\n                    }}\n                  ></InfoButton>\n                </>\n              )\n            );\n          })}\n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          {\n            semester === 10 ? null \n            :\n            <li>Fagside: \n              <a href={URL} target=\"_blank\" rel=\"noreferrer\" > Link til fagside </a>\n            </li> \n          }\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Muligheter;\n","/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js",["170","171","172"],"/Users/vikke/bachelor/src/Semester/Semester.js",["173"],"import React, { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport Muligheter from \"../VelgMuligheter/Muligheter\";\nimport './Semester.css';\nconst _ = require(\"lodash\");\n\n\nconst Semester = ({\n  klasseId,\n  semester,\n  klassetrinn,\n  setMuligheterId,\n  activeButton,\n  setForceRender,\n  setActiveButton,\n\n  setFag,\n\n}) => {\n\n    \n  //\n   //filtrer ut årstudium og tegnspråk\n   let filtered_klassetrinn = _.filter(klassetrinn, function (klasse) {\n    return (\n      klasse.fagnavn !== \"Årstudium norsk, del 1\" &&\n      klasse.fagnavn !== \"Årstudium matte, del 1\" &&\n      klasse.fagnavn !== \"Årstudium engelsk, del 1\" &&\n      klasse.fagnavn !== \"Norsk tegnspråk 1\"\n    );\n  });\n  \n  //\n  /* function handleMuligheter(ele) {\n    setMuligheterId(ele);    \n  } */\n  const onSideBtnClick = e => {\n    setActiveButton(e.id);\n    //setMuligheterId(e.id)\n    //setActiveButton(e.masterFagId);\n   \n};\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n\n      {klassetrinn &&\n        filtered_klassetrinn.map((klasse) => {\n          const className = activeButton === klasse.id ? \"red\" : \"\";\n          \n          return (\n            //oblig.MasterFagId === masterId &&\n            //om semester = 5 vis semester og semeseter fag\n            klasse.semester === semester &&\n            klasse.klasseId === klasseId && (\n              <>\n                <CustomButton\n                  inverted={className}\n                  key={klasse.id}\n                  semester={klasse.semester}\n                  klasseId={klasse.klasseId}\n                  onClick={() => {\n                    setMuligheterId(klasse.masterFagId);\n                    onSideBtnClick(klasse);\n                    setForceRender(false);\n                   \n                  }}\n                >\n                  {klasse.fagnavn}\n                </CustomButton>\n\n                <InfoButton\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(klasse.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(klasse.emnekode);\n                    setStudiepoeng(klasse.studiepoeng);\n                    //setKlasseId(oblig.klasseId)\n                    setURL(klasse.url);\n                  }}\n                ></InfoButton>\n              </>\n            )\n          );\n        })}\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>Fagside: <a href={URL} target=\"_blank\" rel=\"noreferrer\" > Link til fagside </a></li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Semester;\n","/Users/vikke/bachelor/src/Print/Print.js",[],"/Users/vikke/bachelor/src/Semester/Semester6Psyko.js",["174","175"],"import React, { useEffect, useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport Muligheter from \"../VelgMuligheter/Muligheter\";\nimport \"./Semester.css\";\nconst _ = require(\"lodash\");\n\nconst Semester6Psyko = ({\n  klasseId,\n  semester,\n  klassetrinn,\n  setMuligheterId,\n  activeButton,\n  farge,\n  setActiveButton,\n  setMasterFagId,\n  setSemesterList7,\n  setFag,\n  forceRender,\n  setForceRender,\n  setValgtFag,\n  messages,\n  fag,\n}) => {\n  //filtrer ut årstudium\n  let filtered_klassetrinn = _.filter(klassetrinn, function (klasse) {\n    return (\n      klasse.fagnavn !== \"Årstudium norsk, del 2\" &&\n      klasse.fagnavn !== \"Årstudium matte, del 2\" &&\n      klasse.fagnavn !== \"Årstudium engelsk, del 2\" &&\n      klasse.fagnavn !== \"Norsk tegnspråk 2\"\n    );\n  });\n  //\n  function handleMuligheter(ele) {\n    setMuligheterId(ele);\n  }\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n\n    //setActiveButton(e.masterFagId);\n  };\n\n\n\n //om semester blir trykket på, blir semester6psyko resatt slik at den ikke vises i sem 9\n useEffect(() => {\n  forceRender===false && setMasterFagId('');\n\n }, [forceRender]);\n   \n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      {klassetrinn &&\n        filtered_klassetrinn.map((klasse) => {\n          const className = activeButton === klasse.id ? \"red\" : \"\";\n\n          return (\n            //oblig.MasterFagId === masterId &&\n            //om semester = 5 vis semester og semeseter fag\n            klasse.semester === semester &&\n            klasse.klasseId === klasseId && (\n              <>\n                <CustomButton\n                  inverted={className}\n                  key={klasse.id}\n                  semester={klasse.semester}\n                  klasseId={klasse.klasseId}\n                  onClick={() => {\n                    handleMuligheter(klasse.id);\n                    onSideBtnClick(klasse);\n                    setMasterFagId(klasse.masterFagId);\n                    //handleReset();\n                    setForceRender(true);\n                    \n                  }}\n                >\n                  {klasse.fagnavn}\n                </CustomButton>\n\n                <InfoButton\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(klasse.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(klasse.emnekode);\n                    setStudiepoeng(klasse.studiepoeng);\n                    //setKlasseId(oblig.klasseId)\n                    setURL(klasse.url);\n                  }}\n                ></InfoButton>\n              </>\n            )\n          );\n        })}\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Semester6Psyko;\n","/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js",["176","177"],"import React, {useEffect, useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport  Modal  from '../Modal/Modal';\nimport InfoButton from '../CustomButton/InfoButton';\n\nfunction TvungenMulighet({activeButton, setActiveButton, activeButtonTvungen, setActiveButtonTvungen, masterId, setIstrue, valg7Master, setValg7Master, setFag, setSemesterList7, semesterList7, semester, klassetrinn, sorted}) {\n    \n\n      const onExist = (e) => {\n        setActiveButtonTvungen(e.id);\n        //alert(e.id);\n      };\n\n    const [fagnavn, setFagnavn] = useState();\n    const [URL, setURL] = useState();\n    //const [semester, setSemester] = useState();\n    const [emnekode, setEmneKode] = useState();\n    const [studiepoeng, setStudiepoeng] = useState();\n    const [klasseId ,setKlasseId] = useState();\n    const [isOpen, setIsOpen] = useState(false);\n    \n\n    \n       \n    return ( \n        \n        \n        <>\n        < >\n\n        {   \n            klassetrinn&&\n            \n                sorted.map((oblig)=>{\n                    const className = activeButton === oblig.id ? \"red\" : \"\";\n                    \n                        return(\n                            //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster) \n                        oblig.masterFagId === masterId &&\n                        oblig.semester === semester &&\n                        <>\n                        \n                      \n                            <CustomButton\n                            \n                                //setter fargen på den valgte fagveien\n                                inverted={className}\n                                key={oblig.id}\n                                fag={oblig.fagnavn}\n                                activeButtonTvungen={activeButtonTvungen}\n                                setActiveButtonTvungen={onExist(oblig)}\n                                style={{backgroundColor: '#FFDC00'}}\n                                onClick ={() =>\n                                    \n                                    {\n                                   \n                                    setSemesterList7(oblig.id);\n                                    setValg7Master(oblig.masterFagId)\n                                    setIstrue(oblig.masterFagId);\n                                    \n                            }}>\n                                {oblig.fagnavn}\n                            </CustomButton>\n\n                            <InfoButton \n                            onClick={() =>{ \n                                setIsOpen(true)\n                                setFagnavn(oblig.fagnavn)\n                                //setSemester(oblig.semester)\n                                setEmneKode(oblig.emnekode)\n                                setStudiepoeng(oblig.studiepoeng)\n                                setKlasseId(oblig.klasseId)\n                                setURL(oblig.url);\n                                \n                            }}>\n                            </InfoButton>\n                            \n\n                       \n                        \n                            \n\n                        </>\n                         )\n                    })\n                }\n\n                \n                \n        \n        </>\n\n            <Modal \n                open= {isOpen} \n                onClose={() => setIsOpen(false)}\n            >\n                <h5>Info om {fagnavn}</h5><br/>\n\n                <ul id=\"Innrykk\">\n                    <li>Fagnavn: {fagnavn}</li>\n                    <li>Emnekode: {emnekode}</li>\n                    <li>Studiepoeng: {studiepoeng}</li>\n                    <li>Fagside: <a href={URL} target=\"_blank\" rel=\"noreferrer\" > Link til fagside </a></li>\n                </ul>\n            </Modal>\n       \n      \n        \n\n               </>\n               \n               \n             );\n            \n\n            };\n\nexport default TvungenMulighet\n","/Users/vikke/bachelor/src/Helpers.js",[],"/Users/vikke/bachelor/src/Validering/ValideringAlert.js",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":4,"column":10,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"186","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":13},{"ruleId":"182","severity":1,"message":"187","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":20},{"ruleId":"182","severity":1,"message":"188","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":20},{"ruleId":"182","severity":1,"message":"189","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":16},{"ruleId":"182","severity":1,"message":"190","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":16},{"ruleId":"182","severity":1,"message":"191","line":10,"column":8,"nodeType":"184","messageId":"185","endLine":10,"endColumn":20},{"ruleId":"182","severity":1,"message":"192","line":19,"column":31,"nodeType":"184","messageId":"185","endLine":19,"endColumn":36},{"ruleId":"182","severity":1,"message":"193","line":19,"column":38,"nodeType":"184","messageId":"185","endLine":19,"endColumn":47},{"ruleId":"182","severity":1,"message":"194","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":28},{"ruleId":"182","severity":1,"message":"195","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":13},{"ruleId":"182","severity":1,"message":"196","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"197","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"182","severity":1,"message":"198","line":1,"column":27,"nodeType":"184","messageId":"185","endLine":1,"endColumn":37},{"ruleId":"182","severity":1,"message":"199","line":1,"column":47,"nodeType":"184","messageId":"185","endLine":1,"endColumn":56},{"ruleId":"182","severity":1,"message":"194","line":6,"column":10,"nodeType":"184","messageId":"185","endLine":6,"endColumn":28},{"ruleId":"182","severity":1,"message":"200","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":18},{"ruleId":"182","severity":1,"message":"186","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":1,"column":25,"nodeType":"184","messageId":"185","endLine":1,"endColumn":33},{"ruleId":"182","severity":1,"message":"187","line":2,"column":8,"nodeType":"184","messageId":"185","endLine":2,"endColumn":20},{"ruleId":"182","severity":1,"message":"186","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":13},{"ruleId":"182","severity":1,"message":"201","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":14},{"ruleId":"182","severity":1,"message":"202","line":9,"column":10,"nodeType":"184","messageId":"185","endLine":9,"endColumn":28},{"ruleId":"182","severity":1,"message":"203","line":23,"column":9,"nodeType":"184","messageId":"185","endLine":23,"endColumn":26},{"ruleId":"182","severity":1,"message":"204","line":20,"column":10,"nodeType":"184","messageId":"185","endLine":20,"endColumn":18},{"ruleId":"182","severity":1,"message":"198","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"186","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":13},{"ruleId":"182","severity":1,"message":"205","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":13},{"ruleId":"182","severity":1,"message":"206","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":21},{"ruleId":"182","severity":1,"message":"207","line":13,"column":8,"nodeType":"184","messageId":"185","endLine":13,"endColumn":14},{"ruleId":"182","severity":1,"message":"200","line":18,"column":8,"nodeType":"184","messageId":"185","endLine":18,"endColumn":18},{"ruleId":"182","severity":1,"message":"208","line":20,"column":8,"nodeType":"184","messageId":"185","endLine":20,"endColumn":24},{"ruleId":"182","severity":1,"message":"192","line":32,"column":31,"nodeType":"184","messageId":"185","endLine":32,"endColumn":36},{"ruleId":"182","severity":1,"message":"193","line":32,"column":38,"nodeType":"184","messageId":"185","endLine":32,"endColumn":47},{"ruleId":"182","severity":1,"message":"209","line":34,"column":12,"nodeType":"184","messageId":"185","endLine":34,"endColumn":18},{"ruleId":"182","severity":1,"message":"210","line":34,"column":20,"nodeType":"184","messageId":"185","endLine":34,"endColumn":29},{"ruleId":"182","severity":1,"message":"211","line":44,"column":12,"nodeType":"184","messageId":"185","endLine":44,"endColumn":25},{"ruleId":"182","severity":1,"message":"212","line":60,"column":12,"nodeType":"184","messageId":"185","endLine":60,"endColumn":15},{"ruleId":"182","severity":1,"message":"213","line":74,"column":12,"nodeType":"184","messageId":"185","endLine":74,"endColumn":27},{"ruleId":"182","severity":1,"message":"214","line":81,"column":11,"nodeType":"184","messageId":"185","endLine":81,"endColumn":22},{"ruleId":"182","severity":1,"message":"215","line":92,"column":12,"nodeType":"184","messageId":"185","endLine":92,"endColumn":32},{"ruleId":"182","severity":1,"message":"216","line":92,"column":34,"nodeType":"184","messageId":"185","endLine":92,"endColumn":57},{"ruleId":"182","severity":1,"message":"217","line":111,"column":12,"nodeType":"184","messageId":"185","endLine":111,"endColumn":25},{"ruleId":"182","severity":1,"message":"218","line":111,"column":27,"nodeType":"184","messageId":"185","endLine":111,"endColumn":43},{"ruleId":"182","severity":1,"message":"219","line":117,"column":28,"nodeType":"184","messageId":"185","endLine":117,"endColumn":45},{"ruleId":"182","severity":1,"message":"220","line":119,"column":12,"nodeType":"184","messageId":"185","endLine":119,"endColumn":33},{"ruleId":"182","severity":1,"message":"221","line":119,"column":35,"nodeType":"184","messageId":"185","endLine":119,"endColumn":59},{"ruleId":"222","severity":1,"message":"223","line":183,"column":8,"nodeType":"224","endLine":188,"endColumn":9},{"ruleId":"222","severity":1,"message":"223","line":213,"column":8,"nodeType":"224","endLine":218,"endColumn":9},{"ruleId":"182","severity":1,"message":"204","line":17,"column":10,"nodeType":"184","messageId":"185","endLine":17,"endColumn":18},{"ruleId":"182","severity":1,"message":"225","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":18},{"ruleId":"182","severity":1,"message":"199","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"226","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":17},{"ruleId":"182","severity":1,"message":"204","line":33,"column":10,"nodeType":"184","messageId":"185","endLine":33,"endColumn":18},{"ruleId":"182","severity":1,"message":"227","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":22},{"ruleId":"182","severity":1,"message":"228","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":16},{"ruleId":"182","severity":1,"message":"202","line":7,"column":10,"nodeType":"184","messageId":"185","endLine":7,"endColumn":28},{"ruleId":"182","severity":1,"message":"225","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":18},{"ruleId":"182","severity":1,"message":"225","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":18},{"ruleId":"229","severity":1,"message":"230","line":51,"column":5,"nodeType":"231","endLine":51,"endColumn":18,"suggestions":"232"},{"ruleId":"182","severity":1,"message":"199","line":1,"column":16,"nodeType":"184","messageId":"185","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"204","line":19,"column":12,"nodeType":"184","messageId":"185","endLine":19,"endColumn":20},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'CustomButton' is defined but never used.","'Illustrasjon' is defined but never used.","'VelgEmne' is defined but never used.","'ToBilder' is defined but never used.","'Undervisning' is defined but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","'FaEnvelopeOpenText' is defined but never used.","'logo2' is defined but never used.","'useFetch' is defined but never used.","'VelgMaster' is defined but never used.","'useReducer' is defined but never used.","'useEffect' is defined but never used.","'InfoButton' is defined but never used.","'Elever' is defined but never used.","'AiOutlineArrowDown' is defined but never used.","'handleScrollClick' is assigned a value but never used.","'klasseId' is assigned a value but never used.","'Print' is defined but never used.","'ValgtMulighet' is defined but never used.","'styled' is defined but never used.","'TvungenMulighet2' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'mulighetTull2' is assigned a value but never used.","'tom' is assigned a value but never used.","'conditionalSem9' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'activeButtonTvungen3' is assigned a value but never used.","'setActiveButtonTvungen3' is assigned a value but never used.","'activeButton5' is assigned a value but never used.","'setActiveButton5' is assigned a value but never used.","'setBegynnerLaring' is assigned a value but never used.","'begynnerLaringBoolean' is assigned a value but never used.","'setBegynnerLaringBoolean' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Muligheter' is defined but never used.","'className' is defined but never used.","'Semester6Psyko' is defined but never used.","'Semester' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMasterFagId'. Either include it or remove the dependency array. If 'setMasterFagId' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},"Update the dependencies array to be: [forceRender, setMasterFagId]",{"range":"238","text":"239"},[1224,1237],"[forceRender, setMasterFagId]"]