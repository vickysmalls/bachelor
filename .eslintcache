[{"/Users/vikke/oslomet3/src/index.js":"1","/Users/vikke/oslomet3/src/App.js":"2","/Users/vikke/oslomet3/src/VelgKlasse/KlasseList.js":"3","/Users/vikke/oslomet3/src/Header/Header.js":"4","/Users/vikke/oslomet3/src/useFetch.js":"5","/Users/vikke/oslomet3/src/CustomButton/CustomButton.js":"6","/Users/vikke/oslomet3/src/VelgMaster/VelgMaster.js":"7","/Users/vikke/oslomet3/src/useFetchOblig.js":"8","/Users/vikke/oslomet3/src/VelgMuligheter/VelgMuligheter.js":"9","/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-card.js":"10","/Users/vikke/oslomet3/src/KlassePage.js":"11","/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-semester.js":"12","/Users/vikke/oslomet3/src/VelgMuligheter/Muligheter.js":"13","/Users/vikke/oslomet3/src/Semester/Semester.js":"14","/Users/vikke/oslomet3/src/fag-card/oblig-fag-card.js":"15"},{"size":221,"mtime":1611845406882,"results":"16","hashOfConfig":"17"},{"size":487,"mtime":1612878258591,"results":"18","hashOfConfig":"17"},{"size":2506,"mtime":1612878274669,"results":"19","hashOfConfig":"17"},{"size":243,"mtime":1612293381934,"results":"20","hashOfConfig":"17"},{"size":1559,"mtime":1612887376915,"results":"21","hashOfConfig":"17"},{"size":328,"mtime":1611845406879,"results":"22","hashOfConfig":"17"},{"size":2216,"mtime":1612362231551,"results":"23","hashOfConfig":"17"},{"size":1432,"mtime":1611870968176,"results":"24","hashOfConfig":"17"},{"size":2330,"mtime":1613041555284,"results":"25","hashOfConfig":"17"},{"size":2184,"mtime":1612360299897,"results":"26","hashOfConfig":"17"},{"size":428,"mtime":1612141186836,"results":"27","hashOfConfig":"17"},{"size":1326,"mtime":1612888035954,"results":"28","hashOfConfig":"17"},{"size":2270,"mtime":1612900109088,"results":"29","hashOfConfig":"17"},{"size":1846,"mtime":1612885277402,"results":"30","hashOfConfig":"17"},{"size":0,"mtime":1612357234653,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"lksjim",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"/Users/vikke/oslomet3/src/index.js",[],["74","75"],"/Users/vikke/oslomet3/src/App.js",["76","77"],"import Navbar from './Header/Header';\nimport KlasseList from './VelgKlasse/KlasseList';\nimport './App.css';\nimport {useState} from 'react';\n\n\nfunction App () {\n\n\n  const [showAdd, setShowAdd] = useState(true);\n    return (\n    <div className=\"App\">\n      <Navbar/>\n      <div className=\"content\">\n      <div className='fagcard'>\n\n       <KlasseList/>\n        \n       \n      </div>\n      <div>\n      \n      </div>\n      \n        </div>\n      \n    </div>\n  );\n  }\n  \n\n\nexport default App;\n","/Users/vikke/oslomet3/src/VelgKlasse/KlasseList.js",["78","79","80"],"import { useState  } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport VelgMaster from \"../VelgMaster/VelgMaster\";\n\n\nconst KlasseList = ({ handleClick}) => {\n\n    //henter tabellen klasser og plasserer det i klassetrinn\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/klasser`);\n\n    //setter klassetrinn til å bli answer\n    const [answer, setAnswer] = useState(klassetrinn);\n\n    //brukes til å lagre objektet\n    const [obj, setObj] = useState();\n    const [visVidere, setVisVidere] = useState(false);\n    \n    \n    \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        console.log(e);\n        const id = e.id;\n        console.log('id fra handleClick = '+id);\n        \n    }\n\n    function visVidereClick(visVidere){\n        console.log('vis videre klikket');\n        console.log(visVidere);\n        \n        setVisVidere(true)\n    }\n    \n    return ( \n        \n        <div className=''>\n        <h2>Velg Klassetrinn</h2>\n            \n            {\n                //sjekker om klassetrinn er ok, deretter mappe gjennom klassene\n                klassetrinn && \n                klassetrinn.map((klasse) =>(\n                    <CustomButton \n                    key={klasse.id}\n                    options={klasse}\n                    \n                    onClick={() =>{\n                        \n                        //setter statene fra øverst, og funksjonen handleclick\n                        setObj(klasse)  \n                        setAnswer(klasse.id)\n                        handleClick(klasse.id)\n                        visVidereClick(visVidere)\n                        \n                    }}\n                    >\n                    Grunnskolelærer {klasse.klassetrinn} trinn\n                    </CustomButton>\n                    \n\n                    \n                ))\n                \n            }\n            {\n                //gjør answer og obj til props, slik at den kan brukes i ObligFagCard\n                //aswer blir klasse id, som blir satt i onClick funkjsonen\n                visVidere &&\n                <VelgMaster \n                answer={answer}\n                obj={obj}\n                \n\n                />\n                \n            }\n            \n            \n            {\n                \n            }\n            \n\n           \n            \n        </div>\n     );\n}\n \nexport default KlasseList;","/Users/vikke/oslomet3/src/Header/Header.js",[],"/Users/vikke/oslomet3/src/useFetch.js",["81"],"import {useState, useEffect} from 'react';\n\n                //must pass in the url to fetch\nconst useFetch = (url, id) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n    const [obligFag, setObligFag] = useState(null);\n    \n    \n      \n      //runs every re-render\n      //Fetches data as soon as the component renders, then updates state\n    useEffect(() => {\n        const abortCont = new AbortController();\n        console.log('use effetct ran');\n\n        fetch(url, {signal: AbortController.signal})\n          .then(res => {\n              \n              if(!res.ok){\n                  throw Error('Could not fetch the data for that resource');\n                  \n              }\n              return res.json()\n          })\n          .then(data => {\n              setData(data);\n              setIsPending(false);\n              setError(null);\n              setObligFag(obligFag);\n              \n\n          })\n          .catch(err => {\n              if(err.name === 'AbortError'){\n                  console.log('fetch aborted');\n              }\n              else{\n                setIsPending(false);\n                setError(err.message);\n              }\n              \n\n          })\n        return () => abortCont.abort();\n        //the dependency array [] below makes sure that the useEffect hook\n        //only run the function after the first initial render\n    }, [url]);\n\n    return {data, isPending, error, obligFag}\n\n}\n\nexport default useFetch;","/Users/vikke/oslomet3/src/CustomButton/CustomButton.js",[],"/Users/vikke/oslomet3/src/VelgMaster/VelgMaster.js",["82","83","84","85","86","87"],"import React, {useState} from 'react'\nimport './VelgMaster.css';\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nimport ObligFagCard from '../oblig-fag/oblig-fag-card';\nconst _ = require(\"lodash\");  \n\n\n\nconst VelgMaster = ({answer}) => {\n\n    //setter masterfag tabellen til masterFag\n    const {data: masterFag, error, isPending} = useFetch(`http://localhost:5000/api/masterfag/`);\n    \n    // slik at det brukes/ lagres i neste komponent\n    const [fagNavn, setFagnavn] = useState();\n    const [masterId, setMasterId] = useState();\n    const [visVidere, setVisVidere] = useState(false);\n    const [farge, setFarge] = useState();\n\n    \n   \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        \n        console.log(e);\n        \n    }\n\n    function byttFarge(farge){\n        console.log('vis videre klikket');\n        console.log(visVidere);\n        \n        \n    }\n\n\n    return ( \n        <div>\n        <h2>Velg Masteremne</h2>\n        <div className='card-container'>\n\n            {\n                masterFag &&\n                    \n                    masterFag.map((oblig)=>(\n                        \n                        //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n                        oblig.klasseId === answer &&\n                        \n                    <CustomButton \n                        key={oblig.id}\n                        options={oblig}\n                        onClick={() =>{\n                            handleClick(oblig)\n                            setMasterId(oblig.id)\n                            setFagnavn(oblig.fagnavn)\n                            setVisVidere(true)\n                            \n                        }}\n                        >\n                         {oblig.fagnavn}\n                    </CustomButton>\n                    ))\n            }\n           \n        </div>\n\n        <div className=\"ny\">\n        {   \n            visVidere&&\n            <ObligFagCard masterId={masterId} fagNavn={fagNavn} answer={answer}/>\n        \n        }\n        \n        </div>\n        </div>\n        \n        \n     );\n};\nexport default VelgMaster;\n","/Users/vikke/oslomet3/src/useFetchOblig.js",[],"/Users/vikke/oslomet3/src/VelgMuligheter/VelgMuligheter.js",["88","89","90","91"],"/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-card.js",["92","93","94","95"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nimport VelgMuligheter from '../VelgMuligheter/VelgMuligheter';\nimport ObligFagSemester from './oblig-fag-semester';\nconst _ = require(\"lodash\");  \n\n\n\nconst ObligFagCard = ({answer, masterId, obj}) => {\n\n    \n    \n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/obligfag/`);\n    const [visVidere, setVisVidere] = useState(false);\n\n\n    function visVidereClick(visVidere){\n        console.log('vis videre klikket');\n        console.log(visVidere);\n        \n        setVisVidere(true)\n    }\n    \n   \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        \n        console.log(e);\n        \n    }\n\n\n    //lager et array som sortrer etter semester\n    const iteratees = obj => obj.semester;\n    const sorted = _.sortBy(klassetrinn, iteratees);\n    \n\n    \n\n    return ( \n        <div>\n        <h2>Obligs</h2>\n\n        <h2>Semester 1</h2>\n        <div className='card-container'>\n            {\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester semester={1} answer={answer}/>\n            }\n\n        </div>\n\n        <h2>Semester 2</h2>\n        <div className='card-container'>\n            {\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester semester={2} answer={answer}/>\n            }\n\n        </div>\n        <h2>Semester 2</h2>\n        <div className='card-container'>\n            {\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester semester={3} answer={answer}/>\n            }\n\n        </div>\n\n        \n\n        <div>\n            {\n                <CustomButton onClick={() => {visVidereClick(visVidere)}} >Videre</CustomButton>\n            }\n        </div>\n        \n        <div className=\"ny\">\n        {\n            \n            visVidere&&\n            <VelgMuligheter masterId={masterId} answer={answer}></VelgMuligheter>\n            \n\n       \n        }\n        \n        </div>\n        </div>\n        \n        \n     );\n};\nexport default ObligFagCard;","/Users/vikke/oslomet3/src/KlassePage.js",["96","97","98","99"],"import ObligFagCard from \"./oblig-fag/oblig-fag-card\";\nimport KlasseList from \"./VelgKlasse/KlasseList\";\nimport useFetch from './useFetch';\nimport {useState} from 'react';\n\n\nconst KlassePage = () => {\n\n   \n\n    \n\n    return ( \n        <div>\n        \n        {\n            \n           \n        }\n                \n            \n   \n        \n        \n\n        \n        \n       \n        </div>\n     );\n}\n \nexport default KlassePage;\n",["100","101"],"/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-semester.js",["102","103","104"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nconst _ = require(\"lodash\");  \n\n\n//Denne koomponenten gjør at man kan plotte inn semestesr og klasse id(answer) i oblig-fag-card\nconst ObligFagSemester = ({answer, semester}) => {\n\n    \n    \n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/obligfag/`);\n\n    //lager et array som sortrer etter semester\n    const iteratees = obj => obj.semester;\n    const sorted = _.sortBy(klassetrinn, iteratees);\n    \n\n    return ( \n        <>\n        \n\n            {\n                \n                    // det sorterte arrayet mappes\n                    sorted.map((oblig)=>(\n                        //om klasseId er det samme som answer fra KlasseList =>\n                        oblig.klasseId ===answer &&\n                        oblig.semester ===semester &&\n                        <CustomButton \n                            key={oblig.id}\n                            \n                        >\n                         {oblig.fagnavn}\n                        </CustomButton>\n                        \n                    ))\n            }\n            {\n                \n            }\n\n        \n        </>\n        \n        \n     );\n};\nexport default ObligFagSemester;","/Users/vikke/oslomet3/src/VelgMuligheter/Muligheter.js",["105","106","107","108"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport Semester from '../Semester/Semester';\nimport useFetch from '../useFetch';\nconst _ = require(\"lodash\");  \n\n\n\n\nconst Muligheter = ({masterId, semester, isTrue, klasseId}) => {\n\n    \n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/muligheter/`);\n\n    //const [isTrue, setIsTrue] = useState(false);\n   \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        \n        console.log(e);\n        \n    }\n\n       //lager et array som sortrer etter semester\n       const iteratees = obj => obj.semester;\n       const sorted = _.sortBy(klassetrinn, iteratees);\n    \n    \n\n       \n    return ( \n        \n        \n        <>\n        \n        \n        \n\n            {   \n                klassetrinn &&\n                \n                    sorted.map((oblig)=>(\n                            \n                            //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster) \n                            oblig.masterFagId === masterId &&\n                            oblig.semester === semester &&\n                                <CustomButton\n                                    //setter fargen på den valgte fagveien\n                                    style={{backgroundColor: 'red'}} \n                                    key={oblig.id}\n                                    fag={oblig.fagnavn}\n                                    \n                                    onClick ={() =>{\n                                        handleClick(oblig);\n                                        //setIsTrue(true);\n                                        isTrue(true);\n                                        \n                                    }}\n                                >\n                                    {oblig.fagnavn}\n                                </CustomButton>\n                                 \n                            ))\n                \n                    \n                         \n                        \n\n            }\n            \n\n           \n            \n \n        </>\n        \n        \n        \n        \n     );\n};\nexport default Muligheter;\n","/Users/vikke/oslomet3/src/Semester/Semester.js",["109","110","111"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\n\nimport useFetch from '../useFetch';\n\nconst Semester = ({klasseId, semester}) => {\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/muligheter/`);\n    \n    \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        \n        console.log(e);\n        \n    }\n    \n    return ( \n        <div>\n        \n        <div className=''>\n        \n            {\n                klassetrinn &&\n                        klassetrinn.map((oblig)=>(\n                            \n                            //oblig.MasterFagId === masterId &&\n                            //om semester = 5 vis semester og semeseter fag\n                            oblig.semester === semester &&\n                            oblig.klasseId === klasseId &&\n                            \n                            <div className=''>\n                            \n                            \n                                <CustomButton \n                                    key={oblig.id}\n                                    semester={oblig.semester}\n                                    klasseId = {oblig.klasseId}\n                                    onClick = {() =>{\n                                        handleClick(oblig)\n\n                                    }}\n                                >\n                                    semester:{oblig.semester}, fag: \n\n                                    {oblig.fagnavn}\n                                </CustomButton>\n                               \n                                          \n                            </div>\n                ))\n            }\n \n        </div>\n        \n    </div>\n        \n        \n     );\n}\n \nexport default Semester;","/Users/vikke/oslomet3/src/fag-card/oblig-fag-card.js",[],["112","113"],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":10,"column":10,"nodeType":"120","messageId":"121","endLine":10,"endColumn":17},{"ruleId":"118","severity":1,"message":"122","line":10,"column":19,"nodeType":"120","messageId":"121","endLine":10,"endColumn":29},{"ruleId":"118","severity":1,"message":"123","line":10,"column":31,"nodeType":"120","messageId":"121","endLine":10,"endColumn":36},{"ruleId":"118","severity":1,"message":"124","line":10,"column":38,"nodeType":"120","messageId":"121","endLine":10,"endColumn":47},{"ruleId":"125","severity":1,"message":"126","line":22,"column":14,"nodeType":"120","messageId":"127","endLine":22,"endColumn":25},{"ruleId":"128","severity":1,"message":"129","line":49,"column":8,"nodeType":"130","endLine":49,"endColumn":13,"suggestions":"131"},{"ruleId":"118","severity":1,"message":"132","line":6,"column":7,"nodeType":"120","messageId":"121","endLine":6,"endColumn":8},{"ruleId":"118","severity":1,"message":"123","line":13,"column":29,"nodeType":"120","messageId":"121","endLine":13,"endColumn":34},{"ruleId":"118","severity":1,"message":"124","line":13,"column":36,"nodeType":"120","messageId":"121","endLine":13,"endColumn":45},{"ruleId":"118","severity":1,"message":"133","line":19,"column":12,"nodeType":"120","messageId":"121","endLine":19,"endColumn":17},{"ruleId":"118","severity":1,"message":"134","line":19,"column":19,"nodeType":"120","messageId":"121","endLine":19,"endColumn":27},{"ruleId":"118","severity":1,"message":"135","line":31,"column":14,"nodeType":"120","messageId":"121","endLine":31,"endColumn":23},{"ruleId":"118","severity":1,"message":"136","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":24},{"ruleId":"118","severity":1,"message":"137","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"118","severity":1,"message":"138","line":12,"column":12,"nodeType":"120","messageId":"121","endLine":12,"endColumn":18},{"ruleId":"118","severity":1,"message":"139","line":12,"column":20,"nodeType":"120","messageId":"121","endLine":12,"endColumn":29},{"ruleId":"118","severity":1,"message":"123","line":14,"column":31,"nodeType":"120","messageId":"121","endLine":14,"endColumn":36},{"ruleId":"118","severity":1,"message":"124","line":14,"column":38,"nodeType":"120","messageId":"121","endLine":14,"endColumn":47},{"ruleId":"118","severity":1,"message":"140","line":27,"column":14,"nodeType":"120","messageId":"121","endLine":27,"endColumn":25},{"ruleId":"118","severity":1,"message":"141","line":37,"column":11,"nodeType":"120","messageId":"121","endLine":37,"endColumn":17},{"ruleId":"118","severity":1,"message":"142","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":20},{"ruleId":"118","severity":1,"message":"143","line":2,"column":8,"nodeType":"120","messageId":"121","endLine":2,"endColumn":18},{"ruleId":"118","severity":1,"message":"137","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":16},{"ruleId":"118","severity":1,"message":"144","line":4,"column":9,"nodeType":"120","messageId":"121","endLine":4,"endColumn":17},{"ruleId":"114","replacedBy":"145"},{"ruleId":"116","replacedBy":"146"},{"ruleId":"118","severity":1,"message":"144","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"123","line":12,"column":31,"nodeType":"120","messageId":"121","endLine":12,"endColumn":36},{"ruleId":"118","severity":1,"message":"124","line":12,"column":38,"nodeType":"120","messageId":"121","endLine":12,"endColumn":47},{"ruleId":"118","severity":1,"message":"144","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"147","line":3,"column":8,"nodeType":"120","messageId":"121","endLine":3,"endColumn":16},{"ruleId":"118","severity":1,"message":"123","line":13,"column":31,"nodeType":"120","messageId":"121","endLine":13,"endColumn":36},{"ruleId":"118","severity":1,"message":"124","line":13,"column":38,"nodeType":"120","messageId":"121","endLine":13,"endColumn":47},{"ruleId":"118","severity":1,"message":"144","line":1,"column":16,"nodeType":"120","messageId":"121","endLine":1,"endColumn":24},{"ruleId":"118","severity":1,"message":"123","line":7,"column":31,"nodeType":"120","messageId":"121","endLine":7,"endColumn":36},{"ruleId":"118","severity":1,"message":"124","line":7,"column":38,"nodeType":"120","messageId":"121","endLine":7,"endColumn":47},{"ruleId":"114","replacedBy":"148"},{"ruleId":"116","replacedBy":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'showAdd' is assigned a value but never used.","Identifier","unusedVar","'setShowAdd' is assigned a value but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","no-redeclare","'handleClick' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'obligFag'. Either include it or remove the dependency array. You can also do a functional update 'setObligFag(o => ...)' if you only need 'obligFag' in the 'setObligFag' call.","ArrayExpression",["152"],"'_' is assigned a value but never used.","'farge' is assigned a value but never used.","'setFarge' is assigned a value but never used.","'byttFarge' is defined but never used.","'ObligFagSemester' is defined but never used.","'useFetch' is defined but never used.","'isTrue' is assigned a value but never used.","'setIsTrue' is assigned a value but never used.","'handleClick' is defined but never used.","'sorted' is assigned a value but never used.","'ObligFagCard' is defined but never used.","'KlasseList' is defined but never used.","'useState' is defined but never used.",["150"],["151"],"'Semester' is defined but never used.",["150"],["151"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [obligFag, url]",{"range":"155","text":"156"},[1476,1481],"[obligFag, url]"]