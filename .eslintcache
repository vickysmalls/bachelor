[{"/Users/vikke/oslomet3/src/index.js":"1","/Users/vikke/oslomet3/src/App.js":"2","/Users/vikke/oslomet3/src/VelgKlasse/KlasseList.js":"3","/Users/vikke/oslomet3/src/Header/Header.js":"4","/Users/vikke/oslomet3/src/useFetch.js":"5","/Users/vikke/oslomet3/src/CustomButton/CustomButton.js":"6","/Users/vikke/oslomet3/src/VelgMaster/VelgMaster.js":"7","/Users/vikke/oslomet3/src/useFetchOblig.js":"8","/Users/vikke/oslomet3/src/VelgMuligheter/VelgMuligheter.js":"9","/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-card.js":"10","/Users/vikke/oslomet3/src/KlassePage.js":"11","/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-semester.js":"12","/Users/vikke/oslomet3/src/VelgMuligheter/Muligheter.js":"13","/Users/vikke/oslomet3/src/Semester/Semester.js":"14","/Users/vikke/oslomet3/src/fag-card/oblig-fag-card.js":"15"},{"size":221,"mtime":1611845406882,"results":"16","hashOfConfig":"17"},{"size":487,"mtime":1612878258591,"results":"18","hashOfConfig":"17"},{"size":2506,"mtime":1612878274669,"results":"19","hashOfConfig":"17"},{"size":243,"mtime":1612293381934,"results":"20","hashOfConfig":"17"},{"size":1551,"mtime":1613394869420,"results":"21","hashOfConfig":"17"},{"size":328,"mtime":1611845406879,"results":"22","hashOfConfig":"17"},{"size":2337,"mtime":1613395132845,"results":"23","hashOfConfig":"17"},{"size":1432,"mtime":1611870968176,"results":"24","hashOfConfig":"17"},{"size":3677,"mtime":1613397342555,"results":"25","hashOfConfig":"17"},{"size":2281,"mtime":1613395143990,"results":"26","hashOfConfig":"17"},{"size":428,"mtime":1612141186836,"results":"27","hashOfConfig":"17"},{"size":1326,"mtime":1612888035954,"results":"28","hashOfConfig":"17"},{"size":2405,"mtime":1613394255870,"results":"29","hashOfConfig":"17"},{"size":1861,"mtime":1613126730314,"results":"30","hashOfConfig":"17"},{"size":0,"mtime":1612357234653,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"lksjim",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/vikke/oslomet3/src/index.js",[],["72","73"],"/Users/vikke/oslomet3/src/App.js",["74","75"],"import Navbar from './Header/Header';\nimport KlasseList from './VelgKlasse/KlasseList';\nimport './App.css';\nimport {useState} from 'react';\n\n\nfunction App () {\n\n\n  const [showAdd, setShowAdd] = useState(true);\n    return (\n    <div className=\"App\">\n      <Navbar/>\n      <div className=\"content\">\n      <div className='fagcard'>\n\n       <KlasseList/>\n        \n       \n      </div>\n      <div>\n      \n      </div>\n      \n        </div>\n      \n    </div>\n  );\n  }\n  \n\n\nexport default App;\n","/Users/vikke/oslomet3/src/VelgKlasse/KlasseList.js",["76","77","78"],"import { useState  } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport VelgMaster from \"../VelgMaster/VelgMaster\";\n\n\nconst KlasseList = ({ handleClick}) => {\n\n    //henter tabellen klasser og plasserer det i klassetrinn\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/klasser`);\n\n    //setter klassetrinn til å bli answer\n    const [answer, setAnswer] = useState(klassetrinn);\n\n    //brukes til å lagre objektet\n    const [obj, setObj] = useState();\n    const [visVidere, setVisVidere] = useState(false);\n    \n    \n    \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        console.log(e);\n        const id = e.id;\n        console.log('id fra handleClick = '+id);\n        \n    }\n\n    function visVidereClick(visVidere){\n        console.log('vis videre klikket');\n        console.log(visVidere);\n        \n        setVisVidere(true)\n    }\n    \n    return ( \n        \n        <div className=''>\n        <h2>Velg Klassetrinn</h2>\n            \n            {\n                //sjekker om klassetrinn er ok, deretter mappe gjennom klassene\n                klassetrinn && \n                klassetrinn.map((klasse) =>(\n                    <CustomButton \n                    key={klasse.id}\n                    options={klasse}\n                    \n                    onClick={() =>{\n                        \n                        //setter statene fra øverst, og funksjonen handleclick\n                        setObj(klasse)  \n                        setAnswer(klasse.id)\n                        handleClick(klasse.id)\n                        visVidereClick(visVidere)\n                        \n                    }}\n                    >\n                    Grunnskolelærer {klasse.klassetrinn} trinn\n                    </CustomButton>\n                    \n\n                    \n                ))\n                \n            }\n            {\n                //gjør answer og obj til props, slik at den kan brukes i ObligFagCard\n                //aswer blir klasse id, som blir satt i onClick funkjsonen\n                visVidere &&\n                <VelgMaster \n                answer={answer}\n                obj={obj}\n                \n\n                />\n                \n            }\n            \n            \n            {\n                \n            }\n            \n\n           \n            \n        </div>\n     );\n}\n \nexport default KlasseList;","/Users/vikke/oslomet3/src/Header/Header.js",[],"/Users/vikke/oslomet3/src/useFetch.js",["79"],"import {useState, useEffect} from 'react';\n\n        //must pass in the url to fetch\nconst useFetch = (url, id) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n    const [obligFag, setObligFag] = useState(null);\n    \n    \n      \n      //runs every re-render\n      //Fetches data as soon as the component renders, then updates state\n    useEffect(() => {\n        const abortCont = new AbortController();\n        console.log('use effetct ran');\n\n        fetch(url, {signal: AbortController.signal})\n          .then(res => {\n              \n              if(!res.ok){\n                  throw Error('Could not fetch the data for that resource');\n                  \n              }\n              return res.json()\n          })\n          .then(data => {\n              setData(data);\n              setIsPending(false);\n              setError(null);\n              setObligFag(obligFag);\n              \n\n          })\n          .catch(err => {\n              if(err.name === 'AbortError'){\n                  console.log('fetch aborted');\n              }\n              else{\n                setIsPending(false);\n                setError(err.message);\n              }\n              \n\n          })\n        return () => abortCont.abort();\n        //the dependency array [] below makes sure that the useEffect hook\n        //only run the function after the first initial render\n    }, [url]);\n\n    return {data, isPending, error, obligFag}\n\n}\n\nexport default useFetch;","/Users/vikke/oslomet3/src/CustomButton/CustomButton.js",[],"/Users/vikke/oslomet3/src/VelgMaster/VelgMaster.js",["80","81","82","83","84","85","86","87"],"/Users/vikke/oslomet3/src/useFetchOblig.js",[],"/Users/vikke/oslomet3/src/VelgMuligheter/VelgMuligheter.js",["88","89","90","91","92","93"],"/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-card.js",["94","95","96","97","98"],"/Users/vikke/oslomet3/src/KlassePage.js",["99","100","101","102"],"import ObligFagCard from \"./oblig-fag/oblig-fag-card\";\nimport KlasseList from \"./VelgKlasse/KlasseList\";\nimport useFetch from './useFetch';\nimport {useState} from 'react';\n\n\nconst KlassePage = () => {\n\n   \n\n    \n\n    return ( \n        <div>\n        \n        {\n            \n           \n        }\n                \n            \n   \n        \n        \n\n        \n        \n       \n        </div>\n     );\n}\n \nexport default KlassePage;\n",["103","104"],"/Users/vikke/oslomet3/src/oblig-fag/oblig-fag-semester.js",["105","106","107"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nconst _ = require(\"lodash\");  \n\n\n//Denne koomponenten gjør at man kan plotte inn semestesr og klasse id(answer) i oblig-fag-card\nconst ObligFagSemester = ({answer, semester}) => {\n\n    \n    \n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/obligfag/`);\n\n    //lager et array som sortrer etter semester\n    const iteratees = obj => obj.semester;\n    const sorted = _.sortBy(klassetrinn, iteratees);\n    \n\n    return ( \n        <>\n        \n\n            {\n                \n                    // det sorterte arrayet mappes\n                    sorted.map((oblig)=>(\n                        //om klasseId er det samme som answer fra KlasseList =>\n                        oblig.klasseId ===answer &&\n                        oblig.semester ===semester &&\n                        <CustomButton \n                            key={oblig.id}\n                            \n                        >\n                         {oblig.fagnavn}\n                        </CustomButton>\n                        \n                    ))\n            }\n            {\n                \n            }\n\n        \n        </>\n        \n        \n     );\n};\nexport default ObligFagSemester;","/Users/vikke/oslomet3/src/VelgMuligheter/Muligheter.js",["108","109","110","111","112"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport Semester from '../Semester/Semester';\nimport useFetch from '../useFetch';\nconst _ = require(\"lodash\");  \n\n\n\n\nconst Muligheter = ({masterId, semester, isTrue, klasseId, klassetrinn, sorted, answer}) => {\n\n    \n    //const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/muligheter/`);\n\n    const [mulighetTrue, setMulighetTrue] = useState(false);\n   \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        \n        console.log(e);\n        \n    }\n\n       //lager et array som sortrer etter semester\n       //const iteratees = obj => obj.semester;\n       //const sorted = _.sortBy(klassetrinn, iteratees);\n    \n    \n\n       \n    return ( \n        \n        \n        <>\n        \n        \n        \n\n            {   \n                klassetrinn&&\n                \n                    sorted.map((oblig)=>(\n                            \n                            //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster) \n                            oblig.masterFagId === masterId &&\n                            oblig.semester === semester &&\n                            \n                                <CustomButton\n                                    //setter fargen på den valgte fagveien\n                                    style={{backgroundColor: 'red'}} \n                                    key={oblig.id}\n                                    fag={oblig.fagnavn}\n                                    \n                                    onClick ={() =>{\n                                        handleClick(oblig);\n                                        //setIsTrue(true);\n                                        isTrue(true);\n                                        \n                                    }}\n                                >\n                                    {oblig.fagnavn}\n                                </CustomButton>\n                                 \n                            \n                            \n                                ))\n                \n                    \n                         \n                        \n\n            }\n            \n\n           \n            \n \n        </>\n        \n        \n        \n        \n     );\n};\nexport default Muligheter;\n","/Users/vikke/oslomet3/src/Semester/Semester.js",["113","114"],"import React, {useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\n\nimport useFetch from '../useFetch';\n\nconst Semester = ({klasseId, semester, klassetrinn}) => {\n    //const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/muligheter/`);\n    \n    \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked.');\n        \n        console.log(e);\n        \n    }\n    \n    return ( \n        <div>\n        \n        <div className=''>\n        \n            {\n                klassetrinn &&\n                        klassetrinn.map((oblig)=>(\n                            \n                            //oblig.MasterFagId === masterId &&\n                            //om semester = 5 vis semester og semeseter fag\n                            oblig.semester === semester &&\n                            oblig.klasseId === klasseId &&\n                            \n                            <div className=''>\n                            \n                            \n                                <CustomButton \n                                    key={oblig.id}\n                                    semester={oblig.semester}\n                                    klasseId = {oblig.klasseId}\n                                    onClick = {() =>{\n                                        handleClick(oblig)\n\n                                    }}\n                                >\n                                    semester:{oblig.semester}, fag: \n\n                                    {oblig.fagnavn}\n                                </CustomButton>\n                               \n                                          \n                            </div>\n                ))\n            }\n \n        </div>\n        \n    </div>\n        \n        \n     );\n}\n \nexport default Semester;","/Users/vikke/oslomet3/src/fag-card/oblig-fag-card.js",[],["115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":10,"column":10,"nodeType":"123","messageId":"124","endLine":10,"endColumn":17},{"ruleId":"121","severity":1,"message":"125","line":10,"column":19,"nodeType":"123","messageId":"124","endLine":10,"endColumn":29},{"ruleId":"121","severity":1,"message":"126","line":10,"column":31,"nodeType":"123","messageId":"124","endLine":10,"endColumn":36},{"ruleId":"121","severity":1,"message":"127","line":10,"column":38,"nodeType":"123","messageId":"124","endLine":10,"endColumn":47},{"ruleId":"128","severity":1,"message":"129","line":22,"column":14,"nodeType":"123","messageId":"130","endLine":22,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":49,"column":8,"nodeType":"133","endLine":49,"endColumn":13,"suggestions":"134"},{"ruleId":"121","severity":1,"message":"135","line":6,"column":7,"nodeType":"123","messageId":"124","endLine":6,"endColumn":8},{"ruleId":"121","severity":1,"message":"126","line":13,"column":29,"nodeType":"123","messageId":"124","endLine":13,"endColumn":34},{"ruleId":"121","severity":1,"message":"127","line":13,"column":36,"nodeType":"123","messageId":"124","endLine":13,"endColumn":45},{"ruleId":"121","severity":1,"message":"136","line":20,"column":12,"nodeType":"123","messageId":"124","endLine":20,"endColumn":17},{"ruleId":"121","severity":1,"message":"137","line":20,"column":19,"nodeType":"123","messageId":"124","endLine":20,"endColumn":27},{"ruleId":"121","severity":1,"message":"138","line":21,"column":12,"nodeType":"123","messageId":"124","endLine":21,"endColumn":15},{"ruleId":"121","severity":1,"message":"139","line":21,"column":17,"nodeType":"123","messageId":"124","endLine":21,"endColumn":23},{"ruleId":"121","severity":1,"message":"140","line":33,"column":14,"nodeType":"123","messageId":"124","endLine":33,"endColumn":23},{"ruleId":"121","severity":1,"message":"141","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":24},{"ruleId":"121","severity":1,"message":"126","line":15,"column":31,"nodeType":"123","messageId":"124","endLine":15,"endColumn":36},{"ruleId":"121","severity":1,"message":"127","line":15,"column":38,"nodeType":"123","messageId":"124","endLine":15,"endColumn":47},{"ruleId":"121","severity":1,"message":"142","line":17,"column":14,"nodeType":"123","messageId":"124","endLine":17,"endColumn":18},{"ruleId":"121","severity":1,"message":"143","line":31,"column":12,"nodeType":"123","messageId":"124","endLine":31,"endColumn":18},{"ruleId":"121","severity":1,"message":"144","line":31,"column":20,"nodeType":"123","messageId":"124","endLine":31,"endColumn":29},{"ruleId":"121","severity":1,"message":"145","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":18},{"ruleId":"121","severity":1,"message":"126","line":16,"column":31,"nodeType":"123","messageId":"124","endLine":16,"endColumn":36},{"ruleId":"121","severity":1,"message":"127","line":16,"column":38,"nodeType":"123","messageId":"124","endLine":16,"endColumn":47},{"ruleId":"121","severity":1,"message":"146","line":32,"column":14,"nodeType":"123","messageId":"124","endLine":32,"endColumn":25},{"ruleId":"121","severity":1,"message":"147","line":42,"column":11,"nodeType":"123","messageId":"124","endLine":42,"endColumn":17},{"ruleId":"121","severity":1,"message":"148","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":20},{"ruleId":"121","severity":1,"message":"149","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":18},{"ruleId":"121","severity":1,"message":"150","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"151","line":4,"column":9,"nodeType":"123","messageId":"124","endLine":4,"endColumn":17},{"ruleId":"117","replacedBy":"152"},{"ruleId":"119","replacedBy":"153"},{"ruleId":"121","severity":1,"message":"151","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"126","line":12,"column":31,"nodeType":"123","messageId":"124","endLine":12,"endColumn":36},{"ruleId":"121","severity":1,"message":"127","line":12,"column":38,"nodeType":"123","messageId":"124","endLine":12,"endColumn":47},{"ruleId":"121","severity":1,"message":"154","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"150","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":16},{"ruleId":"121","severity":1,"message":"135","line":5,"column":7,"nodeType":"123","messageId":"124","endLine":5,"endColumn":8},{"ruleId":"121","severity":1,"message":"155","line":15,"column":12,"nodeType":"123","messageId":"124","endLine":15,"endColumn":24},{"ruleId":"121","severity":1,"message":"156","line":15,"column":26,"nodeType":"123","messageId":"124","endLine":15,"endColumn":41},{"ruleId":"121","severity":1,"message":"151","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"150","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":16},{"ruleId":"117","replacedBy":"157"},{"ruleId":"119","replacedBy":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'showAdd' is assigned a value but never used.","Identifier","unusedVar","'setShowAdd' is assigned a value but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","no-redeclare","'handleClick' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'obligFag'. Either include it or remove the dependency array. You can also do a functional update 'setObligFag(o => ...)' if you only need 'obligFag' in the 'setObligFag' call.","ArrayExpression",["161"],"'_' is assigned a value but never used.","'farge' is assigned a value but never used.","'setFarge' is assigned a value but never used.","'obj' is assigned a value but never used.","'setObj' is assigned a value but never used.","'byttFarge' is defined but never used.","'ObligFagSemester' is defined but never used.","'Lala' is defined but never used.","'isTrue' is assigned a value but never used.","'setIsTrue' is assigned a value but never used.","'Muligheter' is defined but never used.","'handleClick' is defined but never used.","'sorted' is assigned a value but never used.","'ObligFagCard' is defined but never used.","'KlasseList' is defined but never used.","'useFetch' is defined but never used.","'useState' is defined but never used.",["159"],["160"],"'Semester' is defined but never used.","'mulighetTrue' is assigned a value but never used.","'setMulighetTrue' is assigned a value but never used.",["159"],["160"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [obligFag, url]",{"range":"164","text":"165"},[1476,1481],"[obligFag, url]"]