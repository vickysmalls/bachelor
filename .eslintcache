[{"/Users/vikke/bachelor/src/index.js":"1","/Users/vikke/bachelor/src/App.js":"2","/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js":"3","/Users/vikke/bachelor/src/Modal/Modal.js":"4","/Users/vikke/bachelor/src/Header/Header.js":"5","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js":"6","/Users/vikke/bachelor/src/useFetch.js":"7","/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js":"8","/Users/vikke/bachelor/src/CustomButton/CustomButton.js":"9","/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js":"10","/Users/vikke/bachelor/src/CustomButton/InfoButton.js":"11","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js":"12","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js":"13","/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js":"14","/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js":"15","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js":"16","/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js":"17","/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js":"18","/Users/vikke/bachelor/src/Semester/Semester.js":"19","/Users/vikke/bachelor/src/Print/Print.js":"20","/Users/vikke/bachelor/src/Semester/Semester6Psyko.js":"21","/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js":"22","/Users/vikke/bachelor/src/Helpers.js":"23"},{"size":221,"mtime":1616420130919,"results":"24","hashOfConfig":"25"},{"size":706,"mtime":1616420130903,"results":"26","hashOfConfig":"25"},{"size":5728,"mtime":1618996187344,"results":"27","hashOfConfig":"25"},{"size":726,"mtime":1616755390099,"results":"28","hashOfConfig":"25"},{"size":567,"mtime":1618394483715,"results":"29","hashOfConfig":"25"},{"size":1848,"mtime":1618993352197,"results":"30","hashOfConfig":"25"},{"size":1438,"mtime":1618994314389,"results":"31","hashOfConfig":"25"},{"size":2304,"mtime":1618993709550,"results":"32","hashOfConfig":"25"},{"size":326,"mtime":1616420130903,"results":"33","hashOfConfig":"25"},{"size":4779,"mtime":1618996182087,"results":"34","hashOfConfig":"25"},{"size":341,"mtime":1616420130903,"results":"35","hashOfConfig":"25"},{"size":5216,"mtime":1618996643792,"results":"36","hashOfConfig":"25"},{"size":2677,"mtime":1618993291415,"results":"37","hashOfConfig":"25"},{"size":30805,"mtime":1619518374168,"results":"38","hashOfConfig":"25"},{"size":2595,"mtime":1618994730482,"results":"39","hashOfConfig":"25"},{"size":1931,"mtime":1618997056534,"results":"40","hashOfConfig":"25"},{"size":3041,"mtime":1618994083462,"results":"41","hashOfConfig":"25"},{"size":9555,"mtime":1618995670508,"results":"42","hashOfConfig":"25"},{"size":3050,"mtime":1619517078883,"results":"43","hashOfConfig":"25"},{"size":908,"mtime":1616420130906,"results":"44","hashOfConfig":"25"},{"size":3171,"mtime":1619518412370,"results":"45","hashOfConfig":"25"},{"size":4009,"mtime":1618315115966,"results":"46","hashOfConfig":"25"},{"size":100,"mtime":1617793538065,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"12k2fam",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"50"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/vikke/bachelor/src/index.js",[],["110","111"],"/Users/vikke/bachelor/src/App.js",["112","113"],"import Navbar from \"./Header/Header\";\nimport KlasseList from \"./VelgKlasse/KlasseList\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport Modal from \"./Modal/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n\n\n//<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl\" crossorigin=\"anonymous\"></link>\n\nfunction App() {\n  return (\n    \n      <div className=\"App\">\n        <Navbar />\n\n        <div className=\"content\">\n          <div className=\"body\">\n            <KlasseList />\n          </div>\n        </div>\n      </div>\n   \n  );\n}\n\nexport default App;\n","/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js",["114","115","116","117","118","119","120","121","122"],"import { useEffect, useRef, useState  } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport VelgMaster from \"../VelgMaster/VelgMaster\";\nimport './VelgKlassetrinn.css';\nimport Illustrasjon from './Illustrasjon.png';\nimport VelgEmne from './VelgEmne.png';\nimport ToBilder from './ToBilder.png';\nimport Elever from './Elever.jpeg';\nimport Undervisning from './undervisning.jpeg';\nimport Praksis from './Praksis.jpeg';\nimport VelgKlasse from \"./VelgKlasse\";\nimport VelgStudierettning from \"./VelgStudierettning\";\n\n\nconst KlasseList = () => {\n\n    //henter tabellen klasser og plasserer det i klassetrinn\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/klasser`);\n\n    //setter klassetrinn til å bli answer\n    const [klasseId, setKlasseId] = useState(klassetrinn);\n\n    //brukes til å lagre objektet\n    const [obj, setObj] = useState();\n    const [visVidere, setVisVidere] = useState(false);\n\n    const [resetState, setResetState] = useState(false);\n\n\n    const [studieRetning, setStudieRetning] = useState();\n    \n    const [fagNavnStudierettning, setFagNavnStudierettning] = useState();\n\n    // slik at det brukes/ lagres i neste komponent\n  \n  const [valgtObligFag, setValgtObligFag] = useState();\n\n  //det under er for smooth scroll\n  const divRef = useRef();\n\n  //for å slippe å trykke to ganger, må loades først slik at den får\n  // plassert divRef i VelgMaster masteremne diven\n  useEffect(() => {\n    handleScrollClick()  });\n\n  const handleScrollClick = () => {\n    /* visVidere&&\n    divRef.current.scrollIntoView({ behavior: \"smooth\" }); */\n  };\n    \n    //logger ved trykk\n    function handleClick(e) {\n        console.log('The link was clicked. klasse');\n        console.log(e);\n        const id = e.id;\n        console.log('id fra handleClick = '+id);\n        \n    }\n\n    function visVidereClick(visVidere){\n        console.log('vis videre klikket');\n        console.log(visVidere);\n        \n        setVisVidere(true)\n    }\n    \n   \n     return ( \n        \n        \n        \n<div className=\"applikasjon\">\n    \n    \n    <div class=\"row\">\n  <div class=\"column\" id=\"Seksti\">\n  <img id=\"Illustrasjon\" src={Elever} alt=\"Illustrasjon\"/>  \n  <h2 id=\"Innledning\">Med denne veilederen kan du utforske hvordan du ønsker å legge opp studieløpet ditt her ved OsloMet. \n            Utforsk de forskjellige fagene, og se hvilke konsekvenser valgt av fag vil ha senere i studiet.\n        </h2>\n        <p id=\"Padding\">Veilederen er utviklet for at alle elever skal ta riktige valg underveis i lærerutdanningen. Målet\n        er at du som student skal legge opp studieløpet riktig slik at du får en master innenfor det emnet du ønsker deg. Vi vet \n        at oppbyggingen av lærerutdanningen kan være vanskelig å forstå, og dermed er denne veilederen utviklet for å visualisere\n        oppbyggingen av studiet på en bedre måte. \n        </p>\n\n        </div>\n  \n  <div class=\"column\" id=\"Forti\">\n  <img id=\"Illustrasjon\" src={Praksis} alt=\"Illustrasjon\"/>\n  <h2 id=\"Innledning\">Hvordan bruke veilederen?\n        </h2>\n        <p id=\"Padding\">\n            \n        <ol>\n            <li>Velg studieretning, det første valget du får er om du går grunnskoleutdanning 1-7 eller grunnskoleutdanning 5-10.<br /><br /></li>\n            <li>Deretter får du muligheten til å velge hvilket masteremne du vil gå opp til i 10. semester. Basert på valget du tar vil studieplanen \n        oppdatere seg med de fagene du trenger for valgt masteremne.<br /><br /></li>\n            <li>Siste del er å fylle inn planen med valgfag. \n        Husk at man trenger 60 studiepoeng i syklus 1 for å ta faget videre i syklus 2. Om du har to fag kan du velge selv i semester 7.</li>\n        </ol>\n            \n        </p>\n\n        <p id=\"Bold\">Scroll ned for å starte veilederen!</p>\n  </div>\n</div>\n\n<div class=\"row\" id=\"Start\">\n<div className=\"column\" id=\"Hundre\">\n  \n        \n            <h3>Velg studieretning </h3>      \n            <h2>Velg din studieretning ved OsloMet</h2>\n            <div className='introknapp'>\n            \n            \n                    <VelgKlasse\n                     visVidere={visVidere} \n                     setVisVidere={setVisVidere} \n                     setObj={setObj} \n                     setAnswer={setKlasseId}\n                     klassetrinn={klassetrinn}\n                     handleScrollClick={handleScrollClick}\n                     resetState = {resetState}\n                     setResetState={setResetState}\n                    />\n\n            </div>\n        </div> \n     </div> \n     {\n         //om man velger 5-10\n         //Bruker fagnavn for å kunne filtrere på det i obligfag\n         klasseId===2&&\n        <VelgStudierettning setStudieRetning={setStudieRetning} fagNavnStudierettning={fagNavnStudierettning} setFagNavnStudierettning={setFagNavnStudierettning} valgtObligFag={valgtObligFag} setValgtObligFag={setValgtObligFag}\n        />\n     }\n            \n            \n                {\n                    //gjør answer og obj til props, slik at den kan brukes i ObligFagCard\n                    //answer blir klasse id, som blir satt i onClick funkjsonen\n                    visVidere &&\n                    <VelgMaster \n                    studieRetning={studieRetning}\n                    klasseId={klasseId}\n                    obj={obj}\n                    fagNavnStudierettning={fagNavnStudierettning}\n                    setFagNavnStudierettning={setFagNavnStudierettning}\n                    divRef={divRef}\n                    />                       \n                }\n            \n        </div>   \n          \n     );\n}\n \nexport default KlasseList;","/Users/vikke/bachelor/src/Modal/Modal.js",["123"],"import React from 'react'\nimport ReactDom from 'react-dom';\nimport { FaEnvelopeOpenText, FaRegWindowClose } from 'react-icons/fa';\nimport './Modal.css';\n\nexport default function Modal({children, open, onClose}) {\n    if (! open) return null\n\n    //Create portal gjør at man kan ha den i original html (DOM) index.html\n    //Gjør at man kan manipulere og bruke popupen over alt det andre\n    return ReactDom.createPortal (\n        <>\n    \n        <div className='popup'>\n        <div className=\"popup-inner\">\n            <FaRegWindowClose onClick={onClose} size='1.5em' className=\"close-btn\"/>\n            {children}\n            </div>\n          </div>\n        </>,\n        document.getElementById('portal')\n        \n    )\n}\n","/Users/vikke/bachelor/src/Header/Header.js",["124"],"import './Header.css';\nimport logo2 from './OsloMet logo for nett.png';\nimport logo3 from './LogoOsloMet.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Header = () => {\n    return ( \n        \n    \n    <div className=\"row\" id=\"header\">\n    <div className=\"column\" id=\"OsloMetLogo\">    \n        <img src={logo3} alt=\"OslometLogo\"/>\n    </div>\n    <div className=\"column\" id=\"Forti\"> \n        <h1>Gjør deg kjent med de ulike retningene ved lærerutdanningen på OsloMet!</h1>\n    </div>\n    </div>\n    \n    \n      \n\n    );\n      \n}\n \nexport default Header;","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js",["125"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport './VelgKlassetrinn.css';\nimport {handleClick} from '../Helpers';\n\n\n\nconst VelgKlasse = ({ handleScrollClick, klassetrinn, setVisVidere, visVidere, setAnswer, setObj}) => {\n     \n     \n    //Sette farge valgt semester\n    const [activeButton, setActiveButton] = useState();\n\n    const onSideBtnClick = (e) => {\n        setActiveButton(e.id);\n        \n        //alert(e.id);\n    };\n    \n    \n    function visVidereClick(visVidere){\n         console.log('vis videre klikket');\n         console.log(visVidere);\n         \n         setVisVidere(true)\n     }\n    \n    return ( \n        <>\n        \n        {\n            //sjekker om klassetrinn er ok, deretter mappe gjennom klassene\n            klassetrinn && \n            klassetrinn.map((klasse) =>{\n                const className = activeButton === klasse.id ? \"red\" : \"\";\n\n                return (\n                    \n                    <CustomButton id='hoydeBenBtn'\n                    key={klasse.id}\n                    options={klasse}\n                    inverted={className}\n                    onClick={() =>{ \n                        //setter statene fra øverst, og funksjonen handleclick\n                        setObj(klasse)  \n                        setAnswer(klasse.id)\n                        handleClick(klasse.id)\n                        visVidereClick(visVidere)\n                        handleScrollClick()\n                        onSideBtnClick(klasse)\n                        \n                    }}\n                    >\n                    Grunnskolelærer {klasse.klassetrinn} trinn\n                    </CustomButton>  \n                    \n                )\n                })\n        }\n        </>\n     );\n}\n \nexport default VelgKlasse;","/Users/vikke/bachelor/src/useFetch.js",[],"/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js",["126"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport VelgMaster from \"../VelgMaster/VelgMaster\";\n\nconst VelgStudierettning = ({\n  setStudieRetning,\n  valgtObligFag,\n  setValgtObligFag,\n  fagNavnStudierettning,\n  setFagNavnStudierettning,\n}) => {\n  //setter masterfag tabellen til masterFag\n  const { data: masterFag, error, isPending } = useFetch(\n    `http://localhost:5000/api/masterfag/`\n  );\n\n  //Sette farge valgt semester\n  const [activeButton, setActiveButton] = useState();\n\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n  console.log(\"valgtObligFag\", valgtObligFag);\n  console.log(\"fagNavnStudierettning\", fagNavnStudierettning);\n\n  return (\n    <>\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <h2>Velg et emne 5-10: </h2>\n          <div className=\"masterfag\">\n            {\n              isPending && <div>Loading...</div>\n            }\n            {\n              error && <div>{error}</div>\n            }\n            {masterFag &&\n              masterFag.map((fag) => {\n                const className = activeButton === fag.id ? \"red\" : \"\";\n\n                return (\n                  //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n\n                  fag.id === 15 || fag.id === 16 || fag.id === 17 ? (\n                    <>\n                      <div className=\"masterknapper\">\n                        <CustomButton\n                          inverted={className}\n                          key={fag.id}\n                          options={fag}\n                          activeButton={activeButton}\n                          onClick={() => {\n                            setStudieRetning(fag.id);\n                            setValgtObligFag(fag.id);\n                            onSideBtnClick(fag);\n                            setFagNavnStudierettning(fag.fagnavn);\n                          }}\n                        >\n                          {fag.fagnavn}\n                        </CustomButton>\n                      </div>\n                    </>\n                  ) : null\n                );\n              })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default VelgStudierettning;\n","/Users/vikke/bachelor/src/CustomButton/CustomButton.js",[],"/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js",["127","128","129","130","131"],"import React, {useState, useReducer, useRef, useEffect} from 'react'\nimport './VelgMaster.css';\nimport CustomButton from '../CustomButton/CustomButton';\nimport useFetch from '../useFetch';\nimport ObligFagCard from '../oblig-fag/oblig-fag-card';\nimport { FaEnvelopeOpenText } from 'react-icons/fa';\nimport InfoButton from '../CustomButton/InfoButton';\nimport Modal from '../Modal/Modal';\nimport { AiOutlineArrowDown } from 'react-icons/ai';\nimport {handleClick} from '../Helpers';\n\n\nconst _ = require(\"lodash\");  \n\n\n\nconst VelgMaster = ({divRef, studieRetning, klasseId, studieId, fagNavnStudierettning}) => {\n\n    //setter masterfag tabellen til masterFag\n    const {data: masterFag, error, isPending} = useFetch(`http://localhost:5000/api/masterfag/`);\n    \n    // slik at det brukes/ lagres i neste komponent\n    const [fagNavn, setFagnavn] = useState();\n    const [masterId, setMasterId] = useState();\n    const [visVidere, setVisVidere] = useState(false);    \n\n    \n\n    console.log(\"studieRetning\", studieRetning);\n\n     //Sette farge valgt semester\n     const [activeButton, setActiveButton] = useState();\n    \n\n     const onSideBtnClick = e => {\n        \n        setActiveButton(e.id);\n        //alert(e.id);\n    };\n   \n  \n\n    //det under er for smooth scroll\n  const obligDivRef = useRef();\n\n  \n  const handleScrollClick = () => {\n      visVidere&&\n    obligDivRef.current.scrollIntoView({ behavior: \"smooth\", inline: 'center', block: 'center' });\n  };\n\n  //filtrer slik at første fag man velger i 5-10, norsk engelsk eller matte, blir filtrert ut\n\n  let filtered_klassetrinn = _.filter(masterFag, function(klasse)\n    { return klasse.fagnavn !== fagNavnStudierettning;}\n)\n   \n    return ( \n        <>\n<div class=\"row\" id=\"Masteremner\" ref={divRef}>\n    <div class=\"column\" id=\"Hundre\">\n    <h3>Velg Masteremne</h3>\n    </div>\n    <div class=\"column\" id=\"Tjue\">\n    </div>\n\n    <div class=\"column\" id=\"Atti\">\n        <h2 id=\"Left\">Velg et masteremne og se hvordan du må bygge oppstudiet for å kunne skrive masteroppgave i det valgt emnet</h2>\n        <p id=\"Beskrivelse\">Valget du gjør her vil påvirke valgmulighetene resten av studiet. For å kunne skrive master i et av de\n            følgende emnene må du ha nok studiepoeng i valgt emne for å kunne skrive masteroppgave i det aktuelle faget. <br /><br />\n\n            Du kan senere gå tilbake til denne delen og velge et annet mastermne du kunne være interessert i å skrive masteroppgave. <br /><br />\n\n            <bold>Alle mulighetene er listet opp under!</bold>\n        </p>\n    </div>  \n</div>\n\n\n<div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n    <h2>Velg et masteremne: </h2> \n        <div className='masterfag'>\n            {\n                isPending && <div>Loading...</div>\n            }\n            {\n                error && <div>{error}</div>\n            }\n            {\n                masterFag && filtered_klassetrinn.map(fag=>{\n                    const className = activeButton === fag.id ? \"red\" : \"\";\n\n                    return(\n                        //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n                        fag.klasseId === klasseId &&\n                    \n                    \n                    <>\n                    \n                    <div className='masterknapper'>\n                        <CustomButton\n                            inverted={className}\n                            key={fag.id}\n                            options={fag}\n                            activeButton={activeButton}\n                                        \n                            onClick={() =>{\n                                handleClick(fag)\n                                setMasterId(fag.id)\n                                setFagnavn(fag.fagnavn)\n                                setVisVidere(true)\n                                onSideBtnClick(fag)\n                                \n                                \n                            }}\n                            >\n                            {fag.fagnavn}\n                        </CustomButton>\n                    </div>    \n                </>\n\n\n                    )\n                    \n                        })\n            }       \n        </div>\n    </div>\n    <div id=\"Senter\">\n        <AiOutlineArrowDown size={40} onClick={handleScrollClick} ></AiOutlineArrowDown>\n    </div>\n    \n</div>\n        \n        \n        {   \n            visVidere&&\n            <ObligFagCard obligDivRef={obligDivRef} studieRetning={studieRetning} fagNavnStudierettning={fagNavnStudierettning} masterId={masterId} fagNavn={fagNavn} klasseId={klasseId}/>\n        \n        }\n        \n        \n        \n       \n        \n        </>\n\n        \n        \n     );\n};\nexport default VelgMaster;\n","/Users/vikke/bachelor/src/CustomButton/InfoButton.js",[],"/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js",["132","133","134","135","136","137"],"import React, {useRef, useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport Modal from '../Modal/Modal';\nimport VelgMuligheter from '../VelgMuligheter/VelgMuligheter';\nimport ObligFagSemester from './oblig-fag-semester';\nimport './oblig-fag.css';\nimport Elever from './Elever.jpeg';\nimport ObligFagSemester2 from './ObligFagSemester2';\nimport { AiOutlineArrowDown } from 'react-icons/ai';\n\n\nconst ObligFagCard = ({obligDivRef, studieRetning, klasseId, masterId, obj, fagNavn, fagNavnStudierettning}) => {\n\n    \n    \n    \n\n       //det under er for smooth scroll\n  const velgMuligheterDivRef = useRef();\n\n  const handleScrollClick = () => {\n    velgMuligheterDivRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n \n    return (  \n        <>\n    <div class=\"row\" ref={obligDivRef}>\n    <div class=\"column\" id=\"Hundre\">\n    <h3>Obligatoriske emner</h3>\n    </div>\n    <div class=\"column\" id=\"MasterBilde\">\n    </div>\n\n    <div class=\"column\" id=\"Atti\">\n        <h2 id=\"Left\">Oversikt over de obligatoriske emnene i de tre første semestrene</h2>\n        <p id=\"Beskrivelse\">De tre første semesterene består kun av obligatoriske emner. Disse er felles for begge studieretninger og \n            påvirker ikke masteroppgaven. I løpet av de tre første semestrene vil alle gjennomføre eksamner i Norsk og Matematikk, \n            samt få innføring i pedagogikk. <br /><br />\n            <bold>De obligatoriske emnene er listet opp under!</bold>\n        </p>\n    </div>  \n</div>\n\n\n    <div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n                <h5>Semester 1</h5> \n                <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n                <div className=\"fag\">\n                    { //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                    klasseId ===2  ?(\n                                <ObligFagSemester2 fagNavnStudierettning={fagNavnStudierettning} semester={1} answer={klasseId}/>\n                            ) :(\n\n                                // det sorterte arrayet mappes\n                                <ObligFagSemester id=\"IkkeKnapp\" semester={1} answer={klasseId}/>\n                            )\n                    }\n                </div>\n            </div>\n            \n                \n\n       \n            <div className=\"Forti\">\n                <h5>Semester 2</h5>\n                <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p>\n                <div className=\"fag\">\n                { //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                    klasseId ===2  ?(\n                            <ObligFagSemester2 fagNavnStudierettning={fagNavnStudierettning} semester={2} answer={klasseId}/>\n                        ) :(\n\n                            // det sorterte arrayet mappes\n                            <ObligFagSemester id=\"IkkeKnapp\" semester={2} answer={klasseId}/>\n                        )\n                }\n                </div>\n            </div>\n    \n        \n        \n            \n\n            <div className=\"obligkort\">\n                <h5>Semester 3</h5>\n                <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n                <div className=\"fag\">\n                   { //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                    klasseId ===2  ?(\n                        <ObligFagSemester2 fagNavnStudierettning={fagNavnStudierettning} semester={3} answer={klasseId}/>\n                    ) :(\n\n                        // det sorterte arrayet mappes\n                        <ObligFagSemester id=\"IkkeKnapp\" semester={3} answer={klasseId}/>\n                    )\n            }\n                </div>\n            </div>\n        </div>\n    </div>\n\n    </div>\n\n    <div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n    <h3>Veien Videre</h3></div>\n    <div class=\"column\" id=\"BygningBilde\"></div>\n\n    <div class=\"column\" id=\"Atti\">\n        <h2 id=\"Left\">Få oversikt over emnene du må ta, samt hvilke semestre du kan velge valgfrie emner</h2>\n        <p id=\"Beskrivelse\">Semester fire er det semesteret man først får lov til å velge fag selv. her kan du velge mellom en del ulike fag.\n        Fagene du trenger for å gå opp til master er allerede lagt inn og er <bold>markert i gult. </bold> \n        Så du får muligheten til å ta et fag til og få 60 studiepoeng i det emne, det er ikke nødvendig å ha 60 studiepoeng i det valgfrie\n        emne, men er en fin ting å tenke på om du får lyst til å endre studieløpet underveis i studie.\n        </p>\n    </div> \n</div> \n\n\n    \n    <div>         \n        \n        {\n            \n           \n            <VelgMuligheter studieRetning={studieRetning} fagNavn ={fagNavn} masterId={masterId} klasseId={klasseId} obj={obj}></VelgMuligheter>\n            \n\n       \n        }\n        \n    </div>    \n\n        \n       \n        </>\n        \n        \n     );\n};\nexport default ObligFagCard;","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js",["138"],"import React, { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport useFetch from \"../useFetch\";\nimport \"./oblig-fag.css\";\nconst _ = require(\"lodash\");\n\n//Denne koomponenten gjør at man kan plotte inn semestesr og klasse id(answer) i oblig-fag-card\nconst ObligFagSemester = ({ answer, semester, setSemesterList7 }) => {\n  const { data: klassetrinn, error, isPending } = useFetch(\n    `http://localhost:5000/api/obligfag/`\n  );\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  //lager et array som sortrer etter semester\n  const iteratees = (obj) => obj.semester;\n  const sorted = _.sortBy(klassetrinn, iteratees);\n\n  return (\n    <>\n      <>\n        {\n          isPending && <div>Loading...</div>\n        }\n        {\n          error && <div>{error}</div>\n        }\n        {\n          // det sorterte arrayet mappes\n          sorted.map(\n            (oblig) =>\n              //om klasseId er det samme som answer fra KlasseList =>\n              oblig.klasseId === answer &&\n              oblig.semester === semester && (\n                <>\n                  <CustomButton id=\"Videre\" key={oblig.id}>\n                    {oblig.fagnavn}\n                  </CustomButton>\n\n                  <InfoButton\n                    className=\"infoknapp\"\n                    onClick={() => {\n                      setIsOpen(true);\n                      setFagnavn(oblig.fagnavn);\n                      //setSemester(oblig.semester)\n                      setEmneKode(oblig.emnekode);\n                      setStudiepoeng(oblig.studiepoeng);\n                      setKlasseId(oblig.klasseId);\n                      setURL(oblig.url);\n                    }}\n                  ></InfoButton>\n                </>\n              )\n          )\n        }\n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ObligFagSemester;\n","/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js",["160"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport useFetch from \"../useFetch\";\nconst _ = require(\"lodash\");\n\nconst ObligFagSemester2 = ({ answer, semester, fagNavnStudierettning }) => {\n  const { data: klassetrinn, error, isPending } = useFetch(\n    `http://localhost:5000/api/obligfag/`\n  );\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  //lager et array som sortrer etter semester\n  const iteratees = (obj) => obj.semester;\n  const sorted = _.sortBy(klassetrinn, iteratees);\n\n  console.log(\"fagNavnStudierettning2\", fagNavnStudierettning);\n  return (\n    <>\n      <>\n        {isPending && <div>Loading...</div>}\n        {error && <div>{error}</div>}\n        {\n          // det sorterte arrayet mappes\n          sorted.map((oblig) =>\n            //om klasseId er det samme som answer fra KlasseList =>\n            oblig.klasseId === answer &&\n            oblig.semester === semester &&\n            oblig.fagnavn.includes(fagNavnStudierettning) ? (\n              <>\n                <CustomButton id=\"Videre\" key={oblig.id}>\n                  {oblig.fagnavn}{\" \"}\n                </CustomButton>\n\n                <InfoButton\n                  className=\"infoknapp\"\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    setKlasseId(oblig.klasseId);\n                    setURL(oblig.url);\n                  }}\n                ></InfoButton>\n              </>\n            ) : null\n          )\n        }\n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ObligFagSemester2;\n","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js",["161"],"import React, { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport Muligheter from \"../VelgMuligheter/Muligheter\";\n\nconst ValgtMulighet = ({ klasseId, semester, klassetrinn, muligheterId }) => {\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      {klassetrinn &&\n        klassetrinn.map(\n          (oblig) =>\n            oblig.id === muligheterId && (\n              <>\n                <CustomButton\n                  key={oblig.id}\n                  semester={oblig.semester}\n                  klasseId={oblig.klasseId}\n                >\n                  {oblig.fagnavn}\n                </CustomButton>\n\n                <InfoButton\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    //setKlasseId(oblig.klasseId)\n                    setURL(oblig.url);\n                  }}\n                ></InfoButton>\n              </>\n            )\n        )}\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul>\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ValgtMulighet;\n","/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js",["162","163","164"],"import React, { useEffect, useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport Modal from \"../Modal/Modal\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport className from \"../Semester/Semester6Psyko\";\n\nconst Muligheter = ({\n  activeButton,\n  setActiveButton,\n  masterId,\n  setIstrue,\n  valg7Master,\n  setValg7Master,\n  setFag,\n  setSemesterList7,\n  semesterList7,\n  semester,\n  klassetrinn,\n  sorted,\n  setConditionalSem9,\n}) => {\n\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <>\n        {klassetrinn &&\n          sorted.map((klasse) => {\n            const className = activeButton === klasse.id ? \"red\" : \"\";\n\n            return (\n              //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster)\n              klasse.masterFagId === masterId &&\n              klasse.semester === semester && (\n                <>\n                  <CustomButton\n                    //setter fargen på den valgte fagveien\n                    inverted={className}\n                    key={klasse.id}\n                    fag={klasse.fagnavn}\n                    activeButton={activeButton}\n                    onClick={() => {\n                      onSideBtnClick(klasse);\n                      setSemesterList7(klasse.id);\n                      setValg7Master(klasse.masterFagId);\n                      setIstrue(klasse.masterFagId);\n                      setConditionalSem9(klasse.masterFagId);\n                    }}\n                  >\n                    {klasse.fagnavn}\n                  </CustomButton>\n\n                  <InfoButton\n                    onClick={() => {\n                      setIsOpen(true);\n                      setFagnavn(klasse.fagnavn);\n                      //setSemester(oblig.semester)\n                      setEmneKode(klasse.emnekode);\n                      setStudiepoeng(klasse.studiepoeng);\n                      setKlasseId(klasse.klasseId);\n                      setURL(klasse.url);\n                    }}\n                  ></InfoButton>\n                </>\n              )\n            );\n          })}\n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          {\n            semester === 10 ? null \n            :\n            <li>Fagside: \n              <a href={URL} target=\"_blank\" rel=\"noreferrer\" > Link til fagside </a>\n            </li> \n          }\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Muligheter;\n","/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js",["165","166","167"],"import ObligFagSemester from \"../oblig-fag/oblig-fag-semester\";\nimport Muligheter from \"./Muligheter\";\nimport ValgtMulighet from \"./ValgtMulighet\";\nimport Print from \"../Print/Print\";\nimport Semester6Psyko from \"../Semester/Semester6Psyko\";\nimport Semester from \"../Semester/Semester\";\nimport { AiOutlineArrowDown } from 'react-icons/ai';\n\nconst Resultat = ({\n  answer,\n  klassetrinn,\n  sorted,\n  activeButton,\n  muligheterId1,\n  muligheterId2,\n  muligheterId3,\n  masterId,\n  semesterList7,\n  mulighetTull,\n  fagNavn,\n  setMessages,\n  messages,\n  valg7Master,\n  semesterList9,\n  activeButton10,\n  activeButton9,\n  activeButton2\n}) => {\n  \n\n  console.log('activeButton2', activeButton2);\n  return (\n    <div>\n      <div id=\"printId\">\n        <div className=\"row\">\n        <div className=\"column\" id=\"Hundre\">\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n          <h5>Semester 1</h5>\n          <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n          <div className=\"fag\">\n            <ObligFagSemester semester={1} answer={answer} />\n          </div>\n        </div>\n        \n\n        <div className=\"Forti\">\n          <h5>Semester 2</h5>\n          <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p>\n          <div className=\"fag\">\n            <ObligFagSemester semester={2} answer={answer} />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n\n        <div className=\"row\">\n        <div className=\"column\" id=\"Hundre\">\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n          <h5>Semester 3</h5>\n          <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n          <div className=\"fag\">\n            <ObligFagSemester semester={3} answer={answer} />\n          </div>\n        </div>\n\n        <div className=\"Forti\">\n          <h5>Semester 4</h5>\n          <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p>\n\n          \n          <div className=\"fag\">\n            {\n            //sjekker om id err norsk matte engelsk eller pedagogikk  \n            masterId === 1 ||\n            masterId === 2 ||\n            //masterId === 4 ||\n            masterId === 12 ||\n            masterId === 13 ||\n            masterId === 14 ||\n            masterId === 15 ||\n            masterId === 16 ||\n            masterId === 17 ||\n            masterId === 25 ||\n            masterId === 26 ||\n            masterId === 27 ? (\n              <ValgtMulighet\n                klassetrinn={klassetrinn}\n                muligheterId={muligheterId1}\n              ></ValgtMulighet>\n            ) : (\n              <Muligheter\n                klassetrinn={klassetrinn}\n                sorted={sorted}\n                semester={4}\n                masterId={masterId}\n              />\n            )}\n         </div>\n        </div>\n      </div>\n    </div>\n  </div>\n        \n        \n        \n        \n  <div className=\"row\">\n        <div className=\"column\" id=\"Hundre\">\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n          <h5>Semester 5</h5>\n          <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n          <div className=\"fag\">\n            {\n            //sjekker om noe er pedagogikk\n            masterId === 12 ||\n            masterId === 13 ||\n            masterId === 14 ||\n            masterId === 25 ||\n            masterId === 26 ||\n            masterId === 27 ? (\n              <ValgtMulighet\n                klassetrinn={klassetrinn}\n                muligheterId={activeButton} \n              ></ValgtMulighet>\n            ) : (\n              <Muligheter\n                klassetrinn={klassetrinn}\n                sorted={sorted}\n                semester={5}\n                masterId={masterId}\n              />\n            )}\n          </div>\n        </div>\n        \n        \n        \n        <div className=\"Forti\">\n          <h5>Semester 6</h5>\n          <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p>\n          <div className=\"fag\">\n            {\n            //sjeekker om noe er pedagogikk\n            masterId === 12 ||\n            masterId === 13 ||\n            masterId === 14 ||\n            masterId === 25 ||\n            masterId === 26 ||\n            masterId === 27 ? (\n              <Muligheter\n                klassetrinn={klassetrinn}\n                sorted={sorted}\n                semester={6}\n                masterId={masterId}\n              />\n            ) : (\n              <ValgtMulighet\n                klassetrinn={klassetrinn}\n                muligheterId={activeButton2}\n              ></ValgtMulighet>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n        \n        \n        \n        \n  <div className=\"row\">\n        <div className=\"column\" id=\"Hundre\">\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n          <h5>Semester 7</h5>\n          <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n          <div className=\"fag\">\n            {\n           /*\n              kommentert ut var tidligeere, beholder i tilfelle ny løsmninng er bug\n            masterId === 12 || masterId === 13 || masterId === 14 || masterId === 15 || masterId === 16 || masterId === 17 || masterId === 18 || masterId === 19 || masterId === 20 || masterId === 21 || masterId === 22 || masterId === 23 || masterId === 24 || masterId === 25 || masterId === 26 || masterId === 27*/\n            \n            masterId === 12 ||\n            masterId === 13 ||\n            masterId === 14 ||\n            answer===2 ? (\n              <ValgtMulighet\n              klassetrinn={klassetrinn}\n              muligheterId={semesterList7}\n            ></ValgtMulighet>\n            ) : (\n              <Muligheter\n                klassetrinn={klassetrinn}\n                sorted={sorted}\n                semester={7}\n                masterId={masterId}\n              />\n            )}\n\n            <ObligFagSemester semester={7} answer={answer} />\n          </div>\n        </div>\n        \n        \n        \n        \n        <div className=\"Forti\">\n          <h5>Semester 8</h5>\n          <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p>\n          <div className=\"fag\">\n            {\n              /*\n            masterId === 12 || masterId === 13 || masterId === 14 || masterId === 15 || masterId === 16 || masterId === 17 || masterId === 18 || masterId === 19 || masterId === 20 || masterId === 21 || masterId === 22 || masterId === 23 || masterId === 24 || masterId === 25 || masterId === 26 || masterId === 27*/\n            masterId === 12 ||\n            masterId === 13 ||\n            masterId === 14 ||\n            answer ===2 ? (\n              <Muligheter klassetrinn={klassetrinn} sorted={sorted} semester={8} masterId={valg7Master}/>\n\n            ) : (\n              <Muligheter\n                klassetrinn={klassetrinn}\n                sorted={sorted}\n                semester={8}\n                masterId={masterId}\n              />\n            )}\n            <ObligFagSemester semester={8} answer={answer} />\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n        \n        \n        \n        \n  <div className=\"row\">\n        <div className=\"column\" id=\"Hundre\">\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n          <h5>Semester 9</h5>\n          <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n          <div className=\"fag\">\n            {\n              /*\n              kommentert ut var tidligeere, beholder i tilfelle ny løsmninng er bug\n            masterId === 12 || masterId === 13 || masterId === 14 || masterId === 15 || masterId === 16 || masterId === 17 || masterId === 18 || masterId === 19 || masterId === 20 || masterId === 21 || masterId === 22 || masterId === 23 || masterId === 24 || masterId === 25 || masterId === 26 || masterId === 27*/\n            masterId === 12 ||\n            masterId === 13 ||\n            masterId === 14 ||\n            answer ===2 ? (\n              <>\n              <ValgtMulighet\n              klassetrinn={klassetrinn}\n              muligheterId={semesterList9}\n            />\n            <ValgtMulighet\n                klassetrinn={klassetrinn}\n                muligheterId={activeButton9}\n              ></ValgtMulighet>\n            </>\n            ) : (\n              \n              //annen måte\n                <ValgtMulighet\n                klassetrinn={klassetrinn}\n                muligheterId={activeButton9}\n              ></ValgtMulighet>\n              \n            )}\n            \n            <ObligFagSemester semester={9} answer={answer} />\n          </div>\n        </div>\n\n        \n        \n        <div className=\"Forti\">\n          <h5>Semester 10</h5>\n          <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p>\n          <div className=\"fag\">\n           {/*  <Muligheter\n              klassetrinn={klassetrinn}\n              answer={answer}\n              sorted={sorted}\n              semester={10}\n              masterId={semesterList7}\n            /> */}\n            { //annen måte\n              <ValgtMulighet\n              klassetrinn={klassetrinn}\n              muligheterId={activeButton10}\n            ></ValgtMulighet>}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </div>\n\n      <div className=\"card-container2\">\n        <h1>Lagre din vei til master</h1>\n        <div className=\"print\">\n          <Print />\n        </div>\n      </div>\n      </div>\n    \n  );\n};\n\nexport default Resultat;\n","/Users/vikke/bachelor/src/Semester/Semester.js",["168"],"import React, { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport Muligheter from \"../VelgMuligheter/Muligheter\";\nimport './Semester.css';\nconst _ = require(\"lodash\");\n\n\nconst Semester = ({\n  klasseId,\n  semester,\n  klassetrinn,\n  setMuligheterId,\n  activeButton,\n\n  setActiveButton,\n\n  setFag,\n\n}) => {\n\n    \n  //\n   //filtrer ut årstudium og tegnspråk\n   let filtered_klassetrinn = _.filter(klassetrinn, function (klasse) {\n    return (\n      klasse.fagnavn !== \"Årstudium norsk, del 1\" &&\n      klasse.fagnavn !== \"Årstudium matte, del 1\" &&\n      klasse.fagnavn !== \"Årstudium engelsk, del 1\" &&\n      klasse.fagnavn !== \"Norsk tegnspråk 1\"\n    );\n  });\n  \n  //\n  /* function handleMuligheter(ele) {\n    setMuligheterId(ele);    \n  } */\n  const onSideBtnClick = e => {\n    setActiveButton(e.id);\n    //setMuligheterId(e.id)\n    //setActiveButton(e.masterFagId);\n   \n};\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n\n      {klassetrinn &&\n        filtered_klassetrinn.map((klasse) => {\n          const className = activeButton === klasse.id ? \"red\" : \"\";\n          \n          return (\n            //oblig.MasterFagId === masterId &&\n            //om semester = 5 vis semester og semeseter fag\n            klasse.semester === semester &&\n            klasse.klasseId === klasseId && (\n              <>\n                <CustomButton\n                  inverted={className}\n                  key={klasse.id}\n                  semester={klasse.semester}\n                  klasseId={klasse.klasseId}\n                  onClick={() => {\n                    setMuligheterId(klasse.masterFagId);\n                    onSideBtnClick(klasse);\n                   \n                   \n\n                  }}\n                >\n                  {klasse.fagnavn}\n                </CustomButton>\n\n                <InfoButton\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(klasse.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(klasse.emnekode);\n                    setStudiepoeng(klasse.studiepoeng);\n                    //setKlasseId(oblig.klasseId)\n                    setURL(klasse.url);\n                  }}\n                ></InfoButton>\n              </>\n            )\n          );\n        })}\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>Fagside: <a href={URL} target=\"_blank\" rel=\"noreferrer\" > Link til fagside </a></li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Semester;\n","/Users/vikke/bachelor/src/Print/Print.js",[],"/Users/vikke/bachelor/src/Semester/Semester6Psyko.js",["169","170"],"/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js",["171","172"],"import React, {useEffect, useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport  Modal  from '../Modal/Modal';\nimport InfoButton from '../CustomButton/InfoButton';\n\nfunction TvungenMulighet({activeButton, setActiveButton, activeButtonTvungen, setActiveButtonTvungen, masterId, setIstrue, valg7Master, setValg7Master, setFag, setSemesterList7, semesterList7, semester, klassetrinn, sorted}) {\n    \n\n      const onExist = (e) => {\n        setActiveButtonTvungen(e.id);\n        //alert(e.id);\n      };\n\n    const [fagnavn, setFagnavn] = useState();\n    const [URL, setURL] = useState();\n    //const [semester, setSemester] = useState();\n    const [emnekode, setEmneKode] = useState();\n    const [studiepoeng, setStudiepoeng] = useState();\n    const [klasseId ,setKlasseId] = useState();\n    const [isOpen, setIsOpen] = useState(false);\n    \n\n    \n       \n    return ( \n        \n        \n        <>\n        < >\n\n        {   \n            klassetrinn&&\n            \n                sorted.map((oblig)=>{\n                    const className = activeButton === oblig.id ? \"red\" : \"\";\n                    \n                        return(\n                            //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster) \n                        oblig.masterFagId === masterId &&\n                        oblig.semester === semester &&\n                        <>\n                        \n                      \n                            <CustomButton\n                            \n                                //setter fargen på den valgte fagveien\n                                inverted={className}\n                                key={oblig.id}\n                                fag={oblig.fagnavn}\n                                activeButtonTvungen={activeButtonTvungen}\n                                setActiveButtonTvungen={onExist(oblig)}\n                                style={{backgroundColor: '#FFDC00'}}\n                                onClick ={() =>\n                                    \n                                    {\n                                   \n                                    setSemesterList7(oblig.id);\n                                    setValg7Master(oblig.masterFagId)\n                                    setIstrue(oblig.masterFagId);\n                                    \n                            }}>\n                                {oblig.fagnavn}\n                            </CustomButton>\n\n                            <InfoButton \n                            onClick={() =>{ \n                                setIsOpen(true)\n                                setFagnavn(oblig.fagnavn)\n                                //setSemester(oblig.semester)\n                                setEmneKode(oblig.emnekode)\n                                setStudiepoeng(oblig.studiepoeng)\n                                setKlasseId(oblig.klasseId)\n                                setURL(oblig.url);\n                                \n                            }}>\n                            </InfoButton>\n                            \n\n                       \n                        \n                            \n\n                        </>\n                         )\n                    })\n                }\n\n                \n                \n        \n        </>\n\n            <Modal \n                open= {isOpen} \n                onClose={() => setIsOpen(false)}\n            >\n                <h5>Info om {fagnavn}</h5><br/>\n\n                <ul id=\"Innrykk\">\n                    <li>Fagnavn: {fagnavn}</li>\n                    <li>Emnekode: {emnekode}</li>\n                    <li>Studiepoeng: {studiepoeng}</li>\n                    <li>Fagside: <a href={URL} target=\"_blank\" rel=\"noreferrer\" > Link til fagside </a></li>\n                </ul>\n            </Modal>\n       \n      \n        \n\n               </>\n               \n               \n             );\n            \n\n            };\n\nexport default TvungenMulighet\n","/Users/vikke/bachelor/src/Helpers.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":4,"column":10,"nodeType":"179","messageId":"180","endLine":4,"endColumn":18},{"ruleId":"177","severity":1,"message":"181","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":13},{"ruleId":"177","severity":1,"message":"182","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":20},{"ruleId":"177","severity":1,"message":"183","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":20},{"ruleId":"177","severity":1,"message":"184","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":16},{"ruleId":"177","severity":1,"message":"185","line":8,"column":8,"nodeType":"179","messageId":"180","endLine":8,"endColumn":16},{"ruleId":"177","severity":1,"message":"186","line":10,"column":8,"nodeType":"179","messageId":"180","endLine":10,"endColumn":20},{"ruleId":"177","severity":1,"message":"187","line":19,"column":31,"nodeType":"179","messageId":"180","endLine":19,"endColumn":36},{"ruleId":"177","severity":1,"message":"188","line":19,"column":38,"nodeType":"179","messageId":"180","endLine":19,"endColumn":47},{"ruleId":"177","severity":1,"message":"189","line":53,"column":14,"nodeType":"179","messageId":"180","endLine":53,"endColumn":25},{"ruleId":"177","severity":1,"message":"190","line":61,"column":14,"nodeType":"179","messageId":"180","endLine":61,"endColumn":28},{"ruleId":"177","severity":1,"message":"191","line":3,"column":10,"nodeType":"179","messageId":"180","endLine":3,"endColumn":28},{"ruleId":"177","severity":1,"message":"192","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":13},{"ruleId":"177","severity":1,"message":"193","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":16},{"ruleId":"177","severity":1,"message":"194","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":18},{"ruleId":"177","severity":1,"message":"195","line":1,"column":26,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"196","line":1,"column":46,"nodeType":"179","messageId":"180","endLine":1,"endColumn":55},{"ruleId":"177","severity":1,"message":"191","line":6,"column":10,"nodeType":"179","messageId":"180","endLine":6,"endColumn":28},{"ruleId":"177","severity":1,"message":"197","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":18},{"ruleId":"177","severity":1,"message":"181","line":8,"column":8,"nodeType":"179","messageId":"180","endLine":8,"endColumn":13},{"ruleId":"177","severity":1,"message":"178","line":1,"column":24,"nodeType":"179","messageId":"180","endLine":1,"endColumn":32},{"ruleId":"177","severity":1,"message":"182","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":20},{"ruleId":"177","severity":1,"message":"181","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"177","severity":1,"message":"198","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":14},{"ruleId":"177","severity":1,"message":"199","line":9,"column":10,"nodeType":"179","messageId":"180","endLine":9,"endColumn":28},{"ruleId":"177","severity":1,"message":"200","line":21,"column":9,"nodeType":"179","messageId":"180","endLine":21,"endColumn":26},{"ruleId":"177","severity":1,"message":"201","line":20,"column":10,"nodeType":"179","messageId":"180","endLine":20,"endColumn":18},{"ruleId":"177","severity":1,"message":"195","line":1,"column":16,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"181","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"177","severity":1,"message":"202","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":13},{"ruleId":"177","severity":1,"message":"203","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":21},{"ruleId":"177","severity":1,"message":"204","line":13,"column":8,"nodeType":"179","messageId":"180","endLine":13,"endColumn":14},{"ruleId":"177","severity":1,"message":"197","line":18,"column":8,"nodeType":"179","messageId":"180","endLine":18,"endColumn":18},{"ruleId":"177","severity":1,"message":"205","line":20,"column":8,"nodeType":"179","messageId":"180","endLine":20,"endColumn":24},{"ruleId":"177","severity":1,"message":"187","line":30,"column":31,"nodeType":"179","messageId":"180","endLine":30,"endColumn":36},{"ruleId":"177","severity":1,"message":"188","line":30,"column":38,"nodeType":"179","messageId":"180","endLine":30,"endColumn":47},{"ruleId":"177","severity":1,"message":"206","line":32,"column":12,"nodeType":"179","messageId":"180","endLine":32,"endColumn":18},{"ruleId":"177","severity":1,"message":"207","line":32,"column":20,"nodeType":"179","messageId":"180","endLine":32,"endColumn":29},{"ruleId":"177","severity":1,"message":"208","line":42,"column":12,"nodeType":"179","messageId":"180","endLine":42,"endColumn":25},{"ruleId":"177","severity":1,"message":"209","line":58,"column":12,"nodeType":"179","messageId":"180","endLine":58,"endColumn":15},{"ruleId":"177","severity":1,"message":"210","line":63,"column":12,"nodeType":"179","messageId":"180","endLine":63,"endColumn":27},{"ruleId":"177","severity":1,"message":"211","line":69,"column":14,"nodeType":"179","messageId":"180","endLine":69,"endColumn":25},{"ruleId":"177","severity":1,"message":"212","line":79,"column":12,"nodeType":"179","messageId":"180","endLine":79,"endColumn":32},{"ruleId":"177","severity":1,"message":"213","line":79,"column":34,"nodeType":"179","messageId":"180","endLine":79,"endColumn":57},{"ruleId":"177","severity":1,"message":"214","line":100,"column":28,"nodeType":"179","messageId":"180","endLine":100,"endColumn":45},{"ruleId":"177","severity":1,"message":"215","line":102,"column":12,"nodeType":"179","messageId":"180","endLine":102,"endColumn":33},{"ruleId":"177","severity":1,"message":"216","line":102,"column":35,"nodeType":"179","messageId":"180","endLine":102,"endColumn":59},{"ruleId":"217","severity":1,"message":"218","line":220,"column":13,"nodeType":"219","endLine":220,"endColumn":141},{"ruleId":"177","severity":1,"message":"201","line":18,"column":10,"nodeType":"179","messageId":"180","endLine":18,"endColumn":18},{"ruleId":"177","severity":1,"message":"220","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":18},{"ruleId":"177","severity":1,"message":"196","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"221","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":17},{"ruleId":"177","severity":1,"message":"201","line":33,"column":10,"nodeType":"179","messageId":"180","endLine":33,"endColumn":18},{"ruleId":"177","severity":1,"message":"222","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":22},{"ruleId":"177","severity":1,"message":"223","line":6,"column":8,"nodeType":"179","messageId":"180","endLine":6,"endColumn":16},{"ruleId":"177","severity":1,"message":"199","line":7,"column":10,"nodeType":"179","messageId":"180","endLine":7,"endColumn":28},{"ruleId":"177","severity":1,"message":"220","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":18},{"ruleId":"177","severity":1,"message":"196","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"220","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":18},{"ruleId":"177","severity":1,"message":"196","line":1,"column":16,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"201","line":19,"column":12,"nodeType":"179","messageId":"180","endLine":19,"endColumn":20},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'CustomButton' is defined but never used.","'Illustrasjon' is defined but never used.","'VelgEmne' is defined but never used.","'ToBilder' is defined but never used.","'Undervisning' is defined but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","'handleClick' is defined but never used.","'visVidereClick' is defined but never used.","'FaEnvelopeOpenText' is defined but never used.","'logo2' is defined but never used.","'useFetch' is defined but never used.","'VelgMaster' is defined but never used.","'useReducer' is defined but never used.","'useEffect' is defined but never used.","'InfoButton' is defined but never used.","'Elever' is defined but never used.","'AiOutlineArrowDown' is defined but never used.","'handleScrollClick' is assigned a value but never used.","'klasseId' is assigned a value but never used.","'Print' is defined but never used.","'ValgtMulighet' is defined but never used.","'styled' is defined but never used.","'TvungenMulighet2' is defined but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'mulighetTull2' is assigned a value but never used.","'tom' is assigned a value but never used.","'conditionalSem9' is assigned a value but never used.","'handleReset' is defined but never used.","'activeButtonTvungen3' is assigned a value but never used.","'setActiveButtonTvungen3' is assigned a value but never used.","'setBegynnerLaring' is assigned a value but never used.","'begynnerLaringBoolean' is assigned a value but never used.","'setBegynnerLaringBoolean' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Muligheter' is defined but never used.","'className' is defined but never used.","'Semester6Psyko' is defined but never used.","'Semester' is defined but never used.","no-global-assign","no-unsafe-negation"]