[{"C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\index.js":"1","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\App.js":"2","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\Header\\Header.js":"3","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\VelgKlasse\\KlasseList.js":"4","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\useFetch.js":"5","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\CustomButton\\CustomButton.js":"6","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\VelgMaster\\VelgMaster.js":"7","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\oblig-fag\\oblig-fag-card.js":"8","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\oblig-fag\\oblig-fag-semester.js":"9","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\VelgMuligheter\\VelgMuligheter.js":"10","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\Semester\\Semester.js":"11","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\VelgMuligheter\\Muligheter.js":"12"},{"size":234,"mtime":1612177768814,"results":"13","hashOfConfig":"14"},{"size":520,"mtime":1613038607621,"results":"15","hashOfConfig":"14"},{"size":255,"mtime":1612518354531,"results":"16","hashOfConfig":"14"},{"size":2598,"mtime":1613038607625,"results":"17","hashOfConfig":"14"},{"size":1605,"mtime":1613049431963,"results":"18","hashOfConfig":"14"},{"size":345,"mtime":1612177768796,"results":"19","hashOfConfig":"14"},{"size":2425,"mtime":1613053586527,"results":"20","hashOfConfig":"14"},{"size":2295,"mtime":1613049431963,"results":"21","hashOfConfig":"14"},{"size":1374,"mtime":1613038624833,"results":"22","hashOfConfig":"14"},{"size":3330,"mtime":1613394083163,"results":"23","hashOfConfig":"14"},{"size":1922,"mtime":1613394072404,"results":"24","hashOfConfig":"14"},{"size":2481,"mtime":1613394072406,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ai20x7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"28"},"C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\index.js",[],["59","60"],"C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\App.js",["61","62"],"import Navbar from './Header/Header';\r\nimport KlasseList from './VelgKlasse/KlasseList';\r\nimport './App.css';\r\nimport {useState} from 'react';\r\n\r\n\r\nfunction App () {\r\n\r\n\r\n  const [showAdd, setShowAdd] = useState(true);\r\n    return (\r\n    <div className=\"App\">\r\n      <Navbar/>\r\n      <div className=\"content\">\r\n      <div className='fagcard'>\r\n\r\n       <KlasseList/>\r\n        \r\n       \r\n      </div>\r\n      <div>\r\n      \r\n      </div>\r\n      \r\n        </div>\r\n      \r\n    </div>\r\n  );\r\n  }\r\n  \r\n\r\n\r\nexport default App;\r\n","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\Header\\Header.js",[],"C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\VelgKlasse\\KlasseList.js",["63","64","65"],"import { useState  } from \"react\";\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport useFetch from \"../useFetch\";\r\nimport VelgMaster from \"../VelgMaster/VelgMaster\";\r\n\r\n\r\nconst KlasseList = ({ handleClick}) => {\r\n\r\n    //henter tabellen klasser og plasserer det i klassetrinn\r\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/klasser`);\r\n\r\n    //setter klassetrinn til å bli answer\r\n    const [answer, setAnswer] = useState(klassetrinn);\r\n\r\n    //brukes til å lagre objektet\r\n    const [obj, setObj] = useState();\r\n    const [visVidere, setVisVidere] = useState(false);\r\n    \r\n    \r\n    \r\n    //logger ved trykk\r\n    function handleClick(e) {\r\n        console.log('The link was clicked.');\r\n        console.log(e);\r\n        const id = e.id;\r\n        console.log('id fra handleClick = '+id);\r\n        \r\n    }\r\n\r\n    function visVidereClick(visVidere){\r\n        console.log('vis videre klikket');\r\n        console.log(visVidere);\r\n        \r\n        setVisVidere(true)\r\n    }\r\n    \r\n    return ( \r\n        \r\n        <div className=''>\r\n        <h2>Velg Klassetrinn</h2>\r\n            \r\n            {\r\n                //sjekker om klassetrinn er ok, deretter mappe gjennom klassene\r\n                klassetrinn && \r\n                klassetrinn.map((klasse) =>(\r\n                    <CustomButton \r\n                    key={klasse.id}\r\n                    options={klasse}\r\n                    \r\n                    onClick={() =>{\r\n                        \r\n                        //setter statene fra øverst, og funksjonen handleclick\r\n                        setObj(klasse)  \r\n                        setAnswer(klasse.id)\r\n                        handleClick(klasse.id)\r\n                        visVidereClick(visVidere)\r\n                        \r\n                    }}\r\n                    >\r\n                    Grunnskolelærer {klasse.klassetrinn} trinn\r\n                    </CustomButton>\r\n                    \r\n\r\n                    \r\n                ))\r\n                \r\n            }\r\n            {\r\n                //gjør answer og obj til props, slik at den kan brukes i ObligFagCard\r\n                //aswer blir klasse id, som blir satt i onClick funkjsonen\r\n                visVidere &&\r\n                <VelgMaster \r\n                answer={answer}\r\n                obj={obj}\r\n                \r\n\r\n                />\r\n                \r\n            }\r\n            \r\n            \r\n            {\r\n                \r\n            }\r\n            \r\n\r\n           \r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default KlasseList;","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\useFetch.js",["66"],"import {useState, useEffect} from 'react';\r\n\r\n                //must pass in the url to fetch\r\nconst useFetch = (url, id) => {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [obligFag, setObligFag] = useState(null);\r\n    \r\n    \r\n      \r\n      //runs every re-render\r\n      //Fetches data as soon as the component renders, then updates state\r\n    useEffect(() => {\r\n        const abortCont = new AbortController();\r\n        console.log('use effetct ran');\r\n\r\n        fetch(url, {signal: AbortController.signal})\r\n          .then(res => {\r\n              \r\n              if(!res.ok){\r\n                  throw Error('Could not fetch the data for that resource');\r\n                  \r\n              }\r\n              return res.json()\r\n          })\r\n          .then(data => {\r\n              setData(data);\r\n              setIsPending(false);\r\n              setError(null);\r\n              setObligFag(obligFag);\r\n              \r\n\r\n          })\r\n          .catch(err => {\r\n              if(err.name === 'AbortError'){\r\n                  console.log('fetch aborted');\r\n              }\r\n              else{\r\n                setIsPending(false);\r\n                setError(err.message);\r\n              }\r\n              \r\n\r\n          })\r\n        return () => abortCont.abort();\r\n        //the dependency array [] below makes sure that the useEffect hook\r\n        //only run the function after the first initial render\r\n    }, [url]);\r\n\r\n    return {data, isPending, error, obligFag}\r\n\r\n}\r\n\r\nexport default useFetch;","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\CustomButton\\CustomButton.js",[],"C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\VelgMaster\\VelgMaster.js",["67","68","69","70","71","72","73","74"],"import React, {useState} from 'react'\r\nimport './VelgMaster.css';\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport useFetch from '../useFetch';\r\nimport ObligFagCard from '../oblig-fag/oblig-fag-card';\r\nconst _ = require(\"lodash\");  \r\n\r\n\r\n\r\nconst VelgMaster = ({answer}) => {\r\n\r\n    //setter masterfag tabellen til masterFag\r\n    const {data: masterFag, error, isPending} = useFetch(`http://localhost:5000/api/masterfag/`);\r\n    \r\n    // slik at det brukes/ lagres i neste komponent\r\n    const [fagNavn, setFagnavn] = useState();\r\n    const [masterId, setMasterId] = useState();\r\n    //const [mulighetTrue, setMulighetTrue] = useState();\r\n    const [visVidere, setVisVidere] = useState(false);\r\n    const [farge, setFarge] = useState();\r\n    const [obj, setObj] = useState();\r\n\r\n\r\n    \r\n   \r\n    //logger ved trykk\r\n    function handleClick(e) {\r\n        console.log('The link was clicked.');\r\n        \r\n        console.log(e);\r\n        \r\n    }\r\n\r\n    function byttFarge(farge){\r\n        console.log('vis videre klikket');\r\n        console.log(visVidere);\r\n        \r\n        \r\n    }\r\n\r\n\r\n    return ( \r\n        <div>\r\n        <h2>Velg Masteremne</h2>\r\n        <div className='card-container'>\r\n\r\n            {\r\n                masterFag &&\r\n                    \r\n                    masterFag.map((oblig)=>(\r\n                        \r\n                        //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\r\n                        oblig.klasseId === answer &&\r\n                        \r\n                    <CustomButton \r\n                        key={oblig.id}\r\n                        options={oblig}\r\n                        \r\n                        onClick={() =>{\r\n                            handleClick(oblig)\r\n                            setMasterId(oblig.id)\r\n                            setFagnavn(oblig.fagnavn)\r\n                            setVisVidere(true)\r\n                            \r\n                        }}\r\n                        >\r\n                         {oblig.fagnavn}\r\n                    </CustomButton>\r\n                    ))\r\n            }\r\n           \r\n        </div>\r\n\r\n        <div className=\"ny\">\r\n        {   \r\n            visVidere&&\r\n            <ObligFagCard masterId={masterId} fagNavn={fagNavn} answer={answer}/>\r\n        \r\n        }\r\n        \r\n        </div>\r\n        </div>\r\n        \r\n        \r\n     );\r\n};\r\nexport default VelgMaster;\r\n","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\oblig-fag\\oblig-fag-card.js",["75","76","77","78"],"import React, {useState} from 'react'\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport useFetch from '../useFetch';\r\nimport VelgMuligheter from '../VelgMuligheter/VelgMuligheter';\r\nimport ObligFagSemester from './oblig-fag-semester';\r\nconst _ = require(\"lodash\");  \r\n\r\n\r\n\r\nconst ObligFagCard = ({answer, masterId, obj}) => {\r\n\r\n    \r\n    \r\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/obligfag/`);\r\n    const [visVidere, setVisVidere] = useState(false);\r\n    \r\n\r\n\r\n    function visVidereClick(visVidere){\r\n        console.log('vis videre klikket');\r\n        console.log(visVidere);\r\n        \r\n        setVisVidere(true)\r\n    }\r\n    \r\n   \r\n    //logger ved trykk\r\n    function handleClick(e) {\r\n        console.log('The link was clicked.');\r\n        \r\n        console.log(e);\r\n        \r\n    }\r\n\r\n\r\n    //lager et array som sortrer etter semester\r\n    const iteratees = obj => obj.semester;\r\n    const sorted = _.sortBy(klassetrinn, iteratees);\r\n    \r\n\r\n    \r\n\r\n    return ( \r\n        <div>\r\n        <h2>Obligs</h2>\r\n\r\n        <h2>Semester 1</h2>\r\n        <div className='card-container'>\r\n            {\r\n                    // det sorterte arrayet mappes\r\n                    <ObligFagSemester semester={1} answer={answer}/>\r\n            }\r\n\r\n        </div>\r\n\r\n        <h2>Semester 2</h2>\r\n        <div className='card-container'>\r\n            {\r\n                    // det sorterte arrayet mappes\r\n                    <ObligFagSemester semester={2} answer={answer}/>\r\n            }\r\n\r\n        </div>\r\n        <h2>Semester 2</h2>\r\n        <div className='card-container'>\r\n            {\r\n                    // det sorterte arrayet mappes\r\n                    <ObligFagSemester semester={3} answer={answer}/>\r\n            }\r\n\r\n        </div>\r\n\r\n        \r\n\r\n        <div>\r\n            {\r\n                <CustomButton onClick={() => {visVidereClick(visVidere)}} >Videre</CustomButton>\r\n            }\r\n        </div>\r\n        \r\n        <div className=\"ny\">\r\n        {\r\n            \r\n            visVidere&&\r\n            <VelgMuligheter masterId={masterId} answer={answer} obj={obj}></VelgMuligheter>\r\n            \r\n\r\n       \r\n        }\r\n        \r\n        </div>\r\n        </div>\r\n        \r\n        \r\n     );\r\n};\r\nexport default ObligFagCard;","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\oblig-fag\\oblig-fag-semester.js",["79","80","81"],"import React, {useState} from 'react'\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport useFetch from '../useFetch';\r\nconst _ = require(\"lodash\");  \r\n\r\n\r\n//Denne koomponenten gjør at man kan plotte inn semestesr og klasse id(answer) i oblig-fag-card\r\nconst ObligFagSemester = ({answer, semester}) => {\r\n\r\n    \r\n    \r\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/obligfag/`);\r\n\r\n    //lager et array som sortrer etter semester\r\n    const iteratees = obj => obj.semester;\r\n    const sorted = _.sortBy(klassetrinn, iteratees);\r\n    \r\n\r\n    return ( \r\n        <>\r\n        \r\n\r\n            {\r\n                \r\n                    // det sorterte arrayet mappes\r\n                    sorted.map((oblig)=>(\r\n                        //om klasseId er det samme som answer fra KlasseList =>\r\n                        oblig.klasseId ===answer &&\r\n                        oblig.semester ===semester &&\r\n                        <CustomButton \r\n                            key={oblig.id}\r\n                            \r\n                        >\r\n                         {oblig.fagnavn}\r\n                        </CustomButton>\r\n                        \r\n                    ))\r\n            }\r\n            {\r\n                \r\n            }\r\n\r\n        \r\n        </>\r\n        \r\n        \r\n     );\r\n};\r\nexport default ObligFagSemester;","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\VelgMuligheter\\VelgMuligheter.js",["82","83","84","85","86","87"],"C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\Semester\\Semester.js",["88","89","90"],"import React, {useState} from 'react'\r\nimport CustomButton from '../CustomButton/CustomButton';\r\n\r\nimport useFetch from '../useFetch';\r\n\r\nconst Semester = ({klasseId, semester}) => {\r\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/muligheter/`);\r\n    \r\n    \r\n    //logger ved trykk\r\n    function handleClick(e) {\r\n        console.log('The link was clicked.');\r\n        \r\n        console.log(e);\r\n        \r\n    }\r\n    \r\n    return ( \r\n        <div>\r\n        \r\n        <div className=''>\r\n        \r\n            {\r\n                klassetrinn &&\r\n                        klassetrinn.map((oblig)=>(\r\n                            \r\n                            //oblig.MasterFagId === masterId &&\r\n                            //om semester = 5 vis semester og semeseter fag\r\n                            oblig.semester === semester &&\r\n                            oblig.klasseId === klasseId &&\r\n                            \r\n                            <div className=''>\r\n                            \r\n                            \r\n                                <CustomButton \r\n                                    key={oblig.id}\r\n                                    semester={oblig.semester}\r\n                                    klasseId = {oblig.klasseId}\r\n                                    onClick = {() =>{\r\n                                        handleClick(oblig)\r\n\r\n                                    }}\r\n                                >\r\n                                    semester:{oblig.semester}, fag: \r\n\r\n                                    {oblig.fagnavn}\r\n                                </CustomButton>\r\n                               \r\n                                          \r\n                            </div>\r\n                ))\r\n            }\r\n \r\n        </div>\r\n        \r\n    </div>\r\n        \r\n        \r\n     );\r\n}\r\n \r\nexport default Semester;","C:\\Users\\chris\\source\\repos\\bachelor\\bachelor\\src\\VelgMuligheter\\Muligheter.js",["91","92","93","94","95"],"import React, {useState} from 'react'\r\nimport CustomButton from '../CustomButton/CustomButton';\r\nimport Semester from '../Semester/Semester';\r\nimport useFetch from '../useFetch';\r\nconst _ = require(\"lodash\");  \r\n\r\n\r\n\r\n\r\nconst Muligheter = ({masterId, semester, klasseId}) => {\r\n\r\n    \r\n    const {data: klassetrinn, error, isPending} = useFetch(`http://localhost:5000/api/muligheter/`);\r\n\r\n    const [isTrue, setIsTrue] = useState(false);\r\n   \r\n    //logger ved trykk\r\n    function handleClick(e) {\r\n        console.log('The link was clicked.');\r\n        \r\n        console.log(e);\r\n        \r\n    }\r\n\r\n       //lager et array som sortrer etter semester\r\n       const iteratees = obj => obj.semester;\r\n       const sorted = _.sortBy(klassetrinn, iteratees);\r\n    \r\n    \r\n\r\n       \r\n    return ( \r\n        \r\n        \r\n        <>\r\n\r\n        \r\n        \r\n\r\n            {   \r\n                klassetrinn &&\r\n                \r\n                    sorted.map((oblig)=>(\r\n                            \r\n                            //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster) \r\n                            oblig.masterFagId === masterId &&\r\n                            oblig.semester === semester &&\r\n                                <CustomButton\r\n                                    //setter fargen på den valgte fagveien\r\n                                    style={{backgroundColor: 'red'}} \r\n                                    key={oblig.id}\r\n                                    fag={oblig.fagnavn}\r\n                                    \r\n                                    onClick ={() =>{\r\n                                        handleClick(oblig);\r\n                                        //setIsTrue(true);\r\n                                        //isTrue(true);\r\n                                        \r\n                                    }}\r\n                                >\r\n                                    {oblig.fagnavn}\r\n                                </CustomButton>\r\n                                 \r\n                            ))\r\n                \r\n                    \r\n                         \r\n                        \r\n\r\n            }\r\n            \r\n\r\n           \r\n            \r\n \r\n        </>\r\n        \r\n        \r\n        \r\n        \r\n     );\r\n};\r\nexport default Muligheter;\r\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":10,"column":10,"nodeType":"102","messageId":"103","endLine":10,"endColumn":17},{"ruleId":"100","severity":1,"message":"104","line":10,"column":19,"nodeType":"102","messageId":"103","endLine":10,"endColumn":29},{"ruleId":"100","severity":1,"message":"105","line":10,"column":31,"nodeType":"102","messageId":"103","endLine":10,"endColumn":36},{"ruleId":"100","severity":1,"message":"106","line":10,"column":38,"nodeType":"102","messageId":"103","endLine":10,"endColumn":47},{"ruleId":"107","severity":1,"message":"108","line":22,"column":14,"nodeType":"102","messageId":"109","endLine":22,"endColumn":25},{"ruleId":"110","severity":1,"message":"111","line":49,"column":8,"nodeType":"112","endLine":49,"endColumn":13,"suggestions":"113"},{"ruleId":"100","severity":1,"message":"114","line":6,"column":7,"nodeType":"102","messageId":"103","endLine":6,"endColumn":8},{"ruleId":"100","severity":1,"message":"105","line":13,"column":29,"nodeType":"102","messageId":"103","endLine":13,"endColumn":34},{"ruleId":"100","severity":1,"message":"106","line":13,"column":36,"nodeType":"102","messageId":"103","endLine":13,"endColumn":45},{"ruleId":"100","severity":1,"message":"115","line":20,"column":12,"nodeType":"102","messageId":"103","endLine":20,"endColumn":17},{"ruleId":"100","severity":1,"message":"116","line":20,"column":19,"nodeType":"102","messageId":"103","endLine":20,"endColumn":27},{"ruleId":"100","severity":1,"message":"117","line":21,"column":12,"nodeType":"102","messageId":"103","endLine":21,"endColumn":15},{"ruleId":"100","severity":1,"message":"118","line":21,"column":17,"nodeType":"102","messageId":"103","endLine":21,"endColumn":23},{"ruleId":"100","severity":1,"message":"119","line":34,"column":14,"nodeType":"102","messageId":"103","endLine":34,"endColumn":23},{"ruleId":"100","severity":1,"message":"105","line":14,"column":31,"nodeType":"102","messageId":"103","endLine":14,"endColumn":36},{"ruleId":"100","severity":1,"message":"106","line":14,"column":38,"nodeType":"102","messageId":"103","endLine":14,"endColumn":47},{"ruleId":"100","severity":1,"message":"120","line":28,"column":14,"nodeType":"102","messageId":"103","endLine":28,"endColumn":25},{"ruleId":"100","severity":1,"message":"121","line":38,"column":11,"nodeType":"102","messageId":"103","endLine":38,"endColumn":17},{"ruleId":"100","severity":1,"message":"122","line":1,"column":16,"nodeType":"102","messageId":"103","endLine":1,"endColumn":24},{"ruleId":"100","severity":1,"message":"105","line":12,"column":31,"nodeType":"102","messageId":"103","endLine":12,"endColumn":36},{"ruleId":"100","severity":1,"message":"106","line":12,"column":38,"nodeType":"102","messageId":"103","endLine":12,"endColumn":47},{"ruleId":"100","severity":1,"message":"123","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":24},{"ruleId":"100","severity":1,"message":"105","line":15,"column":31,"nodeType":"102","messageId":"103","endLine":15,"endColumn":36},{"ruleId":"100","severity":1,"message":"106","line":15,"column":38,"nodeType":"102","messageId":"103","endLine":15,"endColumn":47},{"ruleId":"100","severity":1,"message":"124","line":17,"column":14,"nodeType":"102","messageId":"103","endLine":17,"endColumn":18},{"ruleId":"100","severity":1,"message":"125","line":31,"column":12,"nodeType":"102","messageId":"103","endLine":31,"endColumn":18},{"ruleId":"100","severity":1,"message":"126","line":31,"column":20,"nodeType":"102","messageId":"103","endLine":31,"endColumn":29},{"ruleId":"100","severity":1,"message":"122","line":1,"column":16,"nodeType":"102","messageId":"103","endLine":1,"endColumn":24},{"ruleId":"100","severity":1,"message":"105","line":7,"column":31,"nodeType":"102","messageId":"103","endLine":7,"endColumn":36},{"ruleId":"100","severity":1,"message":"106","line":7,"column":38,"nodeType":"102","messageId":"103","endLine":7,"endColumn":47},{"ruleId":"100","severity":1,"message":"127","line":3,"column":8,"nodeType":"102","messageId":"103","endLine":3,"endColumn":16},{"ruleId":"100","severity":1,"message":"105","line":13,"column":31,"nodeType":"102","messageId":"103","endLine":13,"endColumn":36},{"ruleId":"100","severity":1,"message":"106","line":13,"column":38,"nodeType":"102","messageId":"103","endLine":13,"endColumn":47},{"ruleId":"100","severity":1,"message":"125","line":15,"column":12,"nodeType":"102","messageId":"103","endLine":15,"endColumn":18},{"ruleId":"100","severity":1,"message":"126","line":15,"column":20,"nodeType":"102","messageId":"103","endLine":15,"endColumn":29},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'showAdd' is assigned a value but never used.","Identifier","unusedVar","'setShowAdd' is assigned a value but never used.","'error' is assigned a value but never used.","'isPending' is assigned a value but never used.","no-redeclare","'handleClick' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'obligFag'. Either include it or remove the dependency array. You can also do a functional update 'setObligFag(o => ...)' if you only need 'obligFag' in the 'setObligFag' call.","ArrayExpression",["130"],"'_' is assigned a value but never used.","'farge' is assigned a value but never used.","'setFarge' is assigned a value but never used.","'obj' is assigned a value but never used.","'setObj' is assigned a value but never used.","'byttFarge' is defined but never used.","'handleClick' is defined but never used.","'sorted' is assigned a value but never used.","'useState' is defined but never used.","'ObligFagSemester' is defined but never used.","'Lala' is defined but never used.","'isTrue' is assigned a value but never used.","'setIsTrue' is assigned a value but never used.","'Semester' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [obligFag, url]",{"range":"133","text":"134"},[1524,1529],"[obligFag, url]"]