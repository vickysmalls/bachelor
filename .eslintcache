[{"/Users/vikke/bachelor/src/index.js":"1","/Users/vikke/bachelor/src/App.js":"2","/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js":"3","/Users/vikke/bachelor/src/Modal/Modal.js":"4","/Users/vikke/bachelor/src/Header/Header.js":"5","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js":"6","/Users/vikke/bachelor/src/useFetch.js":"7","/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js":"8","/Users/vikke/bachelor/src/CustomButton/CustomButton.js":"9","/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js":"10","/Users/vikke/bachelor/src/CustomButton/InfoButton.js":"11","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js":"12","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js":"13","/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js":"14","/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js":"15","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js":"16","/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js":"17","/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js":"18","/Users/vikke/bachelor/src/Semester/Semester.js":"19","/Users/vikke/bachelor/src/Print/Print.js":"20","/Users/vikke/bachelor/src/Semester/Semester6Psyko.js":"21","/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js":"22","/Users/vikke/bachelor/src/Helpers.js":"23","/Users/vikke/bachelor/src/Validering/ValideringAlert.js":"24"},{"size":221,"mtime":1616420130919,"results":"25","hashOfConfig":"26"},{"size":1551,"mtime":1621850133315,"results":"27","hashOfConfig":"26"},{"size":5204,"mtime":1621850133302,"results":"28","hashOfConfig":"26"},{"size":726,"mtime":1616755390099,"results":"29","hashOfConfig":"26"},{"size":564,"mtime":1621424918308,"results":"30","hashOfConfig":"26"},{"size":1737,"mtime":1621421920706,"results":"31","hashOfConfig":"26"},{"size":1438,"mtime":1618994314389,"results":"32","hashOfConfig":"26"},{"size":2165,"mtime":1621594233789,"results":"33","hashOfConfig":"26"},{"size":326,"mtime":1616420130903,"results":"34","hashOfConfig":"26"},{"size":5221,"mtime":1621850133304,"results":"35","hashOfConfig":"26"},{"size":341,"mtime":1616420130903,"results":"36","hashOfConfig":"26"},{"size":5172,"mtime":1621421981796,"results":"37","hashOfConfig":"26"},{"size":2680,"mtime":1621592486038,"results":"38","hashOfConfig":"26"},{"size":37878,"mtime":1621850133307,"results":"39","hashOfConfig":"26"},{"size":3785,"mtime":1621592486036,"results":"40","hashOfConfig":"26"},{"size":1876,"mtime":1621421876101,"results":"41","hashOfConfig":"26"},{"size":3173,"mtime":1621420729165,"results":"42","hashOfConfig":"26"},{"size":12622,"mtime":1621850133306,"results":"43","hashOfConfig":"26"},{"size":3290,"mtime":1621593498917,"results":"44","hashOfConfig":"26"},{"size":902,"mtime":1620119023576,"results":"45","hashOfConfig":"26"},{"size":3552,"mtime":1621421952392,"results":"46","hashOfConfig":"26"},{"size":3506,"mtime":1621592486034,"results":"47","hashOfConfig":"26"},{"size":100,"mtime":1617793538065,"results":"48","hashOfConfig":"26"},{"size":344,"mtime":1621422033019,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"12k2fam",{"filePath":"53","messages":"54","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/vikke/bachelor/src/index.js",[],["110","111"],"/Users/vikke/bachelor/src/App.js",["112"],"/Users/vikke/bachelor/src/VelgKlasse/KlasseList.js",["113","114"],"import { useEffect, useRef, useState  } from \"react\";\nimport useFetch from \"../useFetch\";\nimport VelgMaster from \"../VelgMaster/VelgMaster\";\nimport './VelgKlassetrinn.css';\n\nimport Elever from './Elever.jpeg';\nimport Praksis from './Praksis.jpeg';\nimport VelgKlasse from \"./VelgKlasse\";\nimport VelgStudierettning from \"./VelgStudierettning\";\n\n\nconst KlasseList = () => {\n\n    //henter tabellen klasser og plasserer det i klassetrinn\n    const {data: klassetrinn, error, isPending} = useFetch(`https://api.fagvalget.no/api/klasser`);\n\n    //setter klassetrinn til å bli answer\n    const [klasseId, setKlasseId] = useState(klassetrinn);\n\n    //brukes til å lagre objektet\n    const [obj, setObj] = useState();\n    const [visVidere, setVisVidere] = useState(false);\n\n    const [resetState, setResetState] = useState(false);\n\n\n    const [studieRetning, setStudieRetning] = useState();\n    \n    const [fagNavnStudierettning, setFagNavnStudierettning] = useState();\n\n    // slik at det brukes/ lagres i neste komponent\n  \n  const [valgtObligFag, setValgtObligFag] = useState();\n\n  //det under er for smooth scroll\n  const divRef = useRef();\n\n  //for å slippe å trykke to ganger, må loades først slik at den får\n  // plassert divRef i VelgMaster masteremne diven\n  useEffect(() => {\n    handleScrollClick()  });\n\n  const handleScrollClick = () => {\n    /* visVidere&&\n    divRef.current.scrollIntoView({ behavior: \"smooth\" }); */\n  };\n    \n    \n    \n   \n     return ( \n        \n        \n        \n<div className=\"applikasjon\">\n    \n    \n    <div class=\"row\">\n  <div class=\"column\" id=\"Seksti\">\n  <img id=\"Illustrasjon\" src={Elever} alt=\"Illustrasjon\"/>  \n  <h2 id=\"Innledning\">Med denne veilederen kan du utforske hvordan du ønsker å legge opp studieløpet ditt her ved OsloMet. \n            Se på de forskjellige fag og fagkombinasjonene, og se hvilke konsekvenser valg av fag vil ha senere i studiet.\n        </h2>\n        <p id=\"Padding\">Veilederen er utviklet for at alle studenter skal ta riktige valg underveis i lærerutdanningen. Målet\n        er at du som student skal legge opp studieløpet riktig slik at du får en master innenfor det emnet du ønsker deg. Vi vet \n        at oppbyggingen av lærerutdanningen kan være vanskelig å forstå, og dermed er denne veilederen utviklet for å visualisere\n        oppbyggingen av studiet på en bedre måte. \n        </p>\n\n        </div>\n  \n  <div class=\"column\" id=\"Forti\">\n  <img id=\"Illustrasjon\" src={Praksis} alt=\"Illustrasjon\"/>\n  <h2 id=\"Innledning\">Hvordan bruke veilederen?\n        </h2>\n        <p id=\"Padding\">\n            \n        <ol>\n            <li>Velg studieretning, det første valget du får er om du går grunnskoleutdanning 1-7 eller grunnskoleutdanning 5-10.<br /><br /></li>\n            <li>Deretter får du muligheten til å velge hvilket masteremne du vil studere i 10. semester. Basert på valget du tar vil studieplanen \n        oppdatere seg med de fagene du trenger for valgt masteremne.<br /><br /></li>\n            <li>Siste del er å fylle inn hvilke ekstra fag du kan tenke deg å studere i løpet av din lærerutdanning. \n        Husk at man trenger 60 studiepoeng i syklus 1 for å ta faget videre i syklus 2. Om du har to fag kan du velge selv i semester 7.</li>\n        </ol>\n            \n        </p>\n\n        <p id=\"Bold\">Scroll ned for å starte veilederen!</p>\n  </div>\n</div>\n\n<div class=\"row\" id=\"Start\">\n<div className=\"column\" id=\"Hundre\">\n  \n        \n            <h3>Velg studieretning </h3>      \n            <h5>Velg din studieretning ved OsloMet</h5>\n            <div className='introknapp'>\n            \n            \n                    <VelgKlasse\n                     visVidere={visVidere} \n                     setVisVidere={setVisVidere} \n                     setObj={setObj} \n                     setAnswer={setKlasseId}\n                     klassetrinn={klassetrinn}\n                     handleScrollClick={handleScrollClick}\n                     resetState = {resetState}\n                     setResetState={setResetState}\n                    />\n\n            </div>\n        </div> \n     </div> \n     {\n         //om man velger 5-10\n         //Bruker fagnavn for å kunne filtrere på det i obligfag\n         klasseId===2&&\n        <VelgStudierettning setStudieRetning={setStudieRetning} fagNavnStudierettning={fagNavnStudierettning} setFagNavnStudierettning={setFagNavnStudierettning} valgtObligFag={valgtObligFag} setValgtObligFag={setValgtObligFag}\n        />\n     }\n            \n            \n                {\n                    //gjør answer og obj til props, slik at den kan brukes i ObligFagCard\n                    //answer blir klasse id, som blir satt i onClick funkjsonen\n                    visVidere &&\n                    <VelgMaster \n                    studieRetning={studieRetning}\n                    klasseId={klasseId}\n                    obj={obj}\n                    fagNavnStudierettning={fagNavnStudierettning}\n                    setFagNavnStudierettning={setFagNavnStudierettning}\n                    divRef={divRef}\n                    />                       \n                }\n            \n        </div>   \n          \n     );\n}\n \nexport default KlasseList;","/Users/vikke/bachelor/src/Modal/Modal.js",["115"],"import React from 'react'\nimport ReactDom from 'react-dom';\nimport { FaEnvelopeOpenText, FaRegWindowClose } from 'react-icons/fa';\nimport './Modal.css';\n\nexport default function Modal({children, open, onClose}) {\n    if (! open) return null\n\n    //Create portal gjør at man kan ha den i original html (DOM) index.html\n    //Gjør at man kan manipulere og bruke popupen over alt det andre\n    return ReactDom.createPortal (\n        <>\n    \n        <div className='popup'>\n        <div className=\"popup-inner\">\n            <FaRegWindowClose onClick={onClose} size='1.5em' className=\"close-btn\"/>\n            {children}\n            </div>\n          </div>\n        </>,\n        document.getElementById('portal')\n        \n    )\n}\n","/Users/vikke/bachelor/src/Header/Header.js",["116"],"import './Header.css';\nimport logo2 from './OsloMet logo for nett.png';\nimport logo3 from './LogoOsloMet.png';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Header = () => {\n    return ( \n        \n    \n    <div className=\"row\" id=\"header\">\n    <div className=\"column\" id=\"OsloMetLogo\">    \n        <img src={logo3} alt=\"OslometLogo\"/>\n    </div>\n    <div className=\"column\" id=\"Forti\"> \n        <h1>Gjør deg kjent med de ulike retningene ved lærerutdanningen på OsloMet!</h1>\n    </div>\n    </div>\n    \n    \n      \n\n    );\n      \n}\n \nexport default Header;","/Users/vikke/bachelor/src/VelgKlasse/VelgKlasse.js",[],"/Users/vikke/bachelor/src/useFetch.js",[],"/Users/vikke/bachelor/src/VelgKlasse/VelgStudierettning.js",[],"/Users/vikke/bachelor/src/CustomButton/CustomButton.js",[],"/Users/vikke/bachelor/src/VelgMaster/VelgMaster.js",["117","118"],"import React, { useState, useReducer, useRef, useEffect } from \"react\";\nimport \"./VelgMaster.css\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport useFetch from \"../useFetch\";\nimport ObligFagCard from \"../oblig-fag/oblig-fag-card\";\n\nimport { AiOutlineArrowDown } from \"react-icons/ai\";\nimport { handleClick } from \"../Helpers\";\n\nconst _ = require(\"lodash\");\n\nconst VelgMaster = ({\n  divRef,\n  studieRetning,\n  klasseId,\n  studieId,\n  fagNavnStudierettning,\n}) => {\n  //setter masterfag tabellen til masterFag\n  const { data: masterFag, error, isPending } = useFetch(\n    `https://api.fagvalget.no/api/masterfag/`\n  );\n\n  // slik at det brukes/ lagres i neste komponent\n  const [fagNavn, setFagnavn] = useState();\n  const [masterId, setMasterId] = useState();\n  const [visVidere, setVisVidere] = useState(false);\n\n  //Sette farge valgt semester\n  const [activeButton, setActiveButton] = useState();\n\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n  //det under er for smooth scroll\n  const obligDivRef = useRef();\n\n  const handleScrollClick = () => {\n    visVidere &&\n      obligDivRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        inline: \"center\",\n        block: \"center\",\n      });\n  };\n\n  //filtrer slik at første fag man velger i 5-10, norsk engelsk eller matte, blir filtrert ut\n\n  let filtered_klassetrinn = _.filter(masterFag, function (klasse) {\n    return klasse.fagnavn !== fagNavnStudierettning;\n  });\n\n  const infoTekst_1 = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">\n        Velg faget du ønsker å ha som mastegfag, og se hvordan du må bygge opp\n        studiet for å kunne skrive masteroppgaven i det valgte faget\n      </h2>\n      <p id=\"Beskrivelse\">\n        Valget du gjør her vil påvirke valgmulighetene i resten av studiet. For\n        å kunne velge et masterfag, må du ha 60 studiepoeng i faget fra syklus 1\n        (de tre første studieårene). Det er dette faget du vil kunne skrive\n        masteroppgave i. <br />\n        <br />\n        Du kan senere gå tilbake til denne delen og velge et annet masterfag du\n        kunne være interessert i å skrive masteroppgave. <br />\n        <br />\n        <bold>Alle mulighetene er lista opp under!</bold>\n      </p>\n    </div>\n  );\n\n  const infoTekst_2 = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">\n        Velg faget du ønsker å ha som mastegfag, og se hvordan du må bygge opp\n        studiet for å kunne skrive masteroppgaven i det valgte faget\n      </h2>\n      <p id=\"Beskrivelse\">\n        Valget du gjør her vil påvirke valgmulighetene i resten av studiet. For\n        å kunne skrive masteroppgave i et av de følgende fagene må du ha 60\n        studiepoeng i faget fra syklus 1 (de tre første studieårene) <br />\n        <br />\n        Du kan senere gå tilbake til denne delen og velge et annet masterfag du\n        kunne tenke deg, og se hvordan studiemodellen da blir. <br />\n        <br />\n        <bold>Alle mulighetene er lista opp under!</bold>\n      </p>\n    </div>\n  );\n\n  return (\n    <>\n      <div class=\"row\" id=\"Masteremner\" ref={divRef}>\n        <div class=\"column\" id=\"Hundre\">\n          <h3>Velg ønsket masterfag</h3>\n        </div>\n        <div class=\"column\" id=\"Tjue\"></div>\n\n        {\n          //Viser tekst avhengig av klasseID\n          klasseId === 1 ? infoTekst_1 : infoTekst_2\n        }\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <h2>Velg et masteremne: </h2>\n          <div className=\"masterfag\">\n            {isPending && <div>Loading...</div>}\n            {error && <div>{error}</div>}\n            {masterFag &&\n              filtered_klassetrinn.map((fag) => {\n                const className = activeButton === fag.id ? \"red\" : \"\";\n\n                return (\n                  //om klasseId er det samme som answer (klassetrinn id) fra KlasseList =>\n                  fag.klasseId === klasseId && (\n                    <>\n                      <CustomButton\n                        inverted={className}\n                        key={fag.id}\n                        options={fag}\n                        activeButton={activeButton}\n                        onClick={() => {\n                          handleClick(fag);\n                          setMasterId(fag.id);\n                          setFagnavn(fag.fagnavn);\n                          setVisVidere(true);\n                          onSideBtnClick(fag);\n                        }}\n                      >\n                        {fag.fagnavn}\n                      </CustomButton>\n                    </>\n                  )\n                );\n              })}\n          </div>\n        </div>\n        <div id=\"Senter\">\n          <AiOutlineArrowDown\n            size={40}\n            onClick={handleScrollClick}\n          ></AiOutlineArrowDown>\n        </div>\n      </div>\n\n      {visVidere && (\n        <ObligFagCard\n          obligDivRef={obligDivRef}\n          studieRetning={studieRetning}\n          fagNavnStudierettning={fagNavnStudierettning}\n          masterId={masterId}\n          fagNavn={fagNavn}\n          klasseId={klasseId}\n        />\n      )}\n    </>\n  );\n};\nexport default VelgMaster;\n","/Users/vikke/bachelor/src/CustomButton/InfoButton.js",[],"/Users/vikke/bachelor/src/oblig-fag/oblig-fag-card.js",["119","120"],"import React, { useRef, useState } from \"react\";\n\nimport VelgMuligheter from \"../VelgMuligheter/VelgMuligheter\";\nimport ObligFagSemester from \"./oblig-fag-semester\";\nimport \"./oblig-fag.css\";\nimport ObligFagSemester2 from \"./ObligFagSemester2\";\n\nconst ObligFagCard = ({\n  obligDivRef,\n  studieRetning,\n  klasseId,\n  masterId,\n  obj,\n  fagNavn,\n  fagNavnStudierettning,\n}) => {\n  //det under er for smooth scroll\n  const velgMuligheterDivRef = useRef();\n\n  const handleScrollClick = () => {\n    velgMuligheterDivRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  \n  const infoTekst_1_de_tre_forste = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">De tre første semestrene består av obligatoriske emner</h2>\n      <p id=\"Beskrivelse\">\n        De tre første semestrene består kun av obligatoriske emner i fagene\n        norsk, matematikk og pedagogikk og elevkunnskap. <br />\n        <br />\n        <bold>De obligatoriske emnene er markert i gult!</bold>\n      </p>\n    </div>\n  );\n\n  const infoTekst_2_de_tre_forste = (\n    <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">De tre første semestrene består obligatoriske emner</h2>\n      <p id=\"Beskrivelse\">\n        De tre første semestrene består av obligatoriske emner. 60 studiepoeng i\n        ditt første undervisningsfag som er enten norsk, matematikk eller\n        enelsk, samt 30 studiepoeng i pedagogikk og elevkunnskap. <br />\n        <br />\n        <bold>De obligatoriske emnene er markert i gult!</bold>\n      </p>\n    </div>\n  );\n\n  return (\n    <>\n      <div class=\"row\" ref={obligDivRef}>\n        <div class=\"column\" id=\"Hundre\">\n          <h3>1. Studieår: Obligatoriske emner</h3>\n        </div>\n        <div class=\"column\" id=\"MasterBilde\"></div>\n\n        {\n            //Om valgt klasse trinn er 1-7, ellers vis den andre\n            klasseId===1 ? infoTekst_1_de_tre_forste : infoTekst_2_de_tre_forste\n        }\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n              <h5>Semester 1</h5>\n              <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n              <div className=\"fag\">\n                {\n                  //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                  klasseId === 2 ? (\n                    <ObligFagSemester2\n                      fagNavnStudierettning={fagNavnStudierettning}\n                      semester={1}\n                      answer={klasseId}\n                    />\n                  ) : (\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester\n                      id=\"IkkeKnapp\"\n                      semester={1}\n                      answer={klasseId}\n                    />\n                  )\n                }\n              </div>\n            </div>\n\n            <div className=\"Forti\">\n              <h5>Semester 2</h5>\n              <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p>\n              <div className=\"fag\">\n                {\n                  //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2, med fagnavnet satt i VelgStudieRettning\n                  klasseId === 2 ? (\n                    <ObligFagSemester2\n                      fagNavnStudierettning={fagNavnStudierettning}\n                      semester={2}\n                      answer={klasseId}\n                    />\n                  ) : (\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester\n                      id=\"IkkeKnapp\"\n                      semester={2}\n                      answer={klasseId}\n                    />\n                  )\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"column\" id=\"Hundre\">\n          <h3>Veien Videre</h3>\n        </div>\n        <div class=\"column\" id=\"BygningBilde\"></div>\n\n        <div class=\"column\" id=\"Atti\">\n      <h2 id=\"Left\">\n        Få oversikt over emnene du må ta, samt hvilke semestre du kan velge\n        valgfrie emner/fag\n      </h2>\n      <p id=\"Beskrivelse\">\n        Semester fire er det semesteret du kan begynne å velge flere\n        undervisningsfag. De obligatoriske emene i 3. semester er{\" \"}\n        <bold>markert i gult </bold> . Så du får muligheten til å ta et fag til\n        og få 60 studiepoeng i det emne, det er ikke nødvendig å ha 60\n        studiepoeng i det valgfrie emne, men noe å tenke over i tilfelle du får\n        lyst til å endre hvilke fag du ønsker som masterfag noe seinere i\n        løpet/ha flere valgmuligheter for masterfag.\n      </p>\n    </div>\n      </div>\n\n      <div>\n        {\n          <VelgMuligheter\n            fagNavnStudierettning={fagNavnStudierettning}\n            studieRetning={studieRetning}\n            fagNavn={fagNavn}\n            masterId={masterId}\n            klasseId={klasseId}\n            obj={obj}\n          ></VelgMuligheter>\n        }\n      </div>\n    </>\n  );\n};\nexport default ObligFagCard;\n","/Users/vikke/bachelor/src/oblig-fag/oblig-fag-semester.js",["121"],"import React, { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport useFetch from \"../useFetch\";\nimport \"./oblig-fag.css\";\nconst _ = require(\"lodash\");\n\n//Denne koomponenten gjør at man kan plotte inn semestesr og klasse id(answer) i oblig-fag-card\nconst ObligFagSemester = ({ answer, semester, setSemesterList7 }) => {\n  const { data: klassetrinn, error, isPending } = useFetch(\n    `http://localhost:5000/api/obligfag/`\n  );\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  //lager et array som sortrer etter semester\n  const iteratees = (obj) => obj.semester;\n  const sorted = _.sortBy(klassetrinn, iteratees);\n\n  return (\n    <>\n      <>\n        {\n          isPending && <div>Loading...</div>\n        }\n        {\n          error && <div>{error}</div>\n        }\n        {\n          // det sorterte arrayet mappes\n          sorted.map(\n            (oblig) =>\n              //om klasseId er det samme som answer fra KlasseList =>\n              oblig.klasseId === answer &&\n              oblig.semester === semester && (\n                <>\n                  <CustomButton id=\"Videre\" key={oblig.id}>\n                    {oblig.fagnavn}\n                  </CustomButton>\n\n                  <InfoButton\n                    className=\"infoknapp\"\n                    onClick={() => {\n                      setIsOpen(true);\n                      setFagnavn(oblig.fagnavn);\n                      //setSemester(oblig.semester)\n                      setEmneKode(oblig.emnekode);\n                      setStudiepoeng(oblig.studiepoeng);\n                      setKlasseId(oblig.klasseId);\n                      setURL(oblig.url);\n                    }}\n                  ></InfoButton>\n                </>\n              )\n          )\n        }\n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ObligFagSemester;\n","/Users/vikke/bachelor/src/VelgMuligheter/VelgMuligheter.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React, {useReducer, useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport ObligFagSemester from '../oblig-fag/oblig-fag-semester';\nimport Semester from '../Semester/Semester';\nimport useFetch from '../useFetch';\nimport Muligheter from './Muligheter';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport '../VelgKlasse/VelgKlassetrinn.css';\nimport '../VelgMaster/VelgMaster.css';\n\nimport './muligheter.css';\nimport Resultat from './Resultat';\nimport Semester6Psyko from '../Semester/Semester6Psyko';\nimport TvungenMulighet from './TvungenMulighet';\nimport ObligFagSemester2 from '../oblig-fag/ObligFagSemester2';\nimport ValideringAlert from '../Validering/ValideringAlert';\n\n\nconst _ = require(\"lodash\");  \n\n\n\nconst VelgMuligheter = ({fagNavnStudierettning, studieRetning, masterId, klasseId, fagNavn}) => {\n\n    //database fetch\n    const {data: klassetrinn, error, isPending} = useFetch(`https://api.fagvalget.no/api/muligheter/`);\n\n    const [isOpen, setIsOpen] = useState(true);\n\n    \n\n    //for å filtrere muligheter i Semester, når man ser hva man har valgt\n    const [muligheterId1, setMuligheterId1] = useState();\n    const [muligheterId2, setMuligheterId2] = useState();\n    const [muligheterId3, setMuligheterId3] = useState();\n\n    const [mulighetTull, setMulighetTull] = useState();\n    const [mulighetTull2, setMulighetTull2] = useState();\n\n    const [valg7Master ,setValg7Master] = useState();\n\n    const [semester9Master, setSemester9Master] = useState();\n    \n    const [masterFagId, setMasterFagId] = useState();\n\n    const [valgtFag4, setValgtFag4] = useState();\n   \n    const [empty, setEmpty] = useState();\n\n    const [isTrue, setIstrue] = useState();\n\n    const [randomVar, setRandom] = useState();\n\n    const [tom, setTom] = useState();\n\n    const [sem9Id, setSem9Id] = useState();\n\n\n\n    //resetter sem6 state\n    const [forceRender, setForceRender] = useState(false);\n    \n    \n\n\n    const [semester9Resultat, setSemester9Resultat] = useState();\n\n    const [conditionalSem9, setConditionalSem9] = useState();\n\n\n    \n\n    const [activeButton, setActiveButton] = useState();\n\n    const handleReset =()=>{\n       /*  setMulighetTull(\"\");\n        setActiveButton('');\n        setMuligheterId1(''); */\n        muligheterId3('');\n      }\n\n    \n    // automatisk setting av valg når det eksisterer en tvungen mulighet\n    const [activeButtonTvungen, setActiveButtonTvungen] = useState();\n    const [activeButtonTvungen2, setActiveButtonTvungen2] = useState();\n    const [activeButtonTvungen3, setActiveButtonTvungen3] = useState();\n\n\n    // farge for for semester 4\n    const [activeButton4, setActiveButton4] = useState();\n\n    // farge for for semester 6\n    const [activeButton2, setActiveButton2] = useState();\n    // farge for for semester 7\n    const [activeButton7, setActiveButton7] = useState();\n    // farge for for semester 8\n    const [activeButton8, setActiveButton8] = useState();\n    // farge for for semester 9\n    const [activeButton9, setActiveButton9] = useState();\n    // farge for for semester 10\n    const [activeButton10, setActiveButton10] = useState();\n\n\n    // farge for for semester 5\n    const [activeButton5, setActiveButton5] = useState();\n    //Set semester 7 liste\n    const [semesterList7, setSemesterList7] = useState();\n\n    const [videre, setVidere] = useState(false);\n\n    const [begynnerLaring, setBegynnerLaring] = useState(3);\n\n    const [begynnerLaringBoolean, setBegynnerLaringBoolean] = useState(false);\n\n    //console.log('activeButton2', activeButton2);\n\n    //lager et array som sortrer etter semester\n    const iteratees = obj => obj.semester;\n    const sorted = _.sortBy(klassetrinn, iteratees);\n\n   /*  //console.log('valg7Master', valg7Master)\n    console.log('masterId', masterId)\n    //console.log('semester9Resultat', semester9Resultat);\n    console.log('muligheterId1; ',muligheterId1);\n    console.log('muligheterId2; ',muligheterId2);\n    console.log('muligheterId3; ',muligheterId3);\n */\n\n const infoTekst_2_studie_aar_1 = (\n   <div>\n     <h2 id=\"Studieaar\">Obligatorisk emner på høsten og fordypning på våren</h2>\n     <p id=\"AarBeskrivelse\">\n       3. semester består av de obligatoriske fagene mattematikk, norsk og\n       pedagogikk. Men valget man gjør 4. semester vil være svært viktig for\n       resten av studiet, og hvilke emner du som student har mulighet til skrive\n       masteroppgave innenfor.\n       <br />\n       <br />\n       Denne veilederen viser deg valgmulighetene utifra ønsket mastermne som er\n       valgt ovenfor. Noen studenter vil ha mange valgmuligheter i dette\n       semsteret, mens for enkelte mastermner vil det være nødvendig å velge\n       riktig fordypning.\n     </p>\n   </div>\n );\n const infoTekst_2_studie_aar_2 = (\n   <div>\n     <h2 id=\"Studieaar\">\n       Obligatoriske emner på høsten og valgfrie emner på våren\n     </h2>\n     <p id=\"AarBeskrivelse\">\n       3. semester består av ytterligere 15 studiepoeng i ditt valgte\n       undervisningsfag; norsk, matematikk eller engelsk, samt 15 studiepoeng i\n       pedagogikk og elevkunnskap. I 4. semester velger du et nytt\n       undervisningsfag. Hvis du ønsker et av disse fagene som masterfag, må du\n       velge det i dette semesteret og bygge videre på det i 5. semester for å\n       få de 60 studiepoengene du trenger for å kunne skrive masteroppgave i\n       faget.\n     </p>\n   </div>\n );\n\n const infoTekst_3_studie_aar_1 = (\n   <div>\n     <h2 id=\"Studieaar\">\n       Mulighet for studier i utlandet og fordypning i valgfrie emner\n     </h2>\n     <p id=\"AarBeskrivelse\">\n       Det tredje året på studiet er preget av at du kan velge fordypning i\n       ønsket emne. Dette er også tidpunktet hvor det er mulighet for å studere\n       fremmedspråk i utlandet. OsloMet tilbyr utveksling på en rekke\n       universiteter i utlandet. Dersom du er interessert i dette oppfordrer vi\n       til å lese mer på OsloMet sine utvekslingssider. Godkjente\n       utvekslingsopphold er fra 3 måneder til ett år og vil inngå som en\n       forhåndsgodkjent del av utdanningen din.\n       <br />\n       <a\n         class=\"button\"\n         href=\"https://student.oslomet.no/utveksling-femarig-grunnskolelererutdanning\"\n         target=\"_blank\"\n         id=\"Utveksling\"\n       >\n         Les mer om utveksling{\" \"}\n       </a>\n       <br />\n       For begge studieretninger har studentene mulighet til å fordype seg i ett\n       eller flere valgfrie emner. Valgmulighetene er listet opp under.\n     </p>\n   </div>\n );\n const infoTekst_3_studie_aar_2 = (\n   <div>\n     <h2 id=\"Studieaar\">\n       Mulighet for studier i utlandet og fordypning i valgfrie emner\n     </h2>\n     <p id=\"AarBeskrivelse\">\n       I det tredje studieår, 5. semester kan du velge fordypning i faget fra 4.\n       semester. Eventuelt kan du velge det faget du ikke har hatt i første og\n       andre studieår av norsk, matematikk eller engelsk. Et tredje alternativ\n       er å studere fremmedspråk i utlandet; tysk, fransk eller spansk. I\n       6.semester tilbyr OsloMet utveksling til en rekke universiteter i\n       utlandet. Dersom du er interessert i dette oppfordrer vi til å lese mer\n       på OsloMet sine utvekslingssider. Godkjente utvekslingsopphold er fra 3\n       måneder til ett år og vil inngå som en forhåndsgodkjent del av\n       utdanningen din.\n       <br />\n       <a\n         class=\"button\"\n         href=\"https://student.oslomet.no/utveksling-femarig-grunnskolelererutdanning\"\n         target=\"_blank\"\n         id=\"Utveksling\"\n       >\n         Les mer om utveksling{\" \"}\n       </a>\n       <br />\n       Valgmulighetene er listet opp under.\n     </p>\n   </div>\n );\n \n  \n \n\n    \n\n    return ( \n        \n        \n        <>\n\n    <div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n    <h3>2. Studieår</h3>\n\n       {//viser ulik tekst avhengig av klasseID valgt\n            klasseId===1 ? infoTekst_2_studie_aar_1 : infoTekst_2_studie_aar_2\n\n       }\n\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n            <h5>Semester 3</h5>\n            <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p>\n            <div className=\"fag\">\n            { //sjekker om det er 5-10, hvis det er det vil den filtrer i ObligFagSemester2\n                klasseId ===2  ?(\n                    <ObligFagSemester2 fagNavnStudierettning={fagNavnStudierettning} semester={3} answer={klasseId}/>\n                ) :(\n\n                    // det sorterte arrayet mappes\n                    <ObligFagSemester id=\"Gul\" semester={3} answer={klasseId}/>\n                )\n        }\n           \n            \n        \n        </div>\n        </div>\n\n            <div className=\"Forti\">\n\n            <h5>Semester 4</h5>\n        <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p> \n        <div className='fag'>\n        \n        {\n            <TvungenMulighet error={error} isPending={isPending} activeButtonTvungen={activeButtonTvungen} setActiveButtonTvungen={setActiveButtonTvungen} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull2} fagNavn={fagNavn}  klassetrinn={klassetrinn} sorted={sorted} semester={4} masterId={masterId}>{fagNavn}</TvungenMulighet>\n\n        }\n\n        {\n            //Hvis valgt masterId er 1,2,10,11,12: hvis alle fag for semesteret\n            //fagNavn.includes('Profesjonsrettet pedagogikk')\n            //bruker samme active button som sem5, må sjekkes ut\n            //husk begynner vises her også, vet ikke om riktig enda\n            (\n                masterId ===1  || masterId ===2  || \n                masterId ===3  ||\n                masterId ===11 ||masterId ===12 || masterId ===13 || masterId ===14 || masterId ===15 || \n                masterId ===16 || masterId ===17 || masterId ===24 || masterId ===25 || \n                masterId ===26 || masterId ===27 \n            ) \n        ? \n            (\n                <Semester \n                error={error} isPending={isPending}\n                    setMuligheterId={setMuligheterId1} \n                    muligheterId={muligheterId1}\n                    setValgtFag={setValgtFag4} \n                    valgtFag={valgtFag4} \n                    klassetrinn={klassetrinn} \n                    semester={4} \n                    klasseId ={klasseId}\n                    activeButton={activeButton}\n                    setActiveButton ={setActiveButton}\n                    setForceRender = {setTom}\n\n                    \n                />\n            ) \n        : \n            null\n        }\n    </div>  \n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n    <h3>3. Studieår</h3>\n\n    { //infotekst avhengig av valgt klasseID\n        klasseId===1 ? infoTekst_3_studie_aar_1 : infoTekst_3_studie_aar_2\n    }\n\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n            <h5>Semester 5</h5>\n            <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p> \n\n            \n            <div className='fag'>\n        {\n            //hvis den ikke er begynnerlæring så må denne vises\n            masterId!==3&&\n            <TvungenMulighet error={error} isPending={isPending}  activeButtonTvungen={activeButtonTvungen2} setActiveButtonTvungen={setActiveButtonTvungen2} activeButton={activeButton} setActiveButton ={setActiveButton} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull2} semesterList7={mulighetTull} klassetrinn={klassetrinn} sorted={sorted} semester={5} masterId={masterId}/>\n        } \n        {\n            //hvis den er begynnerlæring så må denne vises\n            masterId===3&&\n            <Muligheter error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton4} setActiveButton ={setActiveButton4} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull2} klassetrinn={klassetrinn} sorted={sorted} semester={5} masterId={masterId}/>\n        } \n\n        {\n            //hvis den er noen av pedagogikkfagene, vis Semester\n            (\n                masterId ===12 || masterId ===13 ||\n                masterId ===14 || masterId ===25 || \n                masterId ===26 || masterId ===27\n            ) \n        ? \n            \n               \n                //Viser nå når man velger fag i 4 semester, baserer seg på muligheterId1\n                <TvungenMulighet  error={error} isPending={isPending}  activeButtonTvungen={setActiveButton2} setActiveButtonTvungen={setActiveButton2} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull2} fagNavn={fagNavn}  klassetrinn={klassetrinn} sorted={sorted} semester={5} masterId={muligheterId1}/>\n        : \n         null \n        }\n\n        {\n            //mat og helse\n           muligheterId1===29 &&\n           \n            <Semester \n            error={error} \n            isPending={isPending}\n            activeButton={activeButton} \n            setActiveButton ={setActiveButton}  \n            setMuligheterId={setMuligheterId2} \n            muligheterId={muligheterId2} \n            klassetrinn={klassetrinn} \n            semester={5} \n            klasseId ={klasseId}\n            setForceRender = {setTom}\n        />\n           \n        }\n            </div>\n        </div>\n        \n        <div className=\"Forti\">\n        <h5>Semester 6</h5>\n        <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p> \n        <div className='fag'>\n        {\n            //hvis den ikke er begynner så må denne vises, BEGYNNER ER IKKE 12? SKJØNNER IKKE DENNE!!\n            masterId ===11 || masterId ===12 || \n            masterId ===13 ||masterId ===14  ||\n            masterId ===24 || masterId ===25 || \n            masterId ===26 || masterId ===27  ?\n            (\n\n                <TvungenMulighet  error={error} isPending={isPending}  activeButtonTvungen={setActiveButton2} setActiveButtonTvungen={setActiveButton2} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull2} fagNavn={fagNavn}  klassetrinn={klassetrinn} sorted={sorted} semester={6} masterId={masterId}/>\n\n            ): \n            //gjort 21.05, byttet muligheter mede tvungen for å få gul knpp\n            (\n                //<Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull2} activeButton={activeButton2} setActiveButton ={setActiveButton2} klassetrinn={klassetrinn} sorted={sorted} semester={6} masterId={masterId}/>\n\n                <TvungenMulighet  error={error} isPending={isPending}  activeButtonTvungen={setActiveButton2} setActiveButtonTvungen={setActiveButton2} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull2} fagNavn={fagNavn}  klassetrinn={klassetrinn} sorted={sorted} semester={6} masterId={masterId}/>\n            )\n               \n\n        } \n\n       \n\n       \n\n        {(\n            //masterId ===1  || masterId ===2  || masterId ===3  ||  || masterId ===5  ||\n            masterId ===1  || masterId ===2  ||  masterId ===3 || masterId ===4 || fagNavn.includes('RLE')  ||fagNavn.includes('Kroppsøving')|| \n            //masterId ===6  || masterId ===7  || masterId ===8  || masterId ===9  || masterId ===10 || \n            fagNavn.includes('Kunst og håndverk')  || fagNavn.includes('Musikk')  ||fagNavn.includes('Naturfag')|| fagNavn.includes('Samfunnsfag')  || \n\n            fagNavn.includes('Pedagogikk') || masterId === 18 ||\n            masterId ===19 || masterId ===20 || masterId ===21 || masterId ===22 || masterId ===23 \n         ) \n         ? \n         (//semester6psyko vise pedagogikk\n             <>\n             \n            <Semester6Psyko error={error} isPending={isPending} setForceRender = {setForceRender} forceRender={forceRender} masterId={masterId} setMasterFagId={setMasterFagId} activeButton={activeButton2} setActiveButton ={setActiveButton2} setMuligheterId={setMuligheterId3} muligheterId={muligheterId3} klassetrinn={klassetrinn} semester={6} klasseId ={klasseId}/>\n           \n                <Semester \n                error={error} \n                isPending={isPending}\n                setMuligheterId={setMuligheterId3} \n                muligheterId={muligheterId3}\n                klassetrinn={klassetrinn} \n                semester={4} \n                klasseId ={klasseId}\n                activeButton={activeButton2}\n                setActiveButton ={setActiveButton2}\n                setForceRender = {setForceRender}\n                masterId = {masterId}\n                \n                \n                \n            />\n            </>\n        ) \n        : null\n        }\n    \n    </div>  \n        </div>\n        {console.log('semesterList7', semesterList7)}\n\n\n\n        \n        </div>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n    <h3>4. Studieår</h3>\n\n    <h2 id=\"Studieaar\">Forberedelser til masteroppgaven</h2>\n    <p id=\"AarBeskrivelse\">\n        Emnene i dette studieåret er som regel avgjørende for hvilke muligheter du har til masteroppgaven.\n\n    </p>\n\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n        \n        <h5>Semester 7</h5>\n        <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p> \n        <div className='fag'>\n        \n        {\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setRandom} activeButton={activeButton7} setActiveButton ={setActiveButton7} setIstrue={setIstrue} valg7Master={valg7Master} setValg7Master={setValg7Master} setSemesterList7={setSemesterList7}  klassetrinn={klassetrinn} sorted={sorted} semester={7} masterId={masterId}/>\n            \n        } \n\n        { klasseId === 2 &&\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setRandom} activeButton={activeButton7} setActiveButton ={setActiveButton7} setIstrue={setIstrue} valg7Master={valg7Master} setValg7Master={setValg7Master} setSemesterList7={setSemesterList7}  klassetrinn={klassetrinn} sorted={sorted} semester={7} masterId={studieRetning}/>\n            \n        } \n      \n\n        {\n            <Semester error={error} isPending={isPending} setForceRender = {setTom} activeButton={activeButton7} setActiveButton ={setActiveButton7} setSemesterList7={setSemesterList7}   klassetrinn={klassetrinn} semester={7} klasseId ={klasseId}/>\n        \n        }\n        {\n            <ObligFagSemester setSemesterList7={setSemesterList7}   semester={7} answer={klasseId}/>\n        }\n        {\n            (\n            //klassetrinn = 2, valgt  masterFag Norsk Engelsk Matte\n            klasseId===2 || masterId === 12 || masterId === 13 || masterId === 14\n            //siste endring: byttet masterId fra activeButton til muligheterId2\n            ) \n        ? \n            (\n                \n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setRandom} activeButton={activeButton7} setActiveButton ={setActiveButton7} setIstrue={setRandom} valg7Master={valg7Master} setValg7Master={setValg7Master} setSemesterList7={setSemesterList7}  klassetrinn={klassetrinn} sorted={sorted} semester={7} masterId={muligheterId2}/>\n            ) \n            \n        :  \n            \n        null\n            \n        }\n        {\n            //begynner oplæring for norsk Engelsk Matte\n            masterId === 1 ||\n            masterId === 2 ||\n            masterId === 4 ?\n            (\n                //setValg7Master\n                //setTom\n                //setTom isteden gjør at den ikke kommer i semester 8, og fucker opp semester 10\n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setRandom} activeButton={activeButton7} setActiveButton ={setActiveButton7} setIstrue={setIstrue} valg7Master={valg7Master} setValg7Master={setValg7Master} setSemesterList7={setSemesterList7}  klassetrinn={klassetrinn} sorted={sorted} semester={7} masterId={begynnerLaring}/>\n            ) : null\n        }\n        \n        </div>\n    </div>\n\n    <div className=\"Forti\">\n        <h5>Semester 8</h5>\n        <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p> \n        <div className='fag'>\n        \n        {\n            //<Muligheter setSemesterList7={setSemesterList7}  klassetrinn={klassetrinn} sorted={sorted} semester={8} masterId={masterId}/>\n        } \n\n        {masterId === 1 && (\n            <Semester  error={error} isPending={isPending} setForceRender = {setTom} activeButton={activeButton8} setActiveButton ={setActiveButton8} setSemesterList7={setSemesterList7} klassetrinn={klassetrinn} semester={8} klasseId ={klasseId}/>\n        )\n        }\n        {\n            \n            <ObligFagSemester setSemesterList7={setSemesterList7} semester={8} answer={klasseId}/>\n\n        }\n        {\n            //Nå vises ikke fagene for semeseter 8-9, tror id feil, kommer om man uncommenter mulighet øverst\n            (\n            //om klasseId klassetrinn 5-10) og pedagogikk 1-7\n            klasseId===2 //|| masterId === 12 || masterId === 13 || masterId === 14\n\n            /*\n              kommentert ut var tidligeere, beholder i tilfelle ny løsmninng er bug\n            masterId === 12 || masterId === 13 || masterId === 14 || masterId === 15 || masterId === 16 || masterId === 17 || masterId === 18 || masterId === 19 || masterId === 20 || masterId === 21 || masterId === 22 || masterId === 23 || masterId === 24 || masterId === 25 || masterId === 26 || masterId === 27*/\n             \n            ) \n        ? \n            (\n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton8} setActiveButton ={setActiveButton8} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setSemesterList7} klassetrinn={klassetrinn} sorted={sorted} semester={8} masterId={valg7Master}/>\n                ) \n        : \n               null\n\n        }\n\n        {\n            //DEENNE ER FOR NORSK ENG MATTE 1-7, for begynner opplæring\n            //om semster er 1, og fag er norsk matte eller engelsk vis begynneropplæring\n            (\n                klasseId===1 || masterId === 1 || masterId === 2 || masterId === 4\n \n            ) \n        ? \n            (\n                //denne\n                //masterId egentlig velg7master\n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton8} setActiveButton ={setActiveButton8} setIstrue={setRandom} setValg7Master={setEmpty} setSemesterList7={setSemesterList7} klassetrinn={klassetrinn} sorted={sorted} semester={8} masterId={valg7Master}/>\n            )\n            //om muligheter over er true \n        : empty &&klasseId===1 ?(\n\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton8} setActiveButton ={setActiveButton8} setIstrue={setRandom} setSemesterList7={setSemesterList7}  klassetrinn={klassetrinn} sorted={sorted} semester={8} masterId={masterId}/>\n        ) : null\n\n        }\n        \n        </div>\n        </div>\n    </div>\n    </div>\n    </div>\n\n    <div class=\"row\">\n    <div class=\"column\" id=\"Hundre\">\n    <h3>5. Studieår</h3>\n\n    <h2 id=\"Studieaar\"> Undervisningsfag og masteroppgaven</h2>\n      <p id=\"AarBeskrivelse\">\n        I 9. semester er pedagogikk og elevkunnskap obligatorisk. Det siste\n        semesteret går utelukkende til arbeid med masteroppgaven.\n       \n      </p>\n        <div className=\"obligatoriske semestre\">\n            <div classname=\"Seksti\">\n\n        <h5>Semester 9</h5>\n        <p id=\"SemesterBeskrivelse\">Høstsemester, 30 studiepoeng</p> \n        <div className='fag'>\n        \n        {\n            muligheterId3 &&\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setRandom} setValg7Master={setSemester9Master} setSemesterList7={setSemesterList7}  klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={masterFagId}/>\n        } \n        {//hvis man velger pedagogikk\n            //evt masterId === pedagogikk ider\n            //muligheterId2 &&\n            masterId === 12 ||masterId === 13 || masterId === 14 ||\n            masterId === 25 ||masterId === 26 || masterId === 27 ?(\n\n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setRandom} setValg7Master={setSemester9Master} setSemesterList7={setSemesterList7}  klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={masterId}/>\n            ): null\n        } \n\n        {masterId ===1 && (\n            <Semester  error={error} isPending={isPending} setForceRender = {setTom} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setRandom} setSemesterList7={setSemesterList7} klassetrinn={klassetrinn} semester={9} klasseId ={klasseId}/>\n        )\n        }\n        {\n            <ObligFagSemester setSemesterList7={setSemesterList7} semester={9} answer={klasseId}/>\n        }\n        {\n            //om det er semeseter 2\n            (\n            /*\n              kommentert ut var tidligeere, beholder i tilfelle ny løsmninng er bug\n            masterId === 12 || masterId === 13 || masterId === 14 || masterId === 15 || masterId === 16 || masterId === 17 || masterId === 18 || masterId === 19 || masterId === 20 || masterId === 21 || masterId === 22 || masterId === 23 || masterId === 24 || masterId === 25 || masterId === 26 || masterId === 27*/\n             //om klasseId (klassetrinn 1-7, eller klassetrinn 5-10) og pedagogikk 1-7\n             klasseId===2 \n            ) \n        ? \n            (\n                \n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setRandom} setValg7Master={setSemester9Master} setSemesterList7={setSemester9Resultat} klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={valg7Master}/>\n            ) \n        : \n        null\n                //<Muligheter setValg7Master={setSemester9Master} setSemesterList7={setSemester9Resultat}  klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={masterId}/>\n\n    \n        }\n\n        \n\n        {\n            //for begynner opplæring\n            //om semster er 1, og begynneropplæring blir valgt i 7, vis valget\n            (\n            //klasseId === 1 && valg7Master === 3 \n            klasseId === 1 && valg7Master === 3 \n\n \n            ) \n        ? \n            (\n                //denne gjelder begynner\n                //setRandom\n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setRandom} setValg7Master={setSemester9Master} setSemesterList7={setSemester9Resultat} klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={valg7Master}/>\n                \n\n                ) \n                //om man velger norsk didaktikk\n        :  klasseId === 1 && isTrue === 1 ?(\n            //hvis semester er 1, men begynneropplæring ikke blir valgt i 7, vis valget pluss begynner\n            <>\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setRandom} setValg7Master={setSemester9Master} setSemesterList7={setSemester9Resultat} klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={valg7Master}/>\n\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setSem9Id} setValg7Master={setTom} setSemesterList7={setTom} klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={begynnerLaring}/>\n\n            </>\n            \n        )\n        //velger man begynner vil verdiene settes, den andre if setningen er vanlige fag \n        : klasseId === 1 &&  isTrue === 3 ?(\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setRandom} setValg7Master={setSemester9Master} setSemesterList7={setSemester9Resultat} klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={begynnerLaring}/>\n\n        )   \n        : klasseId === 1 ?(\n\n            <>\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setTom} setValg7Master={setTom} setSemesterList7={setTom} klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={begynnerLaring}/>\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton9} setActiveButton ={setActiveButton9} setIstrue={setRandom} setValg7Master={setSemester9Master} setSemesterList7={setSemester9Resultat} klassetrinn={klassetrinn} sorted={sorted} semester={9} masterId={valg7Master}/>\n    \n            </>\n        ):null\n        }\n\n        \n        \n\n        \n        </div>\n    </div>\n        \n\n    <div className=\"Forti\">\n        <h5>Semester 10</h5>\n        <p id=\"SemesterBeskrivelse\">Vårsemester, 30 studiepoeng</p> \n        <div className='fag'>\n        {//masterFag id\n            console.log('isTrue', isTrue)}\n\n        \n        \n        { \n            \n           //isTrue =3 BETYR at man har valgt begynner i sem 7\n            //activeButton9 = 14 er begynner i sem 9\n            isTrue !==3 && activeButton9 ===14 ?  <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton10} setActiveButton ={setActiveButton10} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={masterId}/>\n            :\n            \n            masterFagId &&klasseId ===1  ? \n            //må sette empty i sem 7\n            //isTrue ===3  ? \n\n            (\n                \n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton10} setActiveButton ={setActiveButton10} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={semester9Master}/>\n                \n\n                \n            ) :\n            muligheterId2&& klasseId ===1  ?\n            (\n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton10} setActiveButton ={setActiveButton10} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={semester9Master}/>\n\n            )\n            : klasseId ===1 ?(\n            <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton10} setActiveButton ={setActiveButton10} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={valg7Master}/>\n            \n            ): null//for å fjerne stygge grønt rundt\n\n            //prøv: sjekk om begynner er gyldig i semester 8, er den det gi mulighet for begynner\n            \n        } \n        {\n            console.log('sem9Id', sem9Id)\n        }\n\n        {\n           // activeButton9 ===4 && \n        }\n\n      {/* \n          isTrue ===1 && activeButton9 ===14 ?\n          <Muligheter setConditionalSem9={setConditionalSem9} activeButton={activeButton10} setActiveButton ={setActiveButton10} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={masterId}/>\n            :\n            null\n       */}\n\n        {/* \n        //funker på vanlige fag( ikke norsk, da dobles de)\n        //funker også om man velger pedagogikk i n\n         randomVar !== masterId ? (\n            <Muligheter setIstrue={setRandom} setValg7Master setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={valg7Master}/>\n         )   : null\n         */}\n        {\n            //om randomVar, som basicly er id, ikke er lik valg7master, som også er id, skal denne vises\n            //glitcher når man velger spes, så norsk, da forsvinner norsk\n           \n             randomVar !== valg7Master  ? \n             (\n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton10} setActiveButton ={setActiveButton10} setIstrue={setTom} setValg7Master={setTom} setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={valg7Master}/>\n             )   \n             : null\n    \n    \n            }\n        {\n            //hvis \n            //klasseId ===2 && masterFagId gjør at den automatisk kommer i semster 10, men vises ikke auto i 9\n            klasseId ===2\n            ? (\n                \n                <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton10} setActiveButton ={setActiveButton10} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={semester9Master}/>\n\n               //<Muligheter setValg7Master setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={semester9Master}/>\n\n           ) : klasseId ===2 && masterFagId   ?\n           (\n               //masterId settes ikke i 9\n               //<Muligheter setValg7Master setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={semester9Master}/>\n\n               <Muligheter  error={error} isPending={isPending} setConditionalSem9={setConditionalSem9} activeButton={activeButton10} setActiveButton ={setActiveButton10} setIstrue={setRandom} setValg7Master={setTom} setSemesterList7={setMulighetTull}  klassetrinn={klassetrinn} sorted={sorted} semester={10} masterId={masterId}/>\n\n           ) : null\n       }\n        \n\n        \n        \n        \n        </div>\n        </div>\n        </div>\n    </div>\n    </div>\n\n    <div class=\"row\" id=\"Masteremner\">\n    <div class=\"column\" id=\"Hundre\">\n    <h3>Oppsummering av studieløp</h3>\n    </div>\n    <div class=\"column\" id=\"Tjue\">\n    </div>\n\n    <div class=\"column\" id=\"Atti\">\n        <h2 id=\"Left\">Under ser du hvordan studieløpet ditt vil bli og valgt masteremne</h2>\n        <p id=\"Beskrivelse\">Her kan du se en oppsumering av studieløpet ditt. Nederst finner du en mulighet til å lagre og \n            printe ut oppsummeringen slik at du kan ta vare på denne.\n        </p>\n\n        {\n            // Tilbakemelding til bruker dersom den mangler valg\n            (activeButtonTvungen  && activeButton && activeButton2 && activeButton7 && activeButton8 && activeButton9 && activeButton10)\n            ||\n            (activeButtonTvungen2 && activeButton && activeButton2 && activeButton7 && activeButton8 && activeButton9 && activeButton10)\n            ||\n            (activeButtonTvungen && activeButtonTvungen2 && activeButton2 && activeButton7 && activeButton8 && activeButton9 && activeButton10)\n            || \n            (activeButton && activeButton2 && activeButton7 && activeButton8 && activeButton9 && activeButton10)\n            \n            ?\n            null\n            :\n            <ValideringAlert/>\n\n        }\n\n        {\n            // Validering som gir tilgang til side for oppsummering\n            (activeButtonTvungen  && activeButton && activeButton2 && activeButton7 && activeButton8 && activeButton9 && activeButton10)\n            ||\n            (activeButtonTvungen2 && activeButton && activeButton2 && activeButton7 && activeButton8 && activeButton9 && activeButton10)\n            ||\n            (activeButtonTvungen && activeButtonTvungen2 && activeButton2 && activeButton7 && activeButton8 && activeButton9 && activeButton10)\n            || \n            (activeButton && activeButton2 && activeButton7 && activeButton8 && activeButton9 && activeButton10)\n            \n            ?\n            <CustomButton onClick={() => setVidere(true)}  id=\"Oppsummering\">Se oppsummering</CustomButton>\n            :\n            <CustomButton onClick={() => setVidere(false)} id=\"Oppsummering\">Se oppsummering</CustomButton>\n          \n        }\n\n    </div>  \n</div>\n\n        { //Viser hele studieløpet om man trykker på videreknappen\n        videre &&\n       \n        <Resultat \n            answer={klasseId} \n            klassetrinn={klassetrinn} \n            sorted={sorted} \n            activeButton={activeButton} \n            muligheterId1={muligheterId1} \n            muligheterId2={muligheterId2} \n            muligheterId3={muligheterId3} \n            masterId ={masterId}\n            semesterList7={semesterList7}\n            mulighetTull={mulighetTull}\n            fagNavn={fagNavn}\n            valg7Master={valg7Master}\n            klasseId={klasseId}\n            semester9Resultat={semester9Resultat}\n            activeButton10={activeButton10}\n            activeButton9={activeButton9}\n            activeButton2={activeButton2}\n            activeButton4={activeButton4}\n\n        />\n            \n       \n        }\n\n    </>\n        \n     );\n     \n};\n\nexport default VelgMuligheter;","/Users/vikke/bachelor/src/oblig-fag/ObligFagSemester2.js",["138"],"import { useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport useFetch from \"../useFetch\";\nconst _ = require(\"lodash\");\n\nconst ObligFagSemester2 = ({ answer, semester, fagNavnStudierettning }) => {\n  \n  const { data: klassetrinn, error, isPending } = useFetch( `http://localhost:5000/api/obligfag/`);\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n\n\n\n\n  \n  //lager et array som sortrer etter semester\n  const iteratees = (obj) => obj.semester;\n  const sorted = _.sortBy(klassetrinn, iteratees);\n\n  //filtrer ut PEL\nlet filtered_klassetrinn = _.filter(sorted, function (klasse) {\n  return (\n     \n   \n    klasse.fagnavn === 'Pedagogikk og elevkunnskap 1, emne 1'||\n    klasse.fagnavn === 'Pedagogikk og elevkunnskap 1, emne 2'\n    \n  );\n});\n  \n\n  \n  return (\n    <>\n      <>\n        {isPending && <div>Loading...</div>}\n        {error && <div>{error}</div>}\n        {\n          // det sorterte arrayet mappes\n          sorted.map((oblig) =>\n            //om klasseId er det samme som answer fra KlasseList =>\n            oblig.klasseId === answer &&\n            oblig.semester === semester &&\n            oblig.fagnavn.includes(fagNavnStudierettning)\n            \n             ? (\n              <>\n                <CustomButton id=\"Videre\" key={oblig.id}>\n                  {oblig.fagnavn}{\" \"}\n                </CustomButton>\n\n                <InfoButton\n                  className=\"infoknapp\"\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    setKlasseId(oblig.klasseId);\n                    setURL(oblig.url);\n                  }}\n                ></InfoButton>\n              </>\n            ) : null\n          )\n        }\n        {\n          // denne viser PEL\n          filtered_klassetrinn.map((oblig) =>\n            //om klasseId er det samme som answer fra KlasseList =>\n            oblig.klasseId === 2 &&\n            oblig.semester === semester \n            \n            \n             ? (\n              <>\n                <CustomButton id=\"Videre\" key={oblig.id}>\n                  {oblig.fagnavn}{\" \"}\n                </CustomButton>\n\n                <InfoButton\n                  className=\"infoknapp\"\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(oblig.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(oblig.emnekode);\n                    setStudiepoeng(oblig.studiepoeng);\n                    setKlasseId(oblig.klasseId);\n                    setURL(oblig.url);\n                  }}\n                ></InfoButton>\n              </>\n            ) : null\n          )\n        }\n        \n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default ObligFagSemester2;\n","/Users/vikke/bachelor/src/VelgMuligheter/ValgtMulighet.js",[],"/Users/vikke/bachelor/src/VelgMuligheter/Muligheter.js",["139","140","141"],"import React, { useEffect, useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport Modal from \"../Modal/Modal\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport className from \"../Semester/Semester6Psyko\";\n\nconst Muligheter = ({\n  activeButton,\n  setActiveButton,\n  masterId,\n  setIstrue,\n  valg7Master,\n  setValg7Master,\n  setFag,\n  setSemesterList7,\n  semesterList7,\n  semester,\n  klassetrinn,\n  sorted,\n  setConditionalSem9,\n  error,\n  isPending\n}) => {\n\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n    //alert(e.id);\n  };\n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  //const [semester, setSemester] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n  const [klasseId, setKlasseId] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <>\n      {\n        isPending && <div>Loading...</div>\n      }\n      {\n        error && <div>{error}</div>\n      }\n        {klassetrinn &&\n          sorted.map((klasse) => {\n            const className = activeButton === klasse.id ? \"red\" : \"\";\n\n            return (\n              //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster)\n              klasse.masterFagId === masterId &&\n              klasse.semester === semester && (\n                <>\n                  <CustomButton\n                    //setter fargen på den valgte fagveien\n                    inverted={className}\n                    key={klasse.id}\n                    fag={klasse.fagnavn}\n                    activeButton={activeButton}\n                    onClick={() => {\n                      onSideBtnClick(klasse);\n                      setSemesterList7(klasse.id);\n                      setValg7Master(klasse.masterFagId);\n                      setIstrue(klasse.masterFagId);\n                      setConditionalSem9(klasse.masterFagId);\n                    }}\n                  >\n                    {klasse.fagnavn}\n                  </CustomButton>\n\n                  <InfoButton\n                    onClick={() => {\n                      setIsOpen(true);\n                      setFagnavn(klasse.fagnavn);\n                      //setSemester(oblig.semester)\n                      setEmneKode(klasse.emnekode);\n                      setStudiepoeng(klasse.studiepoeng);\n                      setKlasseId(klasse.klasseId);\n                      setURL(klasse.url);\n                    }}\n                  ></InfoButton>\n                </>\n              )\n            );\n          })}\n      </>\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          {\n            semester === 10 ? null \n            :\n            <li>Fagside: \n              <a href={URL} target=\"_blank\" rel=\"noreferrer\" > Link til fagside </a>\n            </li> \n          }\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Muligheter;\n","/Users/vikke/bachelor/src/VelgMuligheter/Resultat.js",[],"/Users/vikke/bachelor/src/Semester/Semester.js",[],"/Users/vikke/bachelor/src/Print/Print.js",[],"/Users/vikke/bachelor/src/Semester/Semester6Psyko.js",["142"],"import React, { useEffect, useState } from \"react\";\nimport CustomButton from \"../CustomButton/CustomButton\";\nimport InfoButton from \"../CustomButton/InfoButton\";\nimport Modal from \"../Modal/Modal\";\nimport \"./Semester.css\";\nconst _ = require(\"lodash\");\n\nconst Semester6Psyko = ({\n  klasseId,\n  semester,\n  klassetrinn,\n  setMuligheterId,\n  activeButton,\n  farge,\n  setActiveButton,\n  setMasterFagId,\n  setSemesterList7,\n  setFag,\n  forceRender,\n  setForceRender,\n  setValgtFag,\n  messages,\n  fag,\n  error,\n  isPending\n}) => {\n  //filtrer ut årstudium\n  let filtered_klassetrinn = _.filter(klassetrinn, function (klasse) {\n    return (\n      klasse.fagnavn !== \"Årstudium norsk, del 2\" &&\n      klasse.fagnavn !== \"Årstudium matte, del 2\" &&\n      klasse.fagnavn !== \"Årstudium engelsk, del 2\" &&\n      klasse.fagnavn !== \"Norsk tegnspråk 2\"\n    );\n  });\n  //\n  function handleMuligheter(ele) {\n    setMuligheterId(ele);\n  }\n  const onSideBtnClick = (e) => {\n    setActiveButton(e.id);\n\n    //setActiveButton(e.masterFagId);\n  };\n\n\n\n //om semester blir trykket på, blir semester6psyko resatt slik at den ikke vises i sem 9\n useEffect(() => {\n  forceRender===false && setMasterFagId('');\n\n }, [forceRender]);\n   \n\n  const [fagnavn, setFagnavn] = useState();\n  const [URL, setURL] = useState();\n  const [emnekode, setEmneKode] = useState();\n  const [studiepoeng, setStudiepoeng] = useState();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n    {\n      isPending && <div>Loading...</div>\n    }\n    {\n      error && <div>{error}</div>\n    }\n\n      {klassetrinn &&\n        filtered_klassetrinn.map((klasse) => {\n          const className = activeButton === klasse.id ? \"red\" : \"\";\n\n          return (\n            //oblig.MasterFagId === masterId &&\n            //om semester = 5 vis semester og semeseter fag\n            klasse.semester === semester &&\n            klasse.klasseId === klasseId && (\n              <>\n                <CustomButton\n                  inverted={className}\n                  key={klasse.id}\n                  semester={klasse.semester}\n                  klasseId={klasse.klasseId}\n                  onClick={() => {\n                    handleMuligheter(klasse.id);\n                    onSideBtnClick(klasse);\n                    setMasterFagId(klasse.masterFagId);\n                    //handleReset();\n                    setForceRender(true);\n                    \n                  }}\n                >\n                  {klasse.fagnavn}\n                </CustomButton>\n\n                <InfoButton\n                  onClick={() => {\n                    setIsOpen(true);\n                    setFagnavn(klasse.fagnavn);\n                    //setSemester(oblig.semester)\n                    setEmneKode(klasse.emnekode);\n                    setStudiepoeng(klasse.studiepoeng);\n                    //setKlasseId(oblig.klasseId)\n                    setURL(klasse.url);\n                  }}\n                ></InfoButton>\n              </>\n            )\n          );\n        })}\n\n      <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n        <h5>Info om {fagnavn}</h5>\n        <br />\n\n        <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n};\n\nexport default Semester6Psyko;\n","/Users/vikke/bachelor/src/VelgMuligheter/TvungenMulighet.js",["143","144"],"import React, {useEffect, useState} from 'react'\nimport CustomButton from '../CustomButton/CustomButton';\nimport  Modal  from '../Modal/Modal';\nimport InfoButton from '../CustomButton/InfoButton';\n\nfunction TvungenMulighet({\n    activeButton,\n    setActiveButton,\n    activeButtonTvungen,\n    setActiveButtonTvungen,\n    masterId,\n    setIstrue,\n    valg7Master,\n    setValg7Master,\n    setFag,\n    setSemesterList7,\n    semesterList7,\n    semester,\n    klassetrinn,\n    sorted,\n    error,\n    isPending\n    }) {\n\n        const onExist = (e) => {\n          setActiveButtonTvungen(e.id);\n          //alert(e.id);\n        };\n\n     const [fagnavn, setFagnavn] = useState();\n    const [URL, setURL] = useState();\n    //const [semester, setSemester] = useState();\n    const [emnekode, setEmneKode] = useState();\n    const [studiepoeng, setStudiepoeng] = useState();\n    const [klasseId, setKlasseId] = useState();\n    const [isOpen, setIsOpen] = useState(false);\n   \n\n    \n       \n    return (\n        <>\n          <>\n          {\n            isPending && <div>Loading...</div>\n          }\n          {\n            error && <div>{error}</div>\n          }\n            {klassetrinn &&\n              sorted.map((oblig) => {\n                const className = activeButton === oblig.id ? \"red\" : \"\";\n                    \n                return (\n                    //om masterFagId (fra database) er det samme som masterId (hentet fra VelgMaster)\n                    oblig.masterFagId === masterId &&\n                    oblig.semester === semester && (\n                      <>\n                        <CustomButton\n                          //setter fargen på den valgte fagveien\n                          inverted={className}\n                          key={oblig.id}\n                          fag={oblig.fagnavn}\n                          activeButtonTvungen={activeButtonTvungen}\n                          setActiveButtonTvungen={onExist(oblig)}\n                          style={{ backgroundColor: \"#FFDC00\" }}\n                          onClick={() => {\n                            setSemesterList7(oblig.id);\n                            setValg7Master(oblig.masterFagId);\n                            setIstrue(oblig.masterFagId);\n                          }}\n                        >\n                          {oblig.fagnavn}\n                        </CustomButton>\n                        <InfoButton\n                        onClick={() => {\n                          setIsOpen(true);\n                          setFagnavn(oblig.fagnavn);\n                          //setSemester(oblig.semester)\n                          setEmneKode(oblig.emnekode);\n                          setStudiepoeng(oblig.studiepoeng);\n                          setKlasseId(oblig.klasseId);\n                          setURL(oblig.url);\n                        }}\n                      ></InfoButton>\n                    </>\n                  )\n                );\n              })}\n          </>\n\n          <Modal open={isOpen} onClose={() => setIsOpen(false)}>\n          <h5>Info om {fagnavn}</h5>\n          <br />\n\n          <ul id=\"Innrykk\">\n          <li>Fagnavn: {fagnavn}</li>\n          <li>Emnekode: {emnekode}</li>\n          <li>Studiepoeng: {studiepoeng}</li>\n          <li>\n            Fagside:{\" \"}\n            <a href={URL} target=\"_blank\" rel=\"noreferrer\">\n              {\" \"}\n              Link til fagside{\" \"}\n            </a>\n          </li>\n        </ul>\n      </Modal>\n    </>\n  );\n}\n\nexport default TvungenMulighet;\n","/Users/vikke/bachelor/src/Helpers.js",[],"/Users/vikke/bachelor/src/Validering/ValideringAlert.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":null,"fatal":true,"severity":2,"message":"149","line":27,"column":2},{"ruleId":"150","severity":1,"message":"151","line":15,"column":31,"nodeType":"152","messageId":"153","endLine":15,"endColumn":36},{"ruleId":"150","severity":1,"message":"154","line":15,"column":38,"nodeType":"152","messageId":"153","endLine":15,"endColumn":47},{"ruleId":"150","severity":1,"message":"155","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":28},{"ruleId":"150","severity":1,"message":"156","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"157","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":37},{"ruleId":"150","severity":1,"message":"158","line":1,"column":47,"nodeType":"152","messageId":"153","endLine":1,"endColumn":56},{"ruleId":"150","severity":1,"message":"159","line":1,"column":25,"nodeType":"152","messageId":"153","endLine":1,"endColumn":33},{"ruleId":"150","severity":1,"message":"160","line":20,"column":9,"nodeType":"152","messageId":"153","endLine":20,"endColumn":26},{"ruleId":"150","severity":1,"message":"161","line":20,"column":10,"nodeType":"152","messageId":"153","endLine":20,"endColumn":18},{"ruleId":"150","severity":1,"message":"157","line":1,"column":16,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"162","line":28,"column":12,"nodeType":"152","messageId":"153","endLine":28,"endColumn":18},{"ruleId":"150","severity":1,"message":"163","line":28,"column":20,"nodeType":"152","messageId":"153","endLine":28,"endColumn":29},{"ruleId":"150","severity":1,"message":"164","line":38,"column":12,"nodeType":"152","messageId":"153","endLine":38,"endColumn":25},{"ruleId":"150","severity":1,"message":"165","line":54,"column":12,"nodeType":"152","messageId":"153","endLine":54,"endColumn":15},{"ruleId":"150","severity":1,"message":"166","line":68,"column":12,"nodeType":"152","messageId":"153","endLine":68,"endColumn":27},{"ruleId":"150","severity":1,"message":"167","line":75,"column":11,"nodeType":"152","messageId":"153","endLine":75,"endColumn":22},{"ruleId":"150","severity":1,"message":"168","line":86,"column":12,"nodeType":"152","messageId":"153","endLine":86,"endColumn":32},{"ruleId":"150","severity":1,"message":"169","line":86,"column":34,"nodeType":"152","messageId":"153","endLine":86,"endColumn":57},{"ruleId":"150","severity":1,"message":"170","line":105,"column":12,"nodeType":"152","messageId":"153","endLine":105,"endColumn":25},{"ruleId":"150","severity":1,"message":"171","line":105,"column":27,"nodeType":"152","messageId":"153","endLine":105,"endColumn":43},{"ruleId":"150","severity":1,"message":"172","line":111,"column":28,"nodeType":"152","messageId":"153","endLine":111,"endColumn":45},{"ruleId":"150","severity":1,"message":"173","line":113,"column":12,"nodeType":"152","messageId":"153","endLine":113,"endColumn":33},{"ruleId":"150","severity":1,"message":"174","line":113,"column":35,"nodeType":"152","messageId":"153","endLine":113,"endColumn":59},{"ruleId":"175","severity":1,"message":"176","line":177,"column":8,"nodeType":"177","endLine":182,"endColumn":9},{"ruleId":"175","severity":1,"message":"176","line":207,"column":8,"nodeType":"177","endLine":212,"endColumn":9},{"ruleId":"150","severity":1,"message":"161","line":17,"column":10,"nodeType":"152","messageId":"153","endLine":17,"endColumn":18},{"ruleId":"150","severity":1,"message":"158","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"178","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":17},{"ruleId":"150","severity":1,"message":"161","line":35,"column":10,"nodeType":"152","messageId":"153","endLine":35,"endColumn":18},{"ruleId":"179","severity":1,"message":"180","line":52,"column":5,"nodeType":"181","endLine":52,"endColumn":18,"suggestions":"182"},{"ruleId":"150","severity":1,"message":"158","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"161","line":34,"column":10,"nodeType":"152","messageId":"153","endLine":34,"endColumn":18},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 25 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 26 | \u001b[39m          \u001b[33m<\u001b[39m\u001b[33mh6\u001b[39m id\u001b[33m=\u001b[39m\u001b[32m\"FooterTekst\"\u001b[39m\u001b[33m>\u001b[39m\u001b[33mDenne\u001b[39m digitale veilederen \u001b[36mfor\u001b[39m fagvalg i grunnskolelærerutdanningene ved \u001b[33mOsloMet\u001b[39m er et bacheloroppgaveprosjekt på bestilling fra \u001b[33mInstitutt\u001b[39m \u001b[36mfor\u001b[39m grunnskole\u001b[33m-\u001b[39m og faglærerutdanning\u001b[33m.\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 27 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 28 | \u001b[39m              \u001b[33m<\u001b[39m\u001b[33mbr\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[33mVeilederen\u001b[39m er utviklet av studenter ved \u001b[33mInstitutt\u001b[39m \u001b[36mfor\u001b[39m informasjonsteknologi\u001b[33m,\u001b[39m \u001b[33mFakultet\u001b[39m \u001b[36mfor\u001b[39m teknologi\u001b[33m,\u001b[39m kunst og design\u001b[33m.\u001b[39m \u001b[0m\n\u001b[0m \u001b[90m 29 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 30 | \u001b[39m              \u001b[33m<\u001b[39m\u001b[33mbr\u001b[39m \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m \u001b[33mVeilederen\u001b[39m er utviklet av studenter ved \u001b[33mInstitutt\u001b[39m \u001b[36mfor\u001b[39m informasjonsteknologi\u001b[33m,\u001b[39m \u001b[33mFakultet\u001b[39m \u001b[36mfor\u001b[39m teknologi\u001b[33m,\u001b[39m kunst og design\u001b[33m.\u001b[39m \u001b[0m","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'isPending' is assigned a value but never used.","'FaEnvelopeOpenText' is defined but never used.","'logo2' is defined but never used.","'useReducer' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'handleScrollClick' is assigned a value but never used.","'klasseId' is assigned a value but never used.","'isOpen' is assigned a value but never used.","'setIsOpen' is assigned a value but never used.","'mulighetTull2' is assigned a value but never used.","'tom' is assigned a value but never used.","'conditionalSem9' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'activeButtonTvungen3' is assigned a value but never used.","'setActiveButtonTvungen3' is assigned a value but never used.","'activeButton5' is assigned a value but never used.","'setActiveButton5' is assigned a value but never used.","'setBegynnerLaring' is assigned a value but never used.","'begynnerLaringBoolean' is assigned a value but never used.","'setBegynnerLaringBoolean' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'className' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setMasterFagId'. Either include it or remove the dependency array. If 'setMasterFagId' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [forceRender, setMasterFagId]",{"range":"188","text":"189"},[1190,1203],"[forceRender, setMasterFagId]"]